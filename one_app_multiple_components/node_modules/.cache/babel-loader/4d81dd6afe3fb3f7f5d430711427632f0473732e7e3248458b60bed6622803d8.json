{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-49862d8e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"mainContainer\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"homeView\"\n};\nconst _hoisted_3 = {\n  class: \"labelSelectContainer\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"label\",\n  for: \"comboBox\"\n}, \"Who are you?\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  disabled: \"\",\n  value: \"\"\n}, \"Please select who you are\", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  class: \"labelSelectContainer\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"label\",\n  for: \"comboBox1\"\n}, \"Chat with:\", -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  disabled: \"\",\n  value: \"\"\n}, \"Please select who you want to chat with\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_chat_head = _resolveComponent(\"chat-head\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [!$data.ready ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"select\", {\n    class: \"selectStyle\",\n    id: \"comboBox\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.chatterName = $event),\n    onChange: _cache[1] || (_cache[1] = $event => $options.selectChatter($event))\n  }, [_hoisted_5, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.users, user => {\n    return _openBlock(), _createElementBlock(\"option\", null, _toDisplayString(user.name), 1 /* TEXT */);\n  }), 256 /* UNKEYED_FRAGMENT */))], 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelSelect, $data.chatterName]])]), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _withDirectives(_createElementVNode(\"select\", {\n    class: \"selectStyle\",\n    id: \"comboBox1\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.chatteeName = $event),\n    onChange: _cache[3] || (_cache[3] = $event => $options.selectChattee($event))\n  }, [_hoisted_8, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.chattees, chatteeUser => {\n    return _openBlock(), _createElementBlock(\"option\", null, _toDisplayString(chatteeUser.name), 1 /* TEXT */);\n  }), 256 /* UNKEYED_FRAGMENT */))], 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelSelect, $data.chatteeName]])])])) : _createCommentVNode(\"v-if\", true), $data.ready ? (_openBlock(), _createBlock(_component_chat_head, {\n    key: 1,\n    chattee: $data.chatteeName,\n    status: $data.chattee.status\n  }, null, 8 /* PROPS */, [\"chattee\", \"status\"])) : _createCommentVNode(\"v-if\", true), $data.ready ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 2,\n    class: \"BtnStyle btnRed\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.logOut && $options.logOut(...args))\n  }, \" Log-out \")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;;EACKA,KAAK,EAAC;AAAe;;;EACnBA,KAAK,EAAC;;;EACNA,KAAK,EAAC;AAAsB;gEAC7BC,oBAAwD;EAAjDD,KAAK,EAAC,OAAO;EAACE,GAAG,EAAC;GAAW,cAAY;gEAGpDD,oBAA4D;EAApDE,QAAQ,EAAR,EAAQ;EAACC,KAAK,EAAC;GAAG,2BAAyB;;EAM9CJ,KAAK,EAAC;AAAsB;gEAC7BC,oBAAuD;EAAhDD,KAAK,EAAC,OAAO;EAACE,GAAG,EAAC;GAAY,YAAU;gEAGnDD,oBAA0E;EAAlEE,QAAQ,EAAR,EAAQ;EAACC,KAAK,EAAC;GAAG,yCAAuC;;;;uBAhBnEC,oBA6BM,OA7BNC,UA6BM,IA5ByBC,WAAK,kBAAlCF,oBAoBI,OApBJG,UAoBI,GAnBJP,oBAQQ,OARRQ,UAQQ,GAPJC,UAAwD,kBAC5DT,oBAIO;IAJED,KAAK,EAAC,aAAa;IAACW,EAAE,EAAC,UAAU;+DAAUJ,iBAAW;IACrDK,QAAM,sCAAEC,sBAAa,CAACC,MAAM;MACtCC,UAA4D,qBAC5DV,oBAAqDW,6BAA7BT,WAAK,EAAbU,IAAI;yBAApBZ,oBAAqD,iCAApBY,IAAI,CAACC,IAAI;6FAHUX,iBAAW,OAQ/DN,oBAQQ,OARRkB,UAQQ,GAPJC,UAAuD,kBAC3DnB,oBAIO;IAJED,KAAK,EAAC,aAAa;IAACW,EAAE,EAAC,WAAW;+DAAUJ,iBAAW;IAC/DK,QAAM,sCAAEC,sBAAa,CAACC,MAAM;MAC7BO,UAA0E,qBAC1EhB,oBAAsEW,6BAAvCT,cAAQ,EAAvBe,WAAW;yBAA3BjB,oBAAsE,iCAA3BiB,WAAW,CAACJ,IAAI;6FAHNX,iBAAW,8CASCA,WAAK,kBAAtEgB,aAEYC;;IAFAC,OAAO,EAAElB,iBAAW;IAAGmB,MAAM,EAAEnB,aAAO,CAACmB;uFAGbnB,WAAK,kBAA3CF,oBAEO;;IAFCL,KAAK,EAAC,iBAAiB;IAAe2B,OAAK,yCAAEd,2CAAM;KAAE,WAE/D","names":["class","_createElementVNode","for","disabled","value","_createElementBlock","_hoisted_1","$data","_hoisted_2","_hoisted_3","_hoisted_4","id","onChange","$options","$event","_hoisted_5","_Fragment","user","name","_hoisted_6","_hoisted_7","_hoisted_8","chatteeUser","_createBlock","_component_chat_head","chattee","status","onClick"],"sourceRoot":"","sources":["/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/components/chattingApp/mainChattingApp.vue"],"sourcesContent":["<template>\n<div class=\"mainContainer\">\n  <div class=\"homeView\" v-if=\"!ready\">\n  <div class=\"labelSelectContainer\">\n      <label class=\"label\" for=\"comboBox\">Who are you?</label>\n  <select  class=\"selectStyle\" id=\"comboBox\" v-model=\"chatterName\"\n           @change=\"selectChatter($event)\">\n  <option disabled value=\"\">Please select who you are</option>\n  <option  v-for=\"user in users\">{{user.name}}</option>\n</select>\n\n    </div>\n\n  <div class=\"labelSelectContainer\">\n      <label class=\"label\" for=\"comboBox1\">Chat with:</label>\n  <select  class=\"selectStyle\" id=\"comboBox1\" v-model=\"chatteeName\"\n  @change=\"selectChattee($event)\">\n  <option disabled value=\"\">Please select who you want to chat with</option>\n  <option  v-for=\"chatteeUser in chattees\">{{chatteeUser.name}}</option>\n</select>\n\n    </div>\n</div>\n\n  <chat-head :chattee=\"chatteeName\" :status=\"chattee.status\" v-if=\"ready\">\n\n  </chat-head>\n  <button class=\"BtnStyle btnRed\" v-if=\"ready\" @click=\"logOut\">\n  Log-out\n</button>\n</div>\n\n</template>\n\n<script>\nimport axios from \"axios\";\nimport chatHead from \"@/components/chattingApp/chatHead\";\n\nexport default {\nname: \"mainChattingApp\",\ncomponents: {chatHead},\nmounted () {\n  this.fetchUsers();\n},\ndata(){\n  return {\n    users: [],\n    chatterName: '',\n    chatter: {},\n    chatteeName: '',\n    chattee: {},\n    chatters: [],\n    chattees: [],\n    ready: false,\n    usersUrl: \"http://localhost:3004/users\",\n    messagesUrl: \"http://localhost:3004/messages\"\n  }\n},\nmethods: {\n  fetchUsers(){\n    axios.get(this.usersUrl)\n    .then(response => {\n      this.users = response.data;\n      this.createChatters();\n    })\n    .catch( error => {\n      console.log(error)\n    })\n  },\n  createChatters(){\n    console.log(this.users)\n    this.chatters = [];\n    for (let i=0; i<this.users.length; i++) {\n      this.chatters.push(this.users[i]);\n    }\n  },\n  selectChattee(event){\n    for (let i=0; i<this.users.length; i++) {\n      if (this.users[i].name == this.chatteeName) {\n        this.chattee = this.users[i];\n      }\n    }\n\n    this.startChat();\n\n  },\n  selectChatter(event){\n    for (let i=0; i<this.users.length; i++) {\n      if (this.users[i].name == this.chatterName) {\n        this.chatter = this.users[i];\n      }\n    }\n    this.updateChattersChatteesLists();\n  },\n  updateChattersChatteesLists(){\n    this.chattees = [];\n    for (let i=0; i<this.users.length; i++) {\n      if (this.users[i].name != this.chatterName) {\n        this.chattees.push(this.users[i]);\n      }\n\n    }\n  },\n  startChat(){\n    this.chatter.status = 'Online'\n    axios({\n        method: 'put',\n        url:this.usersUrl + '/' + this.chatter.id,\n        data: this.chatter\n      })\n      .then(response => {\n\n        this.$toast.success('You are online',  {\n        position: \"bottom\"})\n      })\n\n      .catch(error => {\n\n        this.$toast.error('Error while logging you in', {\n        position: \"bottom\"});\n      })\n    this.ready=true;\n  },\n  logOut(){\n    this.chatter.status = 'Offline'\n    axios({\n        method: 'put',\n        url:this.usersUrl + '/' + this.chatter.id,\n        data: this.chatter\n      })\n      .then(response => {\n\n        this.$toast.success('You are Offline',  {\n        position: \"bottom\"})\n      })\n      .catch(error => {\n\n        this.$toast.error('Error while logging you in', {\n        position: \"bottom\"});\n      })\n    this.reset();\n  },\n  reset(){\n    this.users = [];\n    this.chatterName = '';\n    this.chatter = {};\n    this.chatteeName = '';\n    this.chattee = {};\n    this.chatters = [];\n    this.chattees = [];\n    this.ready =  false;\n    this.fetchUsers();\n    this.createChatters();\n  },\n}\n}\n</script>\n\n<style scoped>\n\n.mainContainer{\n  display: flex;\n  width: 800px;\n  height: 800px;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  position: absolute;\n  background-color: black;\n  left: 50%;\n  top: 50%;\n  -webkit-transform: translate(-50%, -50%);\n  transform: translate(-50%, -50%);\n\n}\n.homeView{\n  display: flex;\n  width: fit-content;\n  height: fit-content;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: #83b8f8;\n  border-radius: 10px;\n\n}\n\n.labelSelectContainer{\n  display: flex;\n  width: 800px;\n  height: fit-content;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n}\n\n.label{\n  font-size: 20px;\n  font-family: Arial;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  margin-left: 5px;\n  margin-right: 5px;\n}\n.selectStyle{\n  width: 350px;\n  height: 30px;\n  border-radius: 10px;\n  margin: 5px;\n  color: black;\n  border-color: green;\n   font-size: 16px;\n  font-family: Arial;\n}\n\n.BtnStyle{\n  height: 30px;\n  width: fit-content;\n  border-radius: 10px;\n  font-size: 20px;\n  font-family: Arial;\n  border: none;\n  text-align: center;\n  text-decoration: none;\n  opacity: 0.6;\n  transition: 0.3s;\n  margin: 5px;\n  color: white;\n}\n.BtnStyle:hover{\n  opacity: 1;\n\n}\n.btnRed{\n  background-color: #ff0000;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}