{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-be8c10f2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"mainContainer\"\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_questionaire_head = _resolveComponent(\"questionaire-head\");\n  const _component_add_question_form = _resolveComponent(\"add-question-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_questionaire_head, {\n    onFilled: $options.executeHeadFilled,\n    \"questionaire-head-data-default\": $data.questionaireHeadDefault,\n    ref: \"refQestionaireHead\"\n  }, null, 8 /* PROPS */, [\"onFilled\", \"questionaire-head-data-default\"]), _createVNode(_component_add_question_form, {\n    onFilled: $options.executeQuestionFormFilled\n  }, null, 8 /* PROPS */, [\"onFilled\"]), $data.headFilled && $data.questionFormFilled ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.resetQuestionaireHeadDefault && $options.resetQuestionaireHeadDefault(...args))\n  }, \" next question \")) : _createCommentVNode(\"v-if\", true), $data.headFilled && $data.questionFormFilled ? (_openBlock(), _createElementBlock(\"button\", _hoisted_2, \" save questionaire \")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;;EACKA,KAAK,EAAC;AAAe;;;;;;;uBAA1BC,oBAiBM,OAjBNC,UAiBM,GAhBJC,aAIoBC;IAJAC,QAAM,EAAEC,0BAAiB;IACzB,gCAA8B,EAAEC,6BAAuB;IACxDC,GAAG,EAAC;2EAGvBL,aAA2EM;IAAvDJ,QAAM,EAAEC;EAAyB,uCAEvCC,gBAAU,IAAIA,wBAAkB,kBAA9CN,oBAES;;IAFwCS,OAAK,yCAAEJ,uFAA4B;KAAE,iBAEtF,wCAEcC,gBAAU,IAAIA,wBAAkB,kBAA9CN,oBAES,sBAFuC,qBAEhD","names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_questionaire_head","onFilled","$options","$data","ref","_component_add_question_form","onClick"],"sourceRoot":"","sources":["/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/components/editableQuestionaire/createQuestionaire.vue"],"sourcesContent":["<template>\n<div class=\"mainContainer\">\n  <questionaire-head @filled=\"executeHeadFilled\"\n                     :questionaire-head-data-default=\"questionaireHeadDefault\"\n                     ref=\"refQestionaireHead\"\n  >\n  </questionaire-head>\n  <add-question-form @filled=\"executeQuestionFormFilled\"></add-question-form>\n\n  <button v-if=\"headFilled && questionFormFilled\" @click=\"resetQuestionaireHeadDefault\">\n    next question\n  </button>\n\n  <button v-if=\"headFilled && questionFormFilled\">\n    save questionaire\n  </button>\n\n\n</div>\n</template>\n\n<script>\nimport questionaireHead from \"@/components/editableQuestionaire/questionaireHead\";\nimport addQuestionForm from \"@/components/editableQuestionaire/addQuestionForm\";\n\nexport default {\nname: \"createQuestionaire\",\ncomponents:{questionaireHead, addQuestionForm},\ndata(){\n  return {\n    headFilled: false,\n    questionFormFilled: false,\n    currentQuestionIndex: 0,\n    questionaire: {\n      \"title\": \"\",\n      \"length\": 0,\n      \"creator\": \"\",\n      \"createdOn\": \"\",\n      \"creatorMessage\": \"\",\n      \"questions\" : [\n        {\n          \"id\": 1,\n          \"question\": \"\",\n          \"choices\" : [],\n          \"correctAnswer\": \"\"\n        }\n      ]\n    },\n    questionaireHeadDefault: {\n      creator: '',\n      title: '',\n      description: '',\n    }\n  }\n},\nmethods:{\n  executeHeadFilled(headData){\n    this.headFilled = headData[0];\n  },\n  executeQuestionFormFilled(formData){\n    this.questionFormFilled = formData[0];\n  },\n  resetQuestionaireHeadDefault() {\n    this.questionaireHeadDefault.creator = '';\n    this.questionaireHeadDefault.title = '';\n    this.questionaireHeadDefault.description = '';\n    this.$refs.refQestionaireHead.resetQuestionaireHeadData('h')\n    }\n\n\n}\n}\n</script>\n\n<style scoped>\n.mainContainer{\n  display: flex;\n  width: fit-content;\n  height: fit-content;\n  /*flex-direction: column;*/\n  /*justify-content: center;*/\n  /*align-items: center;*/\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}