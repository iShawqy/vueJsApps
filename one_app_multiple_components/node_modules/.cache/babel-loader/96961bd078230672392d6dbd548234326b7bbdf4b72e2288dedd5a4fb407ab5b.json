{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"messageInputArea\",\n  props: [\"chatter\", \"chattee\"],\n  mounted() {\n    this.statusInterval = setInterval(this.updateStatus, 500);\n  },\n  unmounted() {\n    clearInterval(this.statusInterval);\n  },\n  data() {\n    return {\n      message: \"\",\n      usersUrl: \"http://localhost:3004/users\",\n      messagesUrl: \"http://localhost:3004/messages\",\n      focused: false,\n      lastState: false,\n      statusInterval: null,\n      response: ''\n    };\n  },\n  methods: {\n    sendMessage() {\n      console.log(this.message);\n      if (this.message != \"\" && this.message != \"\\n\") {\n        var currentdate = new Date();\n        var datetime = currentdate.getDate() + \"/\" + (currentdate.getMonth() + 1) + \"/\" + currentdate.getFullYear() + \" @ \" + currentdate.getHours() + \":\" + currentdate.getMinutes();\n        var data = {\n          content: this.message,\n          timestamp: datetime,\n          creator: this.chatter.name,\n          destination: this.chattee.name\n        };\n        axios({\n          method: 'post',\n          url: this.messagesUrl,\n          data: data\n        }).then(response => {\n          this.response = response;\n          this.message = \"\";\n          this.$toast.success('sent', {\n            position: \"bottom\",\n            duration: 250\n          });\n        }).catch(error => {\n          this.response = error;\n          this.$toast.error('Error while logging you in', {\n            position: \"bottom\"\n          });\n        });\n      } else {\n        this.message = \"\";\n      }\n    },\n    onFocus() {\n      this.focused = true;\n    },\n    outFocus() {\n      this.focused = false;\n    },\n    updateStatus() {\n      if (this.focused && this.message != '') {\n        var data = this.chatter;\n        data.status = 'typing...';\n      } else {\n        var data = this.chatter;\n        data.status = 'Online';\n      }\n      axios({\n        method: 'put',\n        url: this.usersUrl + '/' + this.chatter.id,\n        data: data\n      }).then(response => {\n        this.response = response;\n      }).catch(error => {\n        this.response = error;\n        this.$toast.error('Error while updating status', {\n          position: \"bottom\"\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","name","props","mounted","statusInterval","setInterval","updateStatus","unmounted","clearInterval","data","message","usersUrl","messagesUrl","focused","lastState","response","methods","sendMessage","console","log","currentdate","Date","datetime","getDate","getMonth","getFullYear","getHours","getMinutes","content","timestamp","creator","chatter","destination","chattee","method","url","then","$toast","success","position","duration","catch","error","onFocus","outFocus","status","id"],"sourceRoot":"","sources":["/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/components/chattingApp/messageInputArea.vue"],"sourcesContent":["<template>\n<!--<div >-->\n  <textarea class=\"messageInputMainContainer\"\n            v-model=\"message\" placeholder=\"Type a message\"\n            @keyup.enter=\"sendMessage\" @focus=\"onFocus\" @blur=\"outFocus\"\n  ></textarea>\n<!--</div>-->\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\nname: \"messageInputArea\",\nprops: [\"chatter\", \"chattee\"],\nmounted() {\n  this.statusInterval = setInterval(this.updateStatus, 500)\n},\nunmounted() {\nclearInterval(this.statusInterval)\n},\n  data(){\n  return {\n    message:\"\",\n    usersUrl: \"http://localhost:3004/users\",\n    messagesUrl: \"http://localhost:3004/messages\",\n    focused: false,\n    lastState: false,\n    statusInterval:null,\n    response:'',\n\n  }\n\n},\n  methods:{\n  sendMessage(){\n    console.log(this.message)\n    if (this.message != \"\" && this.message != \"\\n\") {\n      var currentdate = new Date();\n      var datetime = currentdate.getDate() + \"/\"\n                  + (currentdate.getMonth()+1)  + \"/\"\n                  + currentdate.getFullYear() + \" @ \"\n                  + currentdate.getHours() + \":\"\n                  + currentdate.getMinutes()\n\n\n\n      var data = {\n        content: this.message,\n        timestamp: datetime,\n        creator: this.chatter.name,\n        destination: this.chattee.name,\n      }\n      axios({\n          method: 'post',\n          url:this.messagesUrl,\n          data: data\n        })\n        .then(response => {\n          this.response = response;\n          this.message = \"\";\n          this.$toast.success('sent',  {\n          position: \"bottom\",\n          duration: 250})\n        })\n        .catch(error => {\n          this.response = error;\n          this.$toast.error('Error while logging you in', {\n          position: \"bottom\"});\n        })\n    }\n    else {\n      this.message = \"\";\n    }\n\n  },\n  onFocus(){\n    this.focused = true;\n  },\n  outFocus(){\n    this.focused = false;\n  },\n  updateStatus(){\n\n      if (this.focused && this.message != '') {\n        var data = this.chatter;\n        data.status = 'typing...';\n\n      } else {\n        var data = this.chatter;\n        data.status = 'Online';\n      }\n      axios({\n        method: 'put',\n        url:this.usersUrl + '/' + this.chatter.id,\n        data: data\n      })\n      .then(response => {\n        this.response = response;\n      })\n      .catch(error => {\n        this.response = error;\n        this.$toast.error('Error while updating status', {\n        position: \"bottom\"});\n      })\n\n\n\n\n\n\n  },\n  }\n}\n</script>\n\n<style scoped>\n.messageInputMainContainer{\n  display: flex;\n  width: 100%;\n  height: 50px;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: flex-start;\n  flex-wrap: wrap;\n  background-color: #17211b;\n  border-radius: 5px;\n  border-color: #17211b;\n  color: white;\n  overflow-y: scroll;\n  font-size: 20px;\n  font-family: Arial;\n  margin: 5px;\n  resize: none;\n\n}\n\n.messageInputMainContainer:focus {\n    outline-width: 0;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}