{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-324e01ba\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"mainContainer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_answer_container = _resolveComponent(\"answer-container\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.answers, answer => {\n    return _openBlock(), _createBlock(_component_answer_container, {\n      onChange: $options.getAnswerIdx,\n      \"answer-idx\": $data.answerIdx,\n      \"answer-text\": answer\n    }, null, 8 /* PROPS */, [\"onChange\", \"answer-idx\", \"answer-text\"]);\n  }), 256 /* UNKEYED_FRAGMENT */))]);\n}","map":{"version":3,"mappings":";;;EACKA,KAAK,EAAC;AAAe;;;uBAA1BC,oBAKM,OALNC,UAKM,sBAJND,oBAGmBE,6BAHgBC,cAAO,EAAjBC,MAAM;yBAA/BC,aAGmBC;MAH0BC,QAAM,EAAEC,qBAAY;MAC9C,YAAU,EAAEC,eAAS;MAAG,aAAW,EAAEL","names":["class","_createElementBlock","_hoisted_1","_Fragment","$props","answer","_createBlock","_component_answer_container","onChange","$options","$data"],"sourceRoot":"","sources":["/Users/ihm/myDrive/private/learning_vue/one_app_multiple_components/src/components/questionaire/answersContainer.vue"],"sourcesContent":["<template>\n<div class=\"mainContainer\">\n<answer-container v-for=\"answer in answers\" @change=\"getAnswerIdx\"\n                  :answer-idx=\"answerIdx\" :answer-text=\"answer\">\n\n</answer-container>\n</div>\n</template>\n\n<script>\nimport answerContainer from \"@/components/questionaire/answerContainer\";\nexport default {\nname: \"answersContainer\",\n  components: {answerContainer},\n  props: ['answers'],\n  data(){\n  return {\n    answerIdx:0\n  }\n  },\n\n  methods: {\n  getAnswerIdx(){\n    this.answerIdx +=1;\n  }\n\n  }\n}\n</script>\n\n<style scoped>\n.mainContainer{\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  gap: 20px;\n\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}