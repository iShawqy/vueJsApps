{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-39b9206b\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"mainContainer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_editable_input_with_label = _resolveComponent(\"editable-input-with-label\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_editable_input_with_label, {\n    modelValue: $data.questionaireHeadData.creator,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.questionaireHeadData.creator = $event),\n    modelModifiers: {\n      trim: true\n    },\n    label: \"Your name\",\n    \"default-value-to-show\": \"Elvis\",\n    width: \"100px\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_editable_input_with_label, {\n    modelValue: $data.questionaireHeadData.title,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.questionaireHeadData.title = $event),\n    modelModifiers: {\n      trim: true\n    },\n    label: \"Title\",\n    \"default-value-to-show\": \"ex: Personality test\",\n    width: \"200px\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_editable_input_with_label, {\n    modelValue: $data.questionaireHeadData.description,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.questionaireHeadData.description = $event),\n    modelModifiers: {\n      trim: true\n    },\n    label: \"Description\",\n    \"default-value-to-show\": \"explain what is it about in few words\",\n    width: \"350px\"\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), _createCommentVNode(\"<div v-if=\\\"questionaireHeadFilled\\\">\"), _createCommentVNode(\"  All filled\"), _createCommentVNode(\"</div>\")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;AAAe;;;6DAA1BC,oBAUM,OAVNC,UAUM,GATJC,aAEwBC;gBAFiBC,0BAAoB,CAACC,OAAO;+DAA5BD,0BAAoB,CAACC,OAAO;oBAA1C;MAAAC;IAAA,CAA2C;IAACC,KAAK,EAAC,WAAW;IAC5F,uBAAqB,EAAC,OAAO;IAACC,KAAK,EAAC;2CAElCN,aAE0BC;gBAFeC,0BAAoB,CAACK,KAAK;+DAA1BL,0BAAoB,CAACK,KAAK;oBAAxC;MAAAH;IAAA,CAAyC;IAACC,KAAK,EAAC,OAAO;IACpF,uBAAqB,EAAC,sBAAsB;IAACC,KAAK,EAAC;2CAE/CN,aAEwBC;gBAFiBC,0BAAoB,CAACM,WAAW;+DAAhCN,0BAAoB,CAACM,WAAW;oBAA9C;MAAAJ;IAAA,CAA+C;IAACC,KAAK,EAAC,aAAa;IAClG,uBAAqB,EAAC,uCAAuC;IAACC,KAAK,EAAC;6CAKpEG,4DAA0C,EAC1CA,mCAAmB,EACnBA,6BAAa","names":["class","_createElementVNode","_hoisted_1","_createVNode","_component_editable_input_with_label","$data","creator","trim","label","width","title","description","_createCommentVNode"],"sourceRoot":"","sources":["/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/components/editableQuestionaire/questionaireHead.vue"],"sourcesContent":["<template>\n  <div class=\"mainContainer\">\n    <editable-input-with-label v-model.trim=\"questionaireHeadData.creator\" label=\"Your name\"\ndefault-value-to-show=\"Elvis\" width=\"100px\">\n</editable-input-with-label>\n  <editable-input-with-label v-model.trim=\"questionaireHeadData.title\" label=\"Title\"\ndefault-value-to-show=\"ex: Personality test\" width=\"200px\">\n</editable-input-with-label>\n    <editable-input-with-label v-model.trim=\"questionaireHeadData.description\" label=\"Description\"\ndefault-value-to-show=\"explain what is it about in few words\" width=\"350px\" >\n</editable-input-with-label>\n  </div>\n\n\n<!--<div v-if=\"questionaireHeadFilled\">-->\n<!--  All filled-->\n<!--</div>-->\n</template>\n\n<script>\nimport editableInputWithLabel from \"@/components/editableQuestionaire/editableInputWithLabel\";\n\nexport default {\nname: \"questionaireHead\",\ncomponents: {editableInputWithLabel},\ndata () {\n  return {\n    questionaireHeadData:{\n      creator: '',\n      title: '',\n      description: '',\n    },\n    questionaireHeadFilled: false,\n\n  }\n},\nmounted() {\n  const checkHeadFilled = setInterval(() => {\n              this.checkQuestionaireHeadFilled();\n            }, 50);\n},\n  methods:{\n  checkQuestionaireHeadFilled(){\n    for (const [prop, value] of Object.entries(this.questionaireHeadData)) {\n      if (value.length == 0){\n        this.questionaireHeadFilled = false;\n        break\n      } else {\n        this.questionaireHeadFilled = true;\n      }\n\n    }\n  }\n  }\n}\n</script>\n\n<style scoped>\n.mainContainer{\n  display: flex;\n  width: 800px;\n  height: fit-content;\n  flex-wrap: wrap;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}