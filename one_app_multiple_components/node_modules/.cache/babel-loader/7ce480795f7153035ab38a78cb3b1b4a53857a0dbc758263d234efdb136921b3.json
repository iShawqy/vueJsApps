{"ast":null,"code":"export default {\n  name: \"lassoElementsSelector\",\n  props: {\n    id: {\n      type: Number,\n      default: 0\n    },\n    mousePosX: {\n      type: Number,\n      default: 0\n    },\n    mousePosY: {\n      type: Number,\n      default: 0\n    },\n    width: {\n      type: String,\n      default: '0px'\n    },\n    height: {\n      type: String,\n      default: '0px'\n    },\n    selecting: {\n      type: Boolean,\n      default: false\n    }\n    // parentKeyEvent: {\n    //   type: String,\n    //   default: 'none',\n    // },\n  },\n\n  data() {\n    return {\n      selectionIntervalId: null,\n      elementPosX: 0,\n      elementPosY: 0,\n      offsetX: 0,\n      offsetY: 0,\n      startPosX: 0,\n      startPosY: 0,\n      originalWidth: 0,\n      originalHeight: 0,\n      negativeWidth: false,\n      negativeHeight: false,\n      selectionEdges: {\n        x: 0,\n        w: 0,\n        y: 0,\n        h: 0\n      },\n      baseStyle: {\n        position: 'absolute',\n        top: '0px',\n        left: '0px',\n        transform: 'translate(0)',\n        width: this.width,\n        height: this.width,\n        border: 'dashed',\n        borderRadius: '5px',\n        backgroundColor: '#6da2fc',\n        opacity: '0.2'\n      },\n      elementKeyEvent: null\n    };\n  },\n  mounted() {\n    this.setElementPos();\n  },\n  methods: {\n    setElementPos() {\n      this.baseStyle.left = this.elementPosX.toString() + 'px';\n      this.baseStyle.top = this.elementPosY.toString() + 'px';\n    },\n    startSelecting() {\n      this.baseStyle.top = this.mousePosY.toString() + 'px';\n      this.baseStyle.left = this.mousePosX.toString() + 'px';\n      this.offsetY = this.mousePosY;\n      this.offsetX = this.mousePosX;\n      this.selectionIntervalId = setInterval(() => {\n        this.select();\n      }, 5);\n    },\n    select() {\n      this.baseStyle.border = '2px dashed black';\n      var w = this.mousePosX - this.offsetX;\n      var h = this.mousePosY - this.offsetY;\n      if (w < 0) {\n        this.negativeWidth = true;\n        w *= -1;\n        this.baseStyle.left = this.mousePosX.toString() + 'px';\n        this.baseStyle.width = w.toString() + 'px';\n      } else {\n        if (this.negativeWidth) {\n          this.baseStyle.left = this.mousePosX.toString() + 'px';\n          this.offsetX = this.mousePosX;\n          this.negativeWidth = false;\n        }\n        this.baseStyle.width = w.toString() + 'px';\n      }\n      if (h < 0) {\n        this.negativeHeight = true;\n        h *= -1;\n        this.baseStyle.top = this.mousePosY.toString() + 'px';\n        this.baseStyle.height = h.toString() + 'px';\n      } else {\n        if (this.negativeHeight) {\n          this.baseStyle.top = this.mousePosY.toString() + 'px';\n          this.offsetY = this.mousePosY;\n          this.negativeHeight = false;\n        }\n        this.baseStyle.height = h.toString() + 'px';\n      }\n\n      // if (w>0 && h > 0) {\n      //   this.baseStyle.width = w.toString() +'px';\n      //   this.baseStyle.height = h.toString() +'px';\n      // }\n    },\n\n    stopSelecting() {\n      clearInterval(this.selectionIntervalId);\n      this.selectionEdges.x = parseInt(this.baseStyle.left.split(\"px\")[0]);\n      this.selectionEdges.w = parseInt(this.baseStyle.width.split(\"px\")[0]);\n      this.selectionEdges.y = parseInt(this.baseStyle.top.split(\"px\")[0]);\n      this.selectionEdges.h = parseInt(this.baseStyle.height.split(\"px\")[0]);\n      this.$emit('lassoSelectorDone', this.selectionEdges);\n      this.resetSelect();\n    },\n    resetSelect() {\n      this.baseStyle.top = '0px';\n      this.baseStyle.left = '0px';\n      this.baseStyle.width = '0px';\n      this.baseStyle.height = '0px';\n      this.baseStyle.border = '0px dashed white';\n    }\n  },\n  watch: {\n    selecting(newValue) {\n      if (newValue) {\n        this.startSelecting();\n      } else {\n        this.stopSelecting();\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["name","props","id","type","Number","default","mousePosX","mousePosY","width","String","height","selecting","Boolean","data","selectionIntervalId","elementPosX","elementPosY","offsetX","offsetY","startPosX","startPosY","originalWidth","originalHeight","negativeWidth","negativeHeight","selectionEdges","x","w","y","h","baseStyle","position","top","left","transform","border","borderRadius","backgroundColor","opacity","elementKeyEvent","mounted","setElementPos","methods","toString","startSelecting","setInterval","select","stopSelecting","clearInterval","parseInt","split","$emit","resetSelect","watch","newValue"],"sourceRoot":"","sources":["/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/components/movableElements/lassoElementsSelector.vue"],"sourcesContent":["<template>\n<div :style=\"[baseStyle]\"\n>\n\n  </div>\n</template>\n\n<script>\nexport default {\nname: \"lassoElementsSelector\",\n  props: {\n    id: {\n      type: Number,\n      default:0\n    },\n    mousePosX: {\n      type: Number,\n      default: 0\n    },\n    mousePosY: {\n      type: Number,\n      default: 0\n    },\n    width: {\n            type: String,\n            default: '0px'\n          },\n    height: {\n            type: String,\n            default: '0px'\n          },\n\n    selecting: {\n      type: Boolean,\n      default: false\n    },\n    // parentKeyEvent: {\n    //   type: String,\n    //   default: 'none',\n    // },\n  },\n  data(){\n  return {\n    selectionIntervalId: null,\n    elementPosX: 0,\n    elementPosY: 0,\n    offsetX:0,\n    offsetY:0,\n    startPosX: 0,\n    startPosY: 0,\n    originalWidth:0,\n    originalHeight: 0,\n    negativeWidth: false,\n    negativeHeight: false,\n    selectionEdges: {\n      x:0,\n      w:0,\n      y:0,\n      h:0\n    },\n    baseStyle: {\n      position: 'absolute',\n      top: '0px',\n      left: '0px',\n      transform: 'translate(0)',\n      width: this.width,\n      height: this.width,\n      border: 'dashed',\n      borderRadius: '5px',\n      backgroundColor: '#6da2fc',\n      opacity: '0.2',\n\n\n    },\n\n    elementKeyEvent: null,\n  }\n  },\n  mounted () {\n  this.setElementPos()\n  },\n  methods: {\n            setElementPos(){\n            this.baseStyle.left = this.elementPosX.toString() + 'px';\n            this.baseStyle.top = this.elementPosY.toString() + 'px';\n            },\n            startSelecting() {\n                this.baseStyle.top = this.mousePosY.toString() +'px';\n                this.baseStyle.left = this.mousePosX.toString() +'px';\n                this.offsetY = this.mousePosY;\n                this.offsetX = this.mousePosX;\n                this.selectionIntervalId = setInterval(() => {\n                  this.select();\n                }, 5);\n            },\n            select(){\n\n              this.baseStyle.border = '2px dashed black';\n              var w = this.mousePosX - this.offsetX;\n              var h = this.mousePosY - this.offsetY;\n              if (w<0){\n                this.negativeWidth = true;\n                w *= -1;\n                this.baseStyle.left = this.mousePosX.toString() +'px';\n                this.baseStyle.width = w.toString() +'px';\n              }\n              else {\n                if (this.negativeWidth){\n                  this.baseStyle.left = this.mousePosX.toString() +'px';\n                  this.offsetX = this.mousePosX;\n                  this.negativeWidth = false;\n                }\n                this.baseStyle.width = w.toString() +'px';\n              }\n\n              if (h<0) {\n                this.negativeHeight = true;\n                h *= -1;\n                this.baseStyle.top = this.mousePosY.toString() +'px';\n                this.baseStyle.height = h.toString() +'px';\n              }\n              else {\n                if (this.negativeHeight){\n                  this.baseStyle.top = this.mousePosY.toString() +'px';\n                  this.offsetY = this.mousePosY;\n                  this.negativeHeight = false;\n                }\n                this.baseStyle.height = h.toString() +'px';\n              }\n\n\n\n\n              // if (w>0 && h > 0) {\n              //   this.baseStyle.width = w.toString() +'px';\n              //   this.baseStyle.height = h.toString() +'px';\n              // }\n            },\n            stopSelecting(){\n\n              clearInterval(this.selectionIntervalId);\n              this.selectionEdges.x = parseInt(this.baseStyle.left.split(\"px\")[0]);\n              this.selectionEdges.w = parseInt(this.baseStyle.width.split(\"px\")[0]);\n              this.selectionEdges.y = parseInt(this.baseStyle.top.split(\"px\")[0]);\n              this.selectionEdges.h = parseInt(this.baseStyle.height.split(\"px\")[0]);\n              this.$emit('lassoSelectorDone', this.selectionEdges);\n              this.resetSelect();\n            },\n            resetSelect(){\n              this.baseStyle.top = '0px';\n                this.baseStyle.left = '0px';\n                this.baseStyle.width = '0px';\n                this.baseStyle.height = '0px';\n                this.baseStyle.border = '0px dashed white'\n\n            },\n\n\n  },\n  watch:{\n    selecting(newValue){\n      if (newValue) {\n        this.startSelecting()\n      } else {\n        this.stopSelecting()\n      }\n\n  },\n\n\n\n\n\n  }\n\n\n\n}\n</script>\n\n<style scoped>\n.asd{\n  background-color: #6da2fc;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}