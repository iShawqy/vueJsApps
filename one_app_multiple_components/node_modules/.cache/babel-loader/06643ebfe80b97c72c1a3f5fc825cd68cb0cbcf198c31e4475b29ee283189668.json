{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-300bdf72\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"browserContainer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.elements, (value, key) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: _normalizeClass(value.elementStyle),\n      key: key\n    }, null, 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"mappings":";;;EACKA,KAAK,EAAC;AAAkB;;uBAA7BC,oBAGM,OAHNC,UAGM,sBAFJD,oBACME,6BADsBC,cAAQ,GAAvBC,KAAK,EAAEC,GAAG;yBAAvBL,oBACM;MADiCD,KAAK,kBAAEK,KAAK,CAACE,YAAY;MAAGD,GAAG,EAAEA","names":["class","_createElementBlock","_hoisted_1","_Fragment","$data","value","key","elementStyle"],"sourceRoot":"","sources":["/Users/ihm/myDrive/private/learning_vue/one_app_multiple_components/src/components/movableElements/elementsBrowser.vue"],"sourcesContent":["<template>\n<div class=\"browserContainer\">\n  <div v-for=\"(value, key) in elements\" :class=\"value.elementStyle\" :key=\"key\">\n  </div>\n</div>\n</template>\n\n<script>\n\n\nimport ButtonsContainer from \"@/components/calculatorContainers/ButtonsContainer\";\nexport default {\n  name: \"elementsBrowser\",\n  components: {ButtonsContainer},\n  data(){\n    return {\n      elements: {\n        circle: {\n          type: 'circle',\n          elementStyle: 'circleStyle',\n        },\n        square:{\n          type: 'square',\n          elementStyle: 'squareStyle',\n        },\n        circle1: {\n          type: 'circle',\n          elementStyle: 'circleStyle',\n        },\n        square1:{\n          type: 'square',\n          elementStyle: 'squareStyle',\n        },\n        circle2: {\n          type: 'circle',\n          elementStyle: 'circleStyle',\n        },\n        square2:{\n          type: 'square',\n          elementStyle: 'squareStyle',\n        },\n        circle3: {\n          type: 'circle',\n          elementStyle: 'circleStyle',\n        },\n        square3:{\n          type: 'square',\n          elementStyle: 'squareStyle',\n        },\n\n    }\n    }\n\n  },\n}\n</script>\n\n<style scoped>\n.browserContainer{\n  flex: none;\n  /*display: flex;*/\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  /*gap: 5px;*/\n  width: 50px;\n  height: 300px;\n  overflow-y: scroll;\n  border: 2px solid black;\n  border-radius: 10px;\n}\n\n.circleStyle{\n  /*flex: none;*/\n  flex-grow: 0;\n  flex-shrink: 0;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  margin-left: 5px;\n  background-color: black;\n\n}\n\n.squareStyle{\n  /*flex: none;*/\n  flex-grow: 0;\n  flex-shrink: 0;\n  width: 40px;\n  height: 40px;\n  background-color: black;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  margin-left: 5px;\n\n\n}\n\n.customSeprator{\n  width: 40px;\n  height: 2px;\n  background-color: black;\n\n}\n\n.button{\n  width: 40px;\n  height: 40px;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}