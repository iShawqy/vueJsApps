{"ast":null,"code":"import squareElement from \"@/components/movableElements/squareElement\";\nimport rectangleElement from \"@/components/movableElements/rectangleElement\";\nimport CircleElement from \"@/components/movableElements/circleElement\";\nimport elementsBrowser from \"@/components/movableElements/elementsBrowser\";\nexport default {\n  name: \"mainMovableElements\",\n  components: {\n    CircleElement,\n    squareElement,\n    rectangleElement,\n    elementsBrowser\n  },\n  data() {\n    return {\n      mousePosX: 0,\n      mousePosY: 0,\n      elements: {\n        circle: {},\n        square: {},\n        rectangle: {}\n      },\n      elementsHighestId: 0,\n      elementsCount: 0,\n      elementsDefaultBackgroundColors: {\n        circle: 'red',\n        square: 'blue',\n        rectangle: 'green'\n      },\n      selectedItems: {},\n      multipleSelected: false,\n      dragging: false,\n      draggingIntervalId: null,\n      keyEvent: 'none',\n      moving: false\n    };\n  },\n  mounted() {\n    setInterval(() => {\n      this.updateMultipleSelected();\n    }, 20);\n  },\n  methods: {\n    updateMousePos(event) {\n      this.mousePosX = event.clientX;\n      this.mousePosY = event.clientY;\n    },\n    deSelectAllElements() {\n      var keys = Object.keys(this.selectedItems);\n      for (let i = 0; i < keys.length; i++) {\n        var type = this.selectedItems[keys[i]]['type'];\n        var id = this.selectedItems[keys[i]]['id'];\n        this.elements[type][id].selected = false;\n      }\n      this.selectedItems = {};\n    },\n    selectElement(element) {\n      this.elements[element.type][element.id].selected = true;\n      this.selectedItems[element.id] = element;\n    },\n    deSelectElement(element) {\n      this.elements[element.type][element.id].selected = false;\n      if (this.selectedItems.hasOwnProperty(element.id)) {\n        delete this.selectedItems[element.id];\n      }\n    },\n    executeElementMouseDown(element, eventOriginal) {\n      console.log('element mouse down');\n      var event = eventOriginal;\n      if (event.shiftKey) {\n        if (element.selected) {\n          this.deSelectElement(element);\n        } else {\n          this.selectElement(element);\n        }\n      } else {\n        this.moveSelectedElements(true);\n      }\n    },\n    executeElementMouseUp(element, eventOriginal) {\n      var event = eventOriginal;\n      if (!event.shiftKey) {\n        this.moveSelectedElements(false);\n      }\n    },\n    executeElementClick(element, eventOriginal) {\n      console.log('element clicked');\n      var event = eventOriginal;\n      if (!event.shiftKey) {\n        if (!this.moving) {\n          this.deSelectAllElements();\n          this.selectElement(element);\n        } else {\n          this.moveSelectedElements(false);\n        }\n      }\n    },\n    handleKeyPress(event) {\n      this.keyEvent = event.key;\n      if (event.key == \"Delete\") {\n        this.deleteSelectedElements();\n      } else if (event.key == \"Enter\" || event.key == \"Escape\") {\n        if (Object.keys(this.selectedItems).length != 0) {\n          for (const [id, data] of Object.entries(this.selectedItems)) {\n            this.elements[data.type][id].selected = true;\n            this.elements[data.type][id].resizing = false;\n          }\n        }\n      } else if (event.key == 'A') {\n        this.selectAllElements();\n      }\n    },\n    deleteSelectedElements() {\n      for (const [id, value] of Object.entries(this.selectedItems)) {\n        delete this.elements[value.type][id];\n        if (this.selectedItems.hasOwnProperty(id)) {\n          delete this.selectedItems[id];\n        }\n        this.elementsCount -= 1;\n      }\n    },\n    selectAllElements() {\n      for (const [type, els] of Object.entries(this.elements)) {\n        for (const [id, elData] of Object.entries(this.elements[type])) {\n          if (!this.elements[type][id]['selected']) {\n            this.elements[type][id]['selected'] = true;\n            this.selectedItems[id] = elData;\n          }\n        }\n      }\n    },\n    addNewElement(type) {\n      var elementId = this.elementsHighestId + 1;\n      var elementData = {\n        type: type,\n        id: elementId,\n        selected: false,\n        moving: false,\n        resizing: false,\n        backgroundColor: this.elementsDefaultBackgroundColors[type]\n      };\n      this.elements[type][elementId] = elementData;\n      this.elementsHighestId += 1;\n      this.elementsCount += 1;\n    },\n    updateMultipleSelected() {\n      if (Object.keys(this.selectedItems).length > 1) {\n        this.multipleSelected = true;\n      } else {\n        this.multipleSelected = false;\n      }\n    },\n    moveSelectedElements(flag) {\n      this.moving = flag;\n      if (Object.keys(this.selectedItems).length != 0) {\n        for (const [id, data] of Object.entries(this.selectedItems)) {\n          this.elements[data.type][id].moving = flag;\n          this.elements[data.type][id].resizing = false;\n        }\n      }\n    },\n    executeParentMouseDown(eventOriginal) {\n      var event = eventOriginal;\n      console.log('parent mouse down');\n      if (event.button == 0 && !event.shiftKey) {\n        this.moveSelectedElements(true);\n      }\n    },\n    executeParentMouseUp(eventOriginal) {\n      console.log('parent mouse up');\n      var event = eventOriginal;\n      if (event.button == 0 && !event.shiftKey) {\n        this.moveSelectedElements(false);\n      }\n    },\n    executeParentClick(event) {\n      console.log('parent mouse click');\n      this.deSelectAllElements();\n    },\n    stopDragging() {\n      this.dragging = false;\n      clearInterval(this.draggingIntervalId);\n    },\n    resize(element) {\n      element.selected = false;\n      element.resizing = true;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["squareElement","rectangleElement","CircleElement","elementsBrowser","name","components","data","mousePosX","mousePosY","elements","circle","square","rectangle","elementsHighestId","elementsCount","elementsDefaultBackgroundColors","selectedItems","multipleSelected","dragging","draggingIntervalId","keyEvent","moving","mounted","setInterval","updateMultipleSelected","methods","updateMousePos","event","clientX","clientY","deSelectAllElements","keys","Object","i","length","type","id","selected","selectElement","element","deSelectElement","hasOwnProperty","executeElementMouseDown","eventOriginal","console","log","shiftKey","moveSelectedElements","executeElementMouseUp","executeElementClick","handleKeyPress","key","deleteSelectedElements","entries","resizing","selectAllElements","value","els","elData","addNewElement","elementId","elementData","backgroundColor","flag","executeParentMouseDown","button","executeParentMouseUp","executeParentClick","stopDragging","clearInterval","resize"],"sourceRoot":"","sources":["/Users/ihm/myDrive/private/learning_vue/one_app_multiple_components/src/components/movableElements/mainMovableElements.vue"],"sourcesContent":["<template>\n<div class=\"mainContainer\" @mousemove=\"updateMousePos($event)\"\n     @click=\"executeParentClick($event)\"\n     @keyup=\"handleKeyPress($event)\" tabindex=\"0\"\n     @mousedown=\"executeParentMouseDown($event)\"\n     @mouseup=\"executeParentMouseUp($event)\"\n>\n<!--&gt;-->\n  <elements-browser class=\"elementsBrowser animate__animated animate__fadeInLeft\"\n\n                    @addElement=\"addNewElement\" v-if=\"mousePosX<100\">\n\n  </elements-browser>\n\n  <circle-element  v-for=\"element in elements.circle\"\n                   :id=\"element.id\"\n                   :key=\"element.id\"\n                   :moving=\"element.moving\"\n                   :resizing=\"element.resizing\"\n                   :background-color=\"element.backgroundColor\"\n                   @mousedown=\"executeElementMouseDown(element, $event)\"\n                   @mouseup=\"executeElementMouseUp(element, $event)\"\n                   @click=\"executeElementClick(element, $event)\"\n                   v-on:click.stop v-on:mousedown.stop v-on:mouseup.stop\n                   :selected=\"element.selected\"\n                   :mouse-pos-x=\"mousePosX\" :mouse-pos-y=\"mousePosY\"\n                   @dblclick=\"resize(element)\" :parent-key-event=\"keyEvent\"\n\n  >\n</circle-element>\n\n\n<!--    <square-element  v-for=\"element in elements.square\"-->\n<!--                   :id=\"element.id\"-->\n<!--                   :key=\"element.id\"-->\n<!--                   :can-move=\"element.canMove\"-->\n<!--                   :background-color=\"element.backgroundColor\"-->\n<!--                   @click=\"executeElementMouseDown(element, $event)\"-->\n<!--                   v-on:click.stop :selected-flag=\"element.selected\"-->\n<!--                   :mouse-pos-x=\"mousePosX\" :mouse-pos-y=\"mousePosY\"-->\n<!--                   :multiple-selected=\"multipleSelected\"-->\n<!--  >-->\n<!--</square-element>-->\n\n<!--   <rectangle-element  v-for=\"element in elements.rectangle\"-->\n<!--                   :id=\"element.id\"-->\n<!--                   :key=\"element.id\"-->\n<!--                   :can-move=\"element.canMove\"-->\n<!--                   :background-color=\"element.backgroundColor\"-->\n<!--                   @click=\"executeElementMouseDown(element, $event)\"-->\n<!--                   v-on:click.stop :selected-flag=\"element.selected\"-->\n<!--                   :mouse-pos-x=\"mousePosX\" :mouse-pos-y=\"mousePosY\"-->\n<!--                   :multiple-selected=\"multipleSelected\"-->\n<!--  >-->\n<!--</rectangle-element>-->\n\n  </div>\n</template>\n\n<script>\nimport squareElement from \"@/components/movableElements/squareElement\";\nimport rectangleElement from \"@/components/movableElements/rectangleElement\";\nimport CircleElement from \"@/components/movableElements/circleElement\";\nimport elementsBrowser from \"@/components/movableElements/elementsBrowser\";\n\n\nexport default {\nname: \"mainMovableElements\",\n  components:{CircleElement, squareElement,\n    rectangleElement, elementsBrowser},\n  data(){\n  return {\n    mousePosX: 0,\n    mousePosY: 0,\n    elements: {\n      circle: {},\n      square: {},\n      rectangle: {},\n    },\n    elementsHighestId: 0,\n    elementsCount: 0,\n    elementsDefaultBackgroundColors: {\n      circle: 'red',\n      square: 'blue',\n      rectangle: 'green'\n    },\n    selectedItems: {},\n    multipleSelected: false,\n    dragging: false,\n    draggingIntervalId: null,\n    keyEvent: 'none',\n    moving: false,\n\n  }\n  },\n  mounted() {\n    setInterval(() => {\n              this.updateMultipleSelected();\n            }, 20);\n  },\n  methods:{\n    updateMousePos(event){\n      this.mousePosX = event.clientX;\n      this.mousePosY = event.clientY;\n    },\n    deSelectAllElements(){\n      var keys = Object.keys(this.selectedItems);\n      for (let i=0; i< keys.length; i++){\n        var type = this.selectedItems[keys[i]]['type'];\n        var id = this.selectedItems[keys[i]]['id'];\n        this.elements[type][id].selected = false;\n      }\n      this.selectedItems = {};\n\n    },\n    selectElement(element) {\n      this.elements[element.type][element.id].selected = true;\n      this.selectedItems[element.id] = element;\n    },\n    deSelectElement(element) {\n      this.elements[element.type][element.id].selected = false;\n      if (this.selectedItems.hasOwnProperty(element.id)) {\n            delete this.selectedItems[element.id];\n          }\n    },\n    executeElementMouseDown(element, eventOriginal){\n      console.log('element mouse down');\n      var event = eventOriginal;\n      if (event.shiftKey) {\n        if (element.selected) {\n          this.deSelectElement(element);\n        }\n        else {\n          this.selectElement(element);\n        }\n      }\n      else {\n        this.moveSelectedElements(true)\n      }\n\n\n    },\n    executeElementMouseUp(element, eventOriginal){\n      var event = eventOriginal;\n      if (!event.shiftKey) {\n        this.moveSelectedElements(false);\n      }\n\n    },\n    executeElementClick(element, eventOriginal){\n      console.log('element clicked');\n      var event = eventOriginal;\n      if (!event.shiftKey) {\n        if (!this.moving) {\n          this.deSelectAllElements();\n          this.selectElement(element);\n        } else {\n          this.moveSelectedElements(false)\n        }\n\n      }\n    },\n    handleKeyPress(event) {\n      this.keyEvent = event.key;\n      if (event.key == \"Delete\") {\n        this.deleteSelectedElements();\n      }\n      else if (event.key == \"Enter\" || event.key == \"Escape\") {\n        if (Object.keys(this.selectedItems).length != 0){\n          for (const [id, data] of Object.entries(this.selectedItems) ){\n            this.elements[data.type][id].selected = true;\n            this.elements[data.type][id].resizing = false;\n          }\n        }\n      }\n      else if (event.key == 'A') {\n        this.selectAllElements()\n      }\n\n    },\n    deleteSelectedElements(){\n      for (const [id, value] of Object.entries(this.selectedItems)) {\n          delete this.elements[value.type][id];\n          if (this.selectedItems.hasOwnProperty(id)){\n                    delete this.selectedItems[id]\n                  }\n          this.elementsCount -= 1;\n        }\n    },\n    selectAllElements(){\n      for (const [type, els] of Object.entries(this.elements)){\n        for (const [id, elData] of Object.entries(this.elements[type])){\n          if (!this.elements[type][id]['selected']) {\n            this.elements[type][id]['selected'] = true;\n            this.selectedItems[id] = elData;\n          }\n      }\n      }\n    },\n    addNewElement(type){\n      var elementId = this.elementsHighestId +1;\n      var elementData = {\n            type: type,\n            id: elementId,\n            selected: false,\n            moving: false,\n            resizing: false,\n            backgroundColor: this.elementsDefaultBackgroundColors[type],\n      }\n      this.elements[type][elementId] = elementData\n      this.elementsHighestId += 1\n      this.elementsCount += 1\n    },\n    updateMultipleSelected(){\n      if (Object.keys(this.selectedItems).length > 1){\n        this.multipleSelected = true;\n      } else {\n        this.multipleSelected = false;\n      }\n    },\n    moveSelectedElements(flag) {\n      this.moving = flag;\n      if (Object.keys(this.selectedItems).length != 0) {\n        for (const [id, data] of Object.entries(this.selectedItems)) {\n          this.elements[data.type][id].moving = flag;\n          this.elements[data.type][id].resizing = false;\n        }\n      }\n    },\n    executeParentMouseDown(eventOriginal){\n      var event = eventOriginal;\n      console.log('parent mouse down')\n      if (event.button == 0 && !event.shiftKey) {\n        this.moveSelectedElements(true)\n      }\n    },\n    executeParentMouseUp(eventOriginal){\n      console.log('parent mouse up')\n      var event = eventOriginal;\n      if (event.button == 0 && !event.shiftKey) {\n        this.moveSelectedElements(false);\n      }\n\n    },\n    executeParentClick(event) {\n      console.log('parent mouse click')\n      this.deSelectAllElements();\n    },\n    stopDragging(){\n      this.dragging = false\n      clearInterval(this.draggingIntervalId)\n    },\n    resize(element){\n      element.selected = false;\n      element.resizing = true;\n    },\n\n\n  },\n\n}\n</script>\n\n<style scoped>\n    .mainContainer{\n    position: absolute;\n    width: 100%;\n    height: 100%;\n      background-color: #ffffff;\n  }\n\n    .elementsBrowser{\n      position: absolute;\n      top: 25%;\n      -ms-transform: translateY(-50%);\n      transform: translateY(-50%);\n    }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}