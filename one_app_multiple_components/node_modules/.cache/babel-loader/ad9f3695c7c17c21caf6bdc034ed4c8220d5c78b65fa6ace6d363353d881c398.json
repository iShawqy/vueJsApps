{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport squareElement from \"@/components/movableElements/squareElement\";\nimport rectangleElement from \"@/components/movableElements/rectangleElement\";\nimport CircleElement from \"@/components/movableElements/circleElement\";\nimport elementsBrowser from \"@/components/movableElements/elementsBrowser\";\nexport default {\n  name: \"mainMovableElements\",\n  components: {\n    CircleElement,\n    squareElement,\n    rectangleElement,\n    elementsBrowser\n  },\n  data() {\n    return {\n      mousePosX: 0,\n      mousePosY: 0,\n      elements: {\n        circle: [],\n        square: [],\n        rectangle: []\n      },\n      elementsDefaultBackgroundColors: {\n        circle: 'red',\n        square: 'blue',\n        rectangle: 'green'\n      },\n      selectedItems: []\n    };\n  },\n  methods: {\n    updateMousePos(event) {\n      this.mousePosX = event.clientX;\n      this.mousePosY = event.clientY;\n    },\n    handleSelectedElement(element) {\n      if (element != null) {\n        this.selectedItems.push(element);\n      } else {\n        this.selectedItems = [];\n      }\n    },\n    handleKeyPress(event) {\n      if (event.key == \"Delete\") {\n        if (this.selectedItems.length != 0) {\n          for (let item = 0; item < this.selectedItems.length; item++) {\n            var toDeleteIndicies = [];\n            for (let i = 0; i < this.elements[this.selectedItems[item].type].length; i++) {\n              if (this.selectedItems.id == this.elements[this.selectedItems.type][i].id) {\n                toDeleteIndicies.push(i);\n              }\n            }\n            for (let e = 0; e < toDeleteIndicies.length; e++) {\n              this.elements[this.selectedItems[item].type].splice(toDeleteIndicies[e], 1);\n            }\n          }\n        }\n      }\n    },\n    addNewElement(type) {\n      this.elements[type].push({\n        type: type,\n        id: this.elements[type].length + 1,\n        canMove: true,\n        backgroundColor: this.elementsDefaultBackgroundColors[type]\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AAqDA,OAAOA,aAAY,MAAO,4CAA4C;AACtE,OAAOC,gBAAe,MAAO,+CAA+C;AAC5E,OAAOC,aAAY,MAAO,4CAA4C;AACtE,OAAOC,eAAc,MAAO,8CAA8C;AAE1E,eAAe;EACfC,IAAI,EAAE,qBAAqB;EACzBC,UAAU,EAAC;IAACH,aAAa;IAAEF,aAAa;IACtCC,gBAAgB;IAAEE;EAAe,CAAC;EACpCG,IAAI,GAAE;IACN,OAAO;MACLC,SAAS,EAAE,CAAC;MACZC,SAAS,EAAE,CAAC;MACZC,QAAQ,EAAE;QACRC,MAAM,EAAE,EAAE;QACVC,MAAM,EAAE,EAAE;QACVC,SAAS,EAAC;MACZ,CAAC;MACDC,+BAA+B,EAAE;QAC/BH,MAAM,EAAE,KAAK;QACbC,MAAM,EAAE,MAAM;QACdC,SAAS,EAAE;MACb,CAAC;MAEDE,aAAa,EAAE;IACjB;EACA,CAAC;EACDC,OAAO,EAAC;IACRC,cAAc,CAACC,KAAK,EAAC;MACnB,IAAI,CAACV,SAAQ,GAAIU,KAAK,CAACC,OAAO;MAC9B,IAAI,CAACV,SAAQ,GAAIS,KAAK,CAACE,OAAO;IAChC,CAAC;IAGDC,qBAAqB,CAACC,OAAO,EAAC;MAE5B,IAAIA,OAAM,IAAK,IAAI,EAAE;QACnB,IAAI,CAACP,aAAa,CAACQ,IAAI,CAACD,OAAO,CAAC;MAClC,OAAO;QACL,IAAI,CAACP,aAAY,GAAI,EAAE;MACzB;IAEF,CAAC;IACDS,cAAc,CAACN,KAAK,EAAC;MACnB,IAAIA,KAAK,CAACO,GAAE,IAAK,QAAQ,EAAC;QACxB,IAAI,IAAI,CAACV,aAAa,CAACW,MAAK,IAAK,CAAC,EAAC;UACjC,KAAK,IAAIC,IAAG,GAAI,CAAC,EAAEA,IAAG,GAAI,IAAI,CAACZ,aAAa,CAACW,MAAM,EAAEC,IAAI,EAAE,EAAC;YAC1D,IAAIC,gBAAe,GAAI,EAAE;YACzB,KAAK,IAAIC,IAAI,CAAC,EAAEA,IAAI,IAAI,CAACnB,QAAQ,CAAC,IAAI,CAACK,aAAa,CAACY,IAAI,CAAC,CAACG,IAAI,CAAC,CAACJ,MAAM,EAAEG,CAAC,EAAE,EAAE;cAC9E,IAAI,IAAI,CAACd,aAAa,CAACgB,EAAC,IAAK,IAAI,CAACrB,QAAQ,CAAC,IAAI,CAACK,aAAa,CAACe,IAAI,CAAC,CAACD,CAAC,CAAC,CAACE,EAAE,EAAE;gBACzEH,gBAAgB,CAACL,IAAI,CAACM,CAAC,CAAC;cAC1B;YACF;YACE,KAAK,IAAIG,IAAI,CAAC,EAAEA,IAAIJ,gBAAgB,CAACF,MAAM,EAAEM,CAAC,EAAE,EAAE;cAChD,IAAI,CAACtB,QAAQ,CAAC,IAAI,CAACK,aAAa,CAACY,IAAI,CAAC,CAACG,IAAI,CAAC,CAACG,MAAM,CAACL,gBAAgB,CAACI,CAAC,CAAC,EAAE,CAAC;YAC5E;UAEF;QAEF;MACF;IAEF,CAAC;IACDE,aAAa,CAACJ,IAAI,EAAC;MAEjB,IAAI,CAACpB,QAAQ,CAACoB,IAAI,CAAC,CAACP,IAAI,CACpB;QACEO,IAAI,EAAEA,IAAI;QACVC,EAAE,EAAE,IAAI,CAACrB,QAAQ,CAACoB,IAAI,CAAC,CAACJ,MAAK,GAAG,CAAC;QACjCS,OAAO,EAAE,IAAI;QACbC,eAAe,EAAE,IAAI,CAACtB,+BAA+B,CAACgB,IAAI;MAC5D,EACJ;IAEF;EAGA;AACF","names":["squareElement","rectangleElement","CircleElement","elementsBrowser","name","components","data","mousePosX","mousePosY","elements","circle","square","rectangle","elementsDefaultBackgroundColors","selectedItems","methods","updateMousePos","event","clientX","clientY","handleSelectedElement","element","push","handleKeyPress","key","length","item","toDeleteIndicies","i","type","id","e","splice","addNewElement","canMove","backgroundColor"],"sourceRoot":"","sources":["/Users/ihm/myDrive/private/learning_vue/one_app_multiple_components/src/components/movableElements/mainMovableElements.vue"],"sourcesContent":["<template>\n<div class=\"mainContainer\" @mousemove=\"updateMousePos($event)\"\n     @click=\"handleSelectedElement(null)\"\n     @keyup=\"handleKeyPress($event)\" tabindex=\"0\"\n>\n  <elements-browser class=\"elementsBrowser animate__animated animate__fadeInLeft\"\n\n                    @addElement=\"addNewElement\" v-if=\"mousePosX<100\">\n\n  </elements-browser>\n<!--<square-element  :mouse-pos-x=\"mousePosX\" :mouse-pos-y=\"mousePosY\"-->\n<!--                :can-move=\"true\" background-color=\"red\">-->\n<!--</square-element>-->\n  <circle-element  v-for=\"element in elements.circle\"\n                   :id=\"element.id\"\n                   :key=\"element.id\"\n                   :can-move=\"element.canMove\"\n                   :background-color=\"element.backgroundColor\"\n                   @click=\"handleSelectedElement(element)\"\n                   v-on:click.stop\n                   :mouse-pos-x=\"mousePosX\" :mouse-pos-y=\"mousePosY\"\n  >\n</circle-element>\n\n\n    <square-element  v-for=\"element in elements.square\"\n                   :id=\"element.id\"\n                   :key=\"element.id\"\n                   :can-move=\"element.canMove\"\n                   :background-color=\"element.backgroundColor\"\n                   @click=\"handleSelectedElement(element)\"\n                   v-on:click.stop\n                   :mouse-pos-x=\"mousePosX\" :mouse-pos-y=\"mousePosY\"\n  >\n</square-element>\n\n   <rectangle-element  v-for=\"element in elements.rectangle\"\n                   :id=\"element.id\"\n                   :key=\"element.id\"\n                   :can-move=\"element.canMove\"\n                   :background-color=\"element.backgroundColor\"\n                   @click=\"handleSelectedElement(element)\"\n                   v-on:click.stop\n                   :mouse-pos-x=\"mousePosX\" :mouse-pos-y=\"mousePosY\"\n  >\n</rectangle-element>\n<!--  <rectangle-element  :mouse-pos-x=\"mousePosX\" :mouse-pos-y=\"mousePosY\"-->\n<!--                :can-move=\"true\" background-color=\"blue\">-->\n<!--</rectangle-element>-->\n  </div>\n</template>\n\n<script>\nimport squareElement from \"@/components/movableElements/squareElement\";\nimport rectangleElement from \"@/components/movableElements/rectangleElement\";\nimport CircleElement from \"@/components/movableElements/circleElement\";\nimport elementsBrowser from \"@/components/movableElements/elementsBrowser\";\n\nexport default {\nname: \"mainMovableElements\",\n  components:{CircleElement, squareElement,\n    rectangleElement, elementsBrowser},\n  data(){\n  return {\n    mousePosX: 0,\n    mousePosY: 0,\n    elements: {\n      circle: [],\n      square: [],\n      rectangle:[],\n    },\n    elementsDefaultBackgroundColors: {\n      circle: 'red',\n      square: 'blue',\n      rectangle: 'green'\n    },\n\n    selectedItems: [],\n  }\n  },\n  methods:{\n  updateMousePos(event){\n    this.mousePosX = event.clientX;\n    this.mousePosY = event.clientY;\n  },\n\n\n  handleSelectedElement(element){\n\n    if (element != null) {\n      this.selectedItems.push(element);\n    } else {\n      this.selectedItems = [];\n    }\n\n  },\n  handleKeyPress(event){\n    if (event.key == \"Delete\"){\n      if (this.selectedItems.length != 0){\n        for (let item = 0; item < this.selectedItems.length; item++){\n          var toDeleteIndicies = [];\n          for (let i = 0; i < this.elements[this.selectedItems[item].type].length; i++) {\n          if (this.selectedItems.id == this.elements[this.selectedItems.type][i].id) {\n            toDeleteIndicies.push(i);\n          }\n        }\n          for (let e = 0; e < toDeleteIndicies.length; e++) {\n            this.elements[this.selectedItems[item].type].splice(toDeleteIndicies[e], 1)\n          }\n\n        }\n\n      }\n    }\n\n  },\n  addNewElement(type){\n\n    this.elements[type].push(\n        {\n          type: type,\n          id: this.elements[type].length +1,\n          canMove: true,\n          backgroundColor: this.elementsDefaultBackgroundColors[type],\n        }\n    )\n\n  },\n\n\n  }\n}\n</script>\n\n<style scoped>\n    .mainContainer{\n    position: absolute;\n    width: 100%;\n    height: 100%;\n      background-color: #ffffff;\n  }\n\n    .elementsBrowser{\n      position: absolute;\n      top: 25%;\n      -ms-transform: translateY(-50%);\n      transform: translateY(-50%);\n    }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}