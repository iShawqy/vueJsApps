{"ast":null,"code":"import { normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    style: _normalizeStyle([$data.baseStyle]),\n    onMousedown: _cache[0] || (_cache[0] = $event => $options.startDragging($event)),\n    onMouseup: _cache[1] || (_cache[1] = (...args) => $options.stopDragging && $options.stopDragging(...args))\n  }, null, 36 /* STYLE, HYDRATE_EVENTS */);\n}","map":{"version":3,"mappings":";;uBACAA,oBAEQ;IAFFC,KAAK,mBAAGC,eAAS;IAAIC,WAAS,sCAAEC,sBAAa,CAACC,MAAM;IAAIC,SAAO,yCAAEF,uDAAY","names":["_createElementBlock","style","$data","onMousedown","$options","$event","onMouseup"],"sourceRoot":"","sources":["/Users/ihm/myDrive/private/learning_vue/one_app_multiple_components/src/components/movableElements/squareElement.vue"],"sourcesContent":["<template>\n<div :style=\"[baseStyle]\" @mousedown=\"startDragging($event)\" @mouseup=\"stopDragging\">\n\n  </div>\n</template>\n\n<script>\nexport default {\nname: \"squareElement\",\n  props: {\n          posX: {\n            type: Number,\n            default: 0\n          },\n          posY: {\n            type: Number,\n            default: 0\n          },\n          width: {\n                  type: String,\n                  default: '100px'\n                },\n         height: {\n                  type: String,\n                  default: '100px'\n                },\n         backgroundColor: {\n                   type: String,\n                   default: 'green'\n                  },\n         canMove: {\n            type: Boolean,\n            default: true\n         }\n\n  },\n  data(){\n  return {\n    dragging: false,\n    baseStyle: {\n      position: 'absolute',\n      top: this.posY,\n      left: this.posX,\n      backgroundColor: this.backgroundColor,\n      width: this.width,\n      height: this.height,\n      fontSize: '30px',\n      fontFamily: 'Arial',\n      border: 'none',\n      // padding: '20px',\n      textAlign: 'center',\n      textDecoration: 'none',\n      display: 'inline-flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      // margin: '4px 2px',\n      // borderRadius: '100%',\n\n    },\n\n  }\n  },\n  methods: {\n  startDragging(event){\n    this.dragging = true;\n\n  },\n    stopDragging(){\n    this.dragging = false\n    },\n\n    drag(){\n    if (this.dragging){\n      this.baseStyle.top = this.posY.toString() +'px';\n      this.baseStyle.left = this.posX.toString() +'px';\n    console.log(this.posX)\n    }\n    },\n\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}