{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, withModifiers as _withModifiers } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_elements_browser = _resolveComponent(\"elements-browser\");\n  const _component_circle_element = _resolveComponent(\"circle-element\");\n  const _component_square_element = _resolveComponent(\"square-element\");\n  const _component_rectangle_element = _resolveComponent(\"rectangle-element\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"mainContainer\",\n    onMousemove: _cache[3] || (_cache[3] = $event => $options.updateMousePos($event)),\n    onClick: _cache[4] || (_cache[4] = $event => $options.handleSelectedElement(null)),\n    onKeyup: _cache[5] || (_cache[5] = $event => $options.handleKeyPress($event)),\n    tabindex: \"0\"\n  }, [$data.mousePosX < 100 ? (_openBlock(), _createBlock(_component_elements_browser, {\n    key: 0,\n    class: \"elementsBrowser animate__animated animate__fadeInLeft\",\n    onAddElement: $options.addNewElement\n  }, null, 8 /* PROPS */, [\"onAddElement\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"<square-element  :mouse-pos-x=\\\"mousePosX\\\" :mouse-pos-y=\\\"mousePosY\\\"\"), _createCommentVNode(\"                :can-move=\\\"true\\\" background-color=\\\"red\\\">\"), _createCommentVNode(\"</square-element>\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.elements.circle, element => {\n    return _openBlock(), _createBlock(_component_circle_element, {\n      id: element.id,\n      key: element.id,\n      \"can-move\": element.canMove,\n      \"background-color\": element.backgroundColor,\n      onClick: [$event => $options.handleSelectedElement(element, $event), _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"stop\"]))],\n      \"selected-flag\": element.selected,\n      \"mouse-pos-x\": $data.mousePosX,\n      \"mouse-pos-y\": $data.mousePosY,\n      \"multiple-selected\": $data.multipleSelected\n    }, null, 8 /* PROPS */, [\"id\", \"can-move\", \"background-color\", \"onClick\", \"selected-flag\", \"mouse-pos-x\", \"mouse-pos-y\", \"multiple-selected\"]);\n  }), 128 /* KEYED_FRAGMENT */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.elements.square, element => {\n    return _openBlock(), _createBlock(_component_square_element, {\n      id: element.id,\n      key: element.id,\n      \"can-move\": element.canMove,\n      \"background-color\": element.backgroundColor,\n      onClick: [$event => $options.handleSelectedElement(element, $event), _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"stop\"]))],\n      \"selected-flag\": element.selected,\n      \"mouse-pos-x\": $data.mousePosX,\n      \"mouse-pos-y\": $data.mousePosY\n    }, null, 8 /* PROPS */, [\"id\", \"can-move\", \"background-color\", \"onClick\", \"selected-flag\", \"mouse-pos-x\", \"mouse-pos-y\"]);\n  }), 128 /* KEYED_FRAGMENT */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.elements.rectangle, element => {\n    return _openBlock(), _createBlock(_component_rectangle_element, {\n      id: element.id,\n      key: element.id,\n      \"can-move\": element.canMove,\n      \"background-color\": element.backgroundColor,\n      onClick: [$event => $options.handleSelectedElement(element, $event), _cache[2] || (_cache[2] = _withModifiers(() => {}, [\"stop\"]))],\n      \"selected-flag\": element.selected,\n      \"mouse-pos-x\": $data.mousePosX,\n      \"mouse-pos-y\": $data.mousePosY\n    }, null, 8 /* PROPS */, [\"id\", \"can-move\", \"background-color\", \"onClick\", \"selected-flag\", \"mouse-pos-x\", \"mouse-pos-y\"]);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\"  <rectangle-element  :mouse-pos-x=\\\"mousePosX\\\" :mouse-pos-y=\\\"mousePosY\\\"\"), _createCommentVNode(\"                :can-move=\\\"true\\\" background-color=\\\"blue\\\">\"), _createCommentVNode(\"</rectangle-element>\")], 32 /* HYDRATE_EVENTS */);\n}","map":{"version":3,"mappings":";;;;;;uBACAA,oBAkDQ;IAlDHC,KAAK,EAAC,eAAe;IAAEC,WAAS,sCAAEC,uBAAc,CAACC,MAAM;IACtDC,OAAK,sCAAEF,8BAAqB;IAC5BG,OAAK,sCAAEH,uBAAc,CAACC,MAAM;IAAGG,QAAQ,EAAC;MAKQC,eAAS,wBAF7DC,aAImBC;;IAJDT,KAAK,EAAC,uDAAuD;IAE5DU,YAAU,EAAER;kFAGjCS,6FAAyE,EACzEA,mFAA+D,EAC/DA,wCAAwB,qBACtBZ,oBAUea,6BAVoBL,cAAQ,CAACM,MAAM,EAA1BC,OAAO;yBAA/BN,aAUeO;MATGC,EAAE,EAAEF,OAAO,CAACE,EAAE;MACdC,GAAG,EAAEH,OAAO,CAACE,EAAE;MACf,UAAQ,EAAEF,OAAO,CAACI,OAAO;MACzB,kBAAgB,EAAEJ,OAAO,CAACK,eAAe;MACzCf,OAAK,aAAEF,8BAAqB,CAACY,OAAO,EAAEX,MAAM,4CAC7C,QAAe;MAAE,eAAa,EAAEW,OAAO,CAACM,QAAQ;MAC/C,aAAW,EAAEb,eAAS;MAAG,aAAW,EAAEA,eAAS;MAC/C,mBAAiB,EAAEA;;qDAKnCR,oBASaa,6BATsBL,cAAQ,CAACc,MAAM,EAA1BP,OAAO;yBAA/BN,aASac;MARGN,EAAE,EAAEF,OAAO,CAACE,EAAE;MACdC,GAAG,EAAEH,OAAO,CAACE,EAAE;MACf,UAAQ,EAAEF,OAAO,CAACI,OAAO;MACzB,kBAAgB,EAAEJ,OAAO,CAACK,eAAe;MACzCf,OAAK,aAAEF,8BAAqB,CAACY,OAAO,EAAEX,MAAM,4CAC7C,QAAe;MAAE,eAAa,EAAEW,OAAO,CAACM,QAAQ;MAC/C,aAAW,EAAEb,eAAS;MAAG,aAAW,EAAEA;;qDAIvDR,oBASiBa,6BATqBL,cAAQ,CAACgB,SAAS,EAA7BT,OAAO;yBAAlCN,aASiBgB;MARAR,EAAE,EAAEF,OAAO,CAACE,EAAE;MACdC,GAAG,EAAEH,OAAO,CAACE,EAAE;MACf,UAAQ,EAAEF,OAAO,CAACI,OAAO;MACzB,kBAAgB,EAAEJ,OAAO,CAACK,eAAe;MACzCf,OAAK,aAAEF,8BAAqB,CAACY,OAAO,EAAEX,MAAM,4CAC7C,QAAe;MAAE,eAAa,EAAEW,OAAO,CAACM,QAAQ;MAC/C,aAAW,EAAEb,eAAS;MAAG,aAAW,EAAEA;;kCAG1DI,kGAA8E,EAC9EA,oFAAgE,EAChEA,2CAA2B","names":["_createElementBlock","class","onMousemove","$options","$event","onClick","onKeyup","tabindex","$data","_createBlock","_component_elements_browser","onAddElement","_createCommentVNode","_Fragment","circle","element","_component_circle_element","id","key","canMove","backgroundColor","selected","square","_component_square_element","rectangle","_component_rectangle_element"],"sourceRoot":"","sources":["/Users/ihm/myDrive/private/learning_vue/one_app_multiple_components/src/components/movableElements/mainMovableElements.vue"],"sourcesContent":["<template>\n<div class=\"mainContainer\" @mousemove=\"updateMousePos($event)\"\n     @click=\"handleSelectedElement(null)\"\n     @keyup=\"handleKeyPress($event)\" tabindex=\"0\"\n\n>\n  <elements-browser class=\"elementsBrowser animate__animated animate__fadeInLeft\"\n\n                    @addElement=\"addNewElement\" v-if=\"mousePosX<100\">\n\n  </elements-browser>\n<!--<square-element  :mouse-pos-x=\"mousePosX\" :mouse-pos-y=\"mousePosY\"-->\n<!--                :can-move=\"true\" background-color=\"red\">-->\n<!--</square-element>-->\n  <circle-element  v-for=\"element in elements.circle\"\n                   :id=\"element.id\"\n                   :key=\"element.id\"\n                   :can-move=\"element.canMove\"\n                   :background-color=\"element.backgroundColor\"\n                   @click=\"handleSelectedElement(element, $event)\"\n                   v-on:click.stop :selected-flag=\"element.selected\"\n                   :mouse-pos-x=\"mousePosX\" :mouse-pos-y=\"mousePosY\"\n                   :multiple-selected=\"multipleSelected\"\n  >\n</circle-element>\n\n\n    <square-element  v-for=\"element in elements.square\"\n                   :id=\"element.id\"\n                   :key=\"element.id\"\n                   :can-move=\"element.canMove\"\n                   :background-color=\"element.backgroundColor\"\n                   @click=\"handleSelectedElement(element, $event)\"\n                   v-on:click.stop :selected-flag=\"element.selected\"\n                   :mouse-pos-x=\"mousePosX\" :mouse-pos-y=\"mousePosY\"\n  >\n</square-element>\n\n   <rectangle-element  v-for=\"element in elements.rectangle\"\n                   :id=\"element.id\"\n                   :key=\"element.id\"\n                   :can-move=\"element.canMove\"\n                   :background-color=\"element.backgroundColor\"\n                   @click=\"handleSelectedElement(element, $event)\"\n                   v-on:click.stop :selected-flag=\"element.selected\"\n                   :mouse-pos-x=\"mousePosX\" :mouse-pos-y=\"mousePosY\"\n  >\n</rectangle-element>\n<!--  <rectangle-element  :mouse-pos-x=\"mousePosX\" :mouse-pos-y=\"mousePosY\"-->\n<!--                :can-move=\"true\" background-color=\"blue\">-->\n<!--</rectangle-element>-->\n  </div>\n</template>\n\n<script>\nimport squareElement from \"@/components/movableElements/squareElement\";\nimport rectangleElement from \"@/components/movableElements/rectangleElement\";\nimport CircleElement from \"@/components/movableElements/circleElement\";\nimport elementsBrowser from \"@/components/movableElements/elementsBrowser\";\n\nexport default {\nname: \"mainMovableElements\",\n  components:{CircleElement, squareElement,\n    rectangleElement, elementsBrowser},\n  data(){\n  return {\n    mousePosX: 0,\n    mousePosY: 0,\n    elements: {\n      circle: {},\n      square: {},\n      rectangle: {},\n    },\n    elementsHighestId: 0,\n    elementsCount: 0,\n    elementsDefaultBackgroundColors: {\n      circle: 'red',\n      square: 'blue',\n      rectangle: 'green'\n    },\n    selectedItems: {},\n    multipleSelected: false,\n  }\n  },\n  methods:{\n  updateMousePos(event){\n    this.mousePosX = event.clientX;\n    this.mousePosY = event.clientY;\n  },\n  handleSelectedElement(element, event){\n      for (const [type, els] of Object.entries(this.elements)) {\n        for (const [id, elData] of Object.entries(this.elements[type])) {\n          if (element != null) {\n            if (id == element.id) {\n              this.elements[type][id].selected = true;\n              this.selectedItems[id] = elData;\n            } else {\n              if (!event.shiftKey) {\n                this.elements[type][id].selected = false;\n                if (this.selectedItems.hasOwnProperty(id)){\n                  delete this.selectedItems[id]\n                }\n\n              }\n            }\n          }\n          else {\n            this.elements[type][id].selected = false;\n            if (this.selectedItems.hasOwnProperty(id)){\n                  delete this.selectedItems[id]\n                }\n\n          }\n        }\n      }\n  },\n  handleKeyPress(event) {\n    if (event.key == \"Delete\") {\n      for (const [id, value] of Object.entries(this.selectedItems)) {\n        delete this.elements[value.type][id];\n        if (this.selectedItems.hasOwnProperty(id)){\n                  delete this.selectedItems[id]\n                }\n        this.elementsCount -= 1;\n      }\n    }\n  },\n  addNewElement(type){\n    var elementId = this.elementsHighestId +1;\n    var elementData = {\n          type: type,\n          id: elementId,\n          canMove: true,\n          backgroundColor: this.elementsDefaultBackgroundColors[type],\n          selected: false,\n    }\n    this.elements[type][elementId] = elementData\n    this.elementsHighestId += 1\n    this.elementsCount += 1\n  },\n  },\n  watch:{\n  selectedItems(oldValue, newValue){\n    console.log(newValue)\n    if (Object.entries(this.selectedItems).length > 1){\n      this.multipleSelected = true;\n    }\n    else {\n      this.multipleSelected = false;\n    }\n    console.log(this.multipleSelected)\n  },\n  }\n}\n</script>\n\n<style scoped>\n    .mainContainer{\n    position: absolute;\n    width: 100%;\n    height: 100%;\n      background-color: #ffffff;\n  }\n\n    .elementsBrowser{\n      position: absolute;\n      top: 25%;\n      -ms-transform: translateY(-50%);\n      transform: translateY(-50%);\n    }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}