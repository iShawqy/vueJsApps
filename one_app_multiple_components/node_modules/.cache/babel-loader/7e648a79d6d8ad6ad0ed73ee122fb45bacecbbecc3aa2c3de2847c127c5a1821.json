{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_square_element = _resolveComponent(\"square-element\");\n  const _component_circle_element = _resolveComponent(\"circle-element\");\n  const _component_rectangle_element = _resolveComponent(\"rectangle-element\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"mainContainer\",\n    onMousemove: _cache[2] || (_cache[2] = $event => $options.updateMousePos($event)),\n    onClick: _cache[3] || (_cache[3] = $event => $options.handleSelectedElement(null)),\n    onKeyup: _cache[4] || (_cache[4] = $event => $options.handleKeyPress($event)),\n    tabindex: \"0\"\n  }, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.addCircle && $options.addCircle(...args))\n  }, \" add circle \"), _createVNode(_component_square_element, {\n    \"mouse-pos-x\": $data.mousePosX,\n    \"mouse-pos-y\": $data.mousePosY,\n    \"can-move\": true,\n    \"background-color\": \"red\"\n  }, null, 8 /* PROPS */, [\"mouse-pos-x\", \"mouse-pos-y\"]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.elements.circle, element => {\n    return _openBlock(), _createBlock(_component_circle_element, {\n      id: element.id,\n      key: element.id,\n      \"mouse-pos-x\": $data.mousePosX,\n      \"mouse-pos-y\": $data.mousePosY,\n      \"can-move\": element.canMove,\n      \"background-color\": element.backgroundColor,\n      onClick: [$event => $options.handleSelectedElement(element), _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"stop\"]))]\n    }, null, 8 /* PROPS */, [\"id\", \"mouse-pos-x\", \"mouse-pos-y\", \"can-move\", \"background-color\", \"onClick\"]);\n  }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_rectangle_element, {\n    \"mouse-pos-x\": $data.mousePosX,\n    \"mouse-pos-y\": $data.mousePosY,\n    \"can-move\": true,\n    \"background-color\": \"blue\"\n  }, null, 8 /* PROPS */, [\"mouse-pos-x\", \"mouse-pos-y\"])], 32 /* HYDRATE_EVENTS */);\n}","map":{"version":3,"mappings":";;;;;uBACAA,oBA0BQ;IA1BHC,KAAK,EAAC,eAAe;IAAEC,WAAS,sCAAEC,uBAAc,CAACC,MAAM;IACtDC,OAAK,sCAAEF,8BAAqB;IAC5BG,OAAK,sCAAEH,uBAAc,CAACC,MAAM;IAAGG,QAAQ,EAAC;MAE5CC,oBAES;IAFAH,OAAK,yCAAEF,iDAAS;KAAE,cAE3B,GACFM,aAEiBC;IAFC,aAAW,EAAEC,eAAS;IAAG,aAAW,EAAEA,eAAS;IAChD,UAAQ,EAAE,IAAI;IAAE,kBAAgB,EAAC;8EAEhDX,oBAWeY,6BAXoBD,cAAQ,CAACE,MAAM,EAA1BC,OAAO;yBAA/BC,aAWeC;MAVGC,EAAE,EAAEH,OAAO,CAACG,EAAE;MACdC,GAAG,EAAEJ,OAAO,CAACG,EAAE;MACf,aAAW,EAAEN,eAAS;MAAG,aAAW,EAAEA,eAAS;MAC/C,UAAQ,EAAEG,OAAO,CAACK,OAAO;MACzB,kBAAgB,EAAEL,OAAO,CAACM,eAAe;MACzCf,OAAK,aAAEF,8BAAqB,CAACW,OAAO,4CACrC,QAAe;;kCAMhCL,aAEkBY;IAFG,aAAW,EAAEV,eAAS;IAAG,aAAW,EAAEA,eAAS;IACrD,UAAQ,EAAE,IAAI;IAAE,kBAAgB,EAAC","names":["_createElementBlock","class","onMousemove","$options","$event","onClick","onKeyup","tabindex","_createElementVNode","_createVNode","_component_square_element","$data","_Fragment","circle","element","_createBlock","_component_circle_element","id","key","canMove","backgroundColor","_component_rectangle_element"],"sourceRoot":"","sources":["/Users/ihm/myDrive/private/learning_vue/one_app_multiple_components/src/components/movableElements/mainMovableElements.vue"],"sourcesContent":["<template>\n<div class=\"mainContainer\" @mousemove=\"updateMousePos($event)\"\n     @click=\"handleSelectedElement(null)\"\n     @keyup=\"handleKeyPress($event)\" tabindex=\"0\"\n>\n  <button @click=\"addCircle\">\n    add circle\n  </button>\n<square-element  :mouse-pos-x=\"mousePosX\" :mouse-pos-y=\"mousePosY\"\n                :can-move=\"true\" background-color=\"red\">\n</square-element>\n  <circle-element  v-for=\"element in elements.circle\"\n                   :id=\"element.id\"\n                   :key=\"element.id\"\n                   :mouse-pos-x=\"mousePosX\" :mouse-pos-y=\"mousePosY\"\n                   :can-move=\"element.canMove\"\n                   :background-color=\"element.backgroundColor\"\n                   @click=\"handleSelectedElement(element)\"\n                   v-on:click.stop\n\n\n  >\n</circle-element>\n\n  <rectangle-element  :mouse-pos-x=\"mousePosX\" :mouse-pos-y=\"mousePosY\"\n                :can-move=\"true\" background-color=\"blue\">\n</rectangle-element>\n  </div>\n</template>\n\n<script>\nimport squareElement from \"@/components/movableElements/squareElement\";\nimport rectangleElement from \"@/components/movableElements/rectangleElement\";\nimport CircleElement from \"@/components/movableElements/circleElement\";\n\nexport default {\nname: \"mainMovableElements\",\n  components:{CircleElement, squareElement, rectangleElement},\n  data(){\n  return {\n    mousePosX: 0,\n    mousePosY: 0,\n    elements: {\n      circle: [],\n      square: [],\n      rectangle:[],\n    },\n    selectedItem: null,\n  }\n  },\n  methods:{\n  updateMousePos(event){\n    this.mousePosX = event.clientX;\n    this.mousePosY = event.clientY;\n  },\n  addCircle(){\n    var type = 'circle'\n    this.elements[type].push(\n        {\n          type: type,\n          id: this.elements[type].length +1,\n          canMove: true,\n          backgroundColor: 'yellow'\n        }\n    )\n    },\n  handleSelectedElement(element){\n\n    if (element != null) {\n      this.selectedItem = element;\n    } else {\n      this.selectedItem = null;\n    }\n\n  },\n  handleKeyPress(event){\n    if (event.key == \"Delete\"){\n      if (this.selectedItem != null){\n        var toDeleteIdx = 0;\n        for (let i = 0; i < this.elements[this.selectedItem.type].length; i++) {\n          if (this.selectedItem.id == this.elements[this.selectedItem.type][i]) {\n            toDeleteIdx = i;\n            break;\n          }\n        }\n        this.elements[this.selectedItem.type].splice(toDeleteIdx, 1)\n      }\n    }\n\n  },\n\n\n  }\n}\n</script>\n\n<style scoped>\n    .mainContainer{\n    position: absolute;\n    width: 100%;\n    height: 100%;\n      background-color: #ffffff;\n\n    /*left: 50%;*/\n    /*  top: 50%;*/\n    /*  -webkit-transform: translate(-50%, -50%);*/\n    /*  transform: translate(-50%, -50%);*/\n  }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}