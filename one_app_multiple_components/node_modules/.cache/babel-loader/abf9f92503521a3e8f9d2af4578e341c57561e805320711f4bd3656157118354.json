{"ast":null,"code":"import editableInputWithLabel from \"@/components/editableQuestionaire/editableInputWithLabel\";\nexport default {\n  name: \"questionaireHead\",\n  components: {\n    editableInputWithLabel\n  },\n  props: ['questionaireHeadDataDefault'],\n  data() {\n    return {\n      questionaireHeadData: {\n        creator: this.questionaireHeadDataDefault.creator,\n        title: this.questionaireHeadDataDefault.title,\n        description: this.questionaireHeadDataDefault.description\n      },\n      questionaireHeadFilled: false\n    };\n  },\n  mounted() {\n    setInterval(() => {\n      this.checkQuestionaireHeadFilled();\n    }, 50);\n  },\n  methods: {\n    checkQuestionaireHeadFilled() {\n      var oldValue = this.questionaireHeadFilled;\n      for (const [prop, value] of Object.entries(this.questionaireHeadData)) {\n        if (value.length == 0) {\n          this.questionaireHeadFilled = false;\n          break;\n        } else {\n          this.questionaireHeadFilled = true;\n        }\n      }\n      if (this.questionaireHeadFilled) {\n        if (oldValue != this.questionaireHeadFilled) {\n          this.$emit('filled', [true, this.questionaireHeadData]);\n        }\n      } else {\n        if (oldValue != this.questionaireHeadFilled) {\n          this.$emit('filled', [false, this.questionaireHeadData]);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAoBA,OAAOA,sBAAqB,MAAO,0DAA0D;AAE7F,eAAe;EACfC,IAAI,EAAE,kBAAkB;EACxBC,UAAU,EAAE;IAACF;EAAsB,CAAC;EACpCG,KAAK,EAAE,CAAC,6BAA6B,CAAC;EAEtCC,IAAG,GAAK;IACN,OAAO;MACLC,oBAAoB,EAAC;QACnBC,OAAO,EAAE,IAAI,CAACC,2BAA2B,CAACD,OAAO;QACjDE,KAAK,EAAE,IAAI,CAACD,2BAA2B,CAACC,KAAK;QAC7CC,WAAW,EAAE,IAAI,CAACF,2BAA2B,CAACE;MAChD,CAAC;MACDC,sBAAsB,EAAE;IAE1B;EACF,CAAC;EACDC,OAAO,GAAG;IAERC,WAAW,CAAC,MAAM;MACN,IAAI,CAACC,2BAA2B,EAAE;IACpC,CAAC,EAAE,EAAE,CAAC;EAClB,CAAC;EACCC,OAAO,EAAC;IACRD,2BAA2B,GAAE;MAC3B,IAAIE,QAAO,GAAI,IAAI,CAACL,sBAAsB;MAC1C,KAAK,MAAM,CAACM,IAAI,EAAEC,KAAK,KAAKC,MAAM,CAACC,OAAO,CAAC,IAAI,CAACd,oBAAoB,CAAC,EAAE;QACrE,IAAIY,KAAK,CAACG,MAAK,IAAK,CAAC,EAAC;UACpB,IAAI,CAACV,sBAAqB,GAAI,KAAK;UACnC;QACF,OAAO;UACL,IAAI,CAACA,sBAAqB,GAAI,IAAI;QACpC;MACF;MAEA,IAAI,IAAI,CAACA,sBAAsB,EAAE;QAC7B,IAAIK,QAAO,IAAK,IAAI,CAACL,sBAAsB,EAAE;UAC3C,IAAI,CAACW,KAAK,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAC,IAAI,CAAChB,oBAAoB,CAAC;QACvD;MACF,OAAO;QACP,IAAIU,QAAO,IAAK,IAAI,CAACL,sBAAsB,EAAE;UACzC,IAAI,CAACW,KAAK,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAC,IAAI,CAAChB,oBAAoB,CAAC;QACxD;MACJ;IACF;EAEA;AACF","names":["editableInputWithLabel","name","components","props","data","questionaireHeadData","creator","questionaireHeadDataDefault","title","description","questionaireHeadFilled","mounted","setInterval","checkQuestionaireHeadFilled","methods","oldValue","prop","value","Object","entries","length","$emit"],"sourceRoot":"","sources":["/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/components/editableQuestionaire/questionaireHead.vue"],"sourcesContent":["<template>\n  <div class=\"mainContainer\">\n    <editable-input-with-label v-model.trim=\"questionaireHeadData.creator\" label=\"Your name\"\ndefault-value-to-show=\"Elvis\" width=\"100px\">\n</editable-input-with-label>\n  <editable-input-with-label v-model.trim=\"questionaireHeadData.title\" label=\"Title\"\ndefault-value-to-show=\"ex: Personality test\" width=\"200px\">\n</editable-input-with-label>\n    <editable-input-with-label v-model.trim=\"questionaireHeadData.description\" label=\"Description\"\ndefault-value-to-show=\"explain what is it about in few words\" width=\"350px\" >\n</editable-input-with-label>\n  </div>\n\n\n<!--<div v-if=\"questionaireHeadFilled\">-->\n<!--  All filled-->\n<!--</div>-->\n</template>\n\n<script>\nimport editableInputWithLabel from \"@/components/editableQuestionaire/editableInputWithLabel\";\n\nexport default {\nname: \"questionaireHead\",\ncomponents: {editableInputWithLabel},\nprops: ['questionaireHeadDataDefault'],\n\ndata () {\n  return {\n    questionaireHeadData:{\n      creator: this.questionaireHeadDataDefault.creator,\n      title: this.questionaireHeadDataDefault.title,\n      description: this.questionaireHeadDataDefault.description,\n    },\n    questionaireHeadFilled: false,\n\n  }\n},\nmounted() {\n\n  setInterval(() => {\n              this.checkQuestionaireHeadFilled();\n            }, 50);\n},\n  methods:{\n  checkQuestionaireHeadFilled(){\n    var oldValue = this.questionaireHeadFilled;\n    for (const [prop, value] of Object.entries(this.questionaireHeadData)) {\n      if (value.length == 0){\n        this.questionaireHeadFilled = false;\n        break\n      } else {\n        this.questionaireHeadFilled = true;\n      }\n    }\n\n    if (this.questionaireHeadFilled) {\n        if (oldValue != this.questionaireHeadFilled) {\n          this.$emit('filled', [true,this.questionaireHeadData])\n        }\n      } else {\n      if (oldValue != this.questionaireHeadFilled) {\n          this.$emit('filled', [false,this.questionaireHeadData])\n        }\n    }\n  },\n\n  }\n}\n</script>\n\n<style scoped>\n.mainContainer{\n  display: flex;\n  width: 800px;\n  height: fit-content;\n  flex-wrap: wrap;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}