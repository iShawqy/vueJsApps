{"ast":null,"code":"export default {\n  name: \"circleElement\",\n  props: {\n    id: {\n      type: Number,\n      default: 0\n    },\n    mousePosX: {\n      type: Number,\n      default: 0\n    },\n    mousePosY: {\n      type: Number,\n      default: 0\n    },\n    width: {\n      type: String,\n      default: '100px'\n    },\n    height: {\n      type: String,\n      default: '100px'\n    },\n    backgroundColor: {\n      type: String,\n      default: 'green'\n    },\n    selected: {\n      type: Boolean,\n      default: false\n    },\n    moving: {\n      type: Boolean,\n      default: false\n    },\n    resizing: {\n      type: Boolean,\n      default: false\n    },\n    parentKeyEvent: {\n      type: String,\n      default: 'none'\n    }\n  },\n  data() {\n    return {\n      movingIntervalId: null,\n      resizingIntervalId: null,\n      elementPosX: 200 + Math.floor(Math.random() * 300),\n      elementPosY: 200 + Math.floor(Math.random() * 300),\n      offsetX: 0,\n      offsetY: 0,\n      startPosX: 0,\n      startPosY: 0,\n      originalWidth: 0,\n      baseStyle: {\n        position: 'absolute',\n        top: '0px',\n        left: '0px',\n        backgroundColor: this.backgroundColor,\n        width: this.width,\n        height: this.width,\n        fontSize: '30px',\n        fontFamily: 'Arial',\n        border: 'none',\n        borderRadius: '100%',\n        // padding: '20px',\n        textAlign: 'center',\n        textDecoration: 'none',\n        display: 'inline-flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n\n        // margin: '4px 2px',\n        // borderRadius: '100%',\n      },\n\n      selectedStyle: {\n        border: 'none'\n      },\n      elementKeyEvent: null,\n      type: 'circle',\n      centerXY: {\n        x: 0,\n        y: 0\n      }\n    };\n  },\n  mounted() {\n    this.setElementPos();\n  },\n  methods: {\n    setElementPos() {\n      this.baseStyle.left = this.elementPosX.toString() + 'px';\n      this.baseStyle.top = this.elementPosY.toString() + 'px';\n      this.centerXY.x = this.elementPosX;\n      this.centerXY.y = this.elementPosY;\n      this.emitElementCenterXY();\n    },\n    // executeMouseDown(event){\n    //   if (event.button == 0 && !this.multipleSelected) {\n    //     this.startDragging()\n    //   }\n    // },\n    // executeMouseUp(event){\n    //   if (event.button == 0) {\n    //     this.stopDragging()\n    //   }\n    // },\n    startMoving() {\n      this.offsetY = this.mousePosY - this.elementPosY;\n      this.offsetX = this.mousePosX - this.elementPosX;\n      this.movingIntervalId = setInterval(() => {\n        this.move();\n      }, 25);\n    },\n    stopMoving() {\n      this.centerXY.x = parseInt(this.baseStyle.left.split(\"px\")[0]);\n      this.centerXY.y = parseInt(this.baseStyle.top.split(\"px\")[0]);\n      this.emitElementCenterXY();\n      clearInterval(this.movingIntervalId);\n    },\n    emitElementCenterXY() {\n      var elData = {\n        id: this.id,\n        type: this.type,\n        centerXY: this.centerXY\n      };\n      this.$emit('elementCenterXY', elData);\n    },\n    move() {\n      if (this.moving) {\n        this.elementPosX = this.mousePosX - this.offsetX;\n        this.elementPosY = this.mousePosY - this.offsetY;\n        this.baseStyle.top = this.elementPosY.toString() + 'px';\n        this.baseStyle.left = this.elementPosX.toString() + 'px';\n      }\n    },\n    setSize() {\n      this.stopResizing();\n      if (this.parentKeyEvent == \"Enter\") {\n        console.log('set');\n      } else if (this.parentKeyEvent == \"Escape\") {\n        console.log(this.originalWidth);\n        this.baseStyle.width = this.originalWidth;\n        this.baseStyle.height = this.originalWidth;\n      }\n      this.selectElement(true);\n    },\n    startResizing() {\n      this.selectElement(false);\n      this.originalWidth = this.baseStyle.width;\n      this.baseStyle.border = '5px dashed black';\n      this.startPosX = this.mousePosX;\n      this.startPosY = this.mousePosY;\n      this.resizingIntervalId = setInterval(() => {\n        this.resize();\n      }, 25);\n    },\n    resize() {\n      var width = parseInt(this.baseStyle.width.split(\"px\")[0]) + (this.mousePosX - this.startPosX);\n      // var height = parseInt(this.baseStyle.width.split(\"px\")[0])+ (this.mousePosX - this.startPosX);\n      if (width < 0) {\n        width *= -1;\n      }\n      // var biggerDimension = 0;\n      // if (width >= height){\n      //   biggerDimension = width;\n      // } else {\n      //   biggerDimension = height;\n      // }\n\n      if (width < 5) {\n        width = 5;\n      }\n      this.baseStyle.width = width.toString() + 'px';\n      this.baseStyle.height = width.toString() + 'px';\n      this.startPosX = this.mousePosX;\n    },\n    stopResizing() {\n      this.baseStyle.border = 'none';\n      this.selectedStyle['border'] = '5px solid black';\n      clearInterval(this.resizingIntervalId);\n    },\n    selectElement(select) {\n      if (select) {\n        this.selectedStyle['border'] = '5px solid black';\n      } else {\n        this.selectedStyle = {};\n      }\n    },\n    handleKeyPress(event) {\n      if (event.key == \"Escape\") {}\n    }\n  },\n  watch: {\n    selected(newValue) {\n      this.selectElement(newValue);\n    },\n    resizing(newValue) {\n      if (newValue) {\n        this.startResizing();\n      } else {\n        this.setSize();\n      }\n    },\n    moving(newValue) {\n      if (newValue) {\n        this.startMoving();\n      } else {\n        this.stopMoving();\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["name","props","id","type","Number","default","mousePosX","mousePosY","width","String","height","backgroundColor","selected","Boolean","moving","resizing","parentKeyEvent","data","movingIntervalId","resizingIntervalId","elementPosX","Math","floor","random","elementPosY","offsetX","offsetY","startPosX","startPosY","originalWidth","baseStyle","position","top","left","fontSize","fontFamily","border","borderRadius","textAlign","textDecoration","display","flexDirection","justifyContent","alignItems","selectedStyle","elementKeyEvent","centerXY","x","y","mounted","setElementPos","methods","toString","emitElementCenterXY","startMoving","setInterval","move","stopMoving","parseInt","split","clearInterval","elData","$emit","setSize","stopResizing","console","log","selectElement","startResizing","resize","select","handleKeyPress","event","key","watch","newValue"],"sourceRoot":"","sources":["/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/components/movableElements/circleElement.vue"],"sourcesContent":["<template>\n<div :style=\"[baseStyle, selectedStyle]\"\n>\n\n  </div>\n</template>\n\n<script>\nexport default {\nname: \"circleElement\",\n  props: {\n    id: {\n      type: Number,\n      default:0\n    },\n    mousePosX: {\n      type: Number,\n      default: 0\n    },\n    mousePosY: {\n      type: Number,\n      default: 0\n    },\n    width: {\n            type: String,\n            default: '100px'\n          },\n    height: {\n            type: String,\n            default: '100px'\n          },\n    backgroundColor: {\n             type: String,\n             default: 'green'\n            },\n    selected: {\n      type: Boolean,\n      default: false,\n    },\n    moving: {\n      type: Boolean,\n      default: false,\n    },\n    resizing: {\n      type: Boolean,\n      default: false,\n    },\n    parentKeyEvent: {\n      type: String,\n      default: 'none',\n    },\n  },\n  data(){\n  return {\n    movingIntervalId: null,\n    resizingIntervalId: null,\n    elementPosX: 200 + Math.floor(Math.random() * 300),\n    elementPosY:200+ Math.floor(Math.random() * 300),\n    offsetX:0,\n    offsetY:0,\n    startPosX: 0,\n    startPosY: 0,\n    originalWidth:0,\n    baseStyle: {\n      position: 'absolute',\n      top: '0px',\n      left: '0px',\n      backgroundColor: this.backgroundColor,\n      width: this.width,\n      height: this.width,\n      fontSize: '30px',\n      fontFamily: 'Arial',\n      border: 'none',\n      borderRadius: '100%',\n      // padding: '20px',\n      textAlign: 'center',\n      textDecoration: 'none',\n      display: 'inline-flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n\n      // margin: '4px 2px',\n      // borderRadius: '100%',\n\n    },\n    selectedStyle: {\n      border: 'none'\n    },\n    elementKeyEvent: null,\n    type: 'circle',\n    centerXY: {\n      x:0,\n      y:0\n    },\n  }\n  },\n  mounted () {\n  this.setElementPos()\n  },\n  methods: {\n            setElementPos(){\n            this.baseStyle.left = this.elementPosX.toString() + 'px';\n            this.baseStyle.top = this.elementPosY.toString() + 'px';\n            this.centerXY.x = this.elementPosX;\n            this.centerXY.y = this.elementPosY;\n            this.emitElementCenterXY()\n            },\n            // executeMouseDown(event){\n            //   if (event.button == 0 && !this.multipleSelected) {\n            //     this.startDragging()\n            //   }\n            // },\n            // executeMouseUp(event){\n            //   if (event.button == 0) {\n            //     this.stopDragging()\n            //   }\n            // },\n            startMoving(){\n                this.offsetY = this.mousePosY - this.elementPosY;\n                this.offsetX = this.mousePosX - this.elementPosX;\n                this.movingIntervalId = setInterval(() => {\n                  this.move();\n                }, 25);\n            },\n            stopMoving(){\n                this.centerXY.x = parseInt(this.baseStyle.left.split(\"px\")[0]);\n                this.centerXY.y = parseInt(this.baseStyle.top.split(\"px\")[0]);\n                this.emitElementCenterXY()\n                clearInterval(this.movingIntervalId);\n\n              },\n            emitElementCenterXY(){\n              var elData = {\n                  id: this.id,\n                  type: this.type,\n                  centerXY: this.centerXY,\n                }\n                this.$emit('elementCenterXY', elData);\n            },\n            move(){\n              if (this.moving){\n                this.elementPosX = this.mousePosX - this.offsetX;\n                this.elementPosY = this.mousePosY - this.offsetY;\n                this.baseStyle.top = this.elementPosY.toString() +'px';\n                this.baseStyle.left = this.elementPosX.toString() +'px';\n              }\n              },\n\n\n            setSize(){\n              this.stopResizing();\n              if (this.parentKeyEvent == \"Enter\"){\n                console.log('set')\n              }\n              else if (this.parentKeyEvent == \"Escape\") {\n                console.log(this.originalWidth)\n                this.baseStyle.width = this.originalWidth;\n                this.baseStyle.height = this.originalWidth;\n              }\n              this.selectElement(true)\n\n            },\n            startResizing(){\n              this.selectElement(false)\n              this.originalWidth = this.baseStyle.width;\n              this.baseStyle.border = '5px dashed black'\n              this.startPosX = this.mousePosX;\n              this.startPosY = this.mousePosY;\n              this.resizingIntervalId = setInterval(() => {\n                      this.resize();\n                    }, 25);\n            },\n            resize(){\n              var width = parseInt(this.baseStyle.width.split(\"px\")[0]) +(this.mousePosX - this.startPosX);\n              // var height = parseInt(this.baseStyle.width.split(\"px\")[0])+ (this.mousePosX - this.startPosX);\n              if (width <0) {\n                width *= -1;\n              }\n                // var biggerDimension = 0;\n                // if (width >= height){\n                //   biggerDimension = width;\n                // } else {\n                //   biggerDimension = height;\n                // }\n\n                if (width < 5){\n                  width = 5;\n                }\n                this.baseStyle.width = width.toString() + 'px';\n                this.baseStyle.height = width.toString() + 'px';\n                this.startPosX = this.mousePosX;\n            },\n            stopResizing(){\n              this.baseStyle.border = 'none';\n              this.selectedStyle['border'] =  '5px solid black';\n              clearInterval(this.resizingIntervalId)\n\n            },\n\n            selectElement(select){\n              if (select){\n                this.selectedStyle['border'] =  '5px solid black';\n              } else {\n                this.selectedStyle = {};\n              }\n            },\n            handleKeyPress(event) {\n            if (event.key == \"Escape\") {\n\n            }\n            }\n\n  },\n  watch:{\n    selected(newValue){\n    this.selectElement(newValue)\n  },\n    resizing(newValue){\n      if (newValue) {\n        this.startResizing()\n      }\n      else {\n        this.setSize()\n      }\n\n    },\n\n    moving(newValue){\n      if (newValue){\n        this.startMoving()\n      } else {\n        this.stopMoving()\n      }\n    },\n\n\n\n  }\n\n\n\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}