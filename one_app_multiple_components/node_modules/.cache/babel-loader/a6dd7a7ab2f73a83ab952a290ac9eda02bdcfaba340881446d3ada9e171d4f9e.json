{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-8853775e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"mainContainer\"\n};\nconst _hoisted_2 = {\n  class: \"choiceAnswerSelectorContainer\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"answerSelectorBtn\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_editable_input_with_label = _resolveComponent(\"editable-input-with-label\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.defaultData, item => {\n    return _openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_editable_input_with_label, {\n      modelValue: item.inputValue,\n      \"onUpdate:modelValue\": $event => item.inputValue = $event,\n      modelModifiers: {\n        trim: true\n      },\n      label: item.label,\n      \"default-value-to-show\": item.defaultValueToShow,\n      width: item.width\n    }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"label\", \"default-value-to-show\", \"width\"]), item.type == 'choice' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \" Correct answer \")) : _createCommentVNode(\"v-if\", true)]);\n  }), 256 /* UNKEYED_FRAGMENT */))]);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAA+B;;;EAKLA,KAAK,EAAC;;;;uBAN7CC,oBAWM,OAXNC,UAWM,sBAVJD,oBAQME,6BARoDC,iBAAW,EAAnBC,IAAI;yBAAtDJ,oBAQM,OARNK,UAQM,GAPJC,aAGsBC;kBAFNH,IAAI,CAACI,UAAU;uCAAfJ,IAAI,CAACI,UAAU;sBAA7B;QAAAC;MAAA,CAA8B;MAAEC,KAAK,EAAEN,IAAI,CAACM,KAAK;MACxD,uBAAqB,EAAEN,IAAI,CAACO,kBAAkB;MAAGC,KAAK,EAAER,IAAI,CAACQ;+GAE7CR,IAAI,CAACS,IAAI,8BAApBb,oBAEM,OAFNc,UAEM,EAFuD,kBAE7D","names":["class","_createElementBlock","_hoisted_1","_Fragment","$data","item","_hoisted_2","_createVNode","_component_editable_input_with_label","inputValue","trim","label","defaultValueToShow","width","type","_hoisted_3"],"sourceRoot":"","sources":["/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/components/editableQuestionaire/addQuestionForm.vue"],"sourcesContent":["<template>\n  <div class=\"mainContainer\">\n    <div class=\"choiceAnswerSelectorContainer\" v-for=\"item in defaultData\">\n      <editable-input-with-label\n        v-model.trim=\"item.inputValue\" :label=\"item.label\"\n:default-value-to-show=\"item.defaultValueToShow\" :width=\"item.width\">\n</editable-input-with-label>\n      <div v-if=\"item.type == 'choice'\"  class=\"answerSelectorBtn\">\n        Correct answer\n      </div>\n    </div>\n\n  </div>\n\n</template>\n\n<script>\nimport editableInputWithLabel from \"@/components/editableQuestionaire/editableInputWithLabel\";\nexport default {\nname: \"addQuestionForm\",\n  components: {editableInputWithLabel},\n  data (){\n  return {\n    defaultData: [\n      {\n        type: 'question',\n        inputValue: '',\n        label: 'Question',\n        defaultValueToShow: 'ask a question',\n        width: '400px',\n\n      },\n        {\n          type: 'choice',\n        inputValue: '',\n        label: 'Choice 1',\n        defaultValueToShow: 'Write choice 1',\n        width: '400px'\n      },\n        {\n          type: 'choice',\n        inputValue: '',\n        label: 'Choice 2',\n        defaultValueToShow: 'Write choice 2',\n        width: '400px'\n      },\n        {\n          type: 'choice',\n        inputValue: '',\n        label: 'Choice 3',\n        defaultValueToShow: 'Write choice 3',\n        width: '400px'\n      },\n        {\n          type: 'choice',\n        inputValue: '',\n        label: 'Choice 4',\n        defaultValueToShow: 'Write choice 4',\n        width: '400px'\n      }\n    ],\n    correctAnswerIdx:0,\n  }\n  }\n}\n</script>\n\n<style scoped>\n.mainContainer{\n  display: flex;\n  width: 800px;\n  height: fit-content;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.choiceAnswerSelectorContainer{\n  display: flex;\n  flex-direction: row;\n}\n.answerSelectorBtn {\n  width: 60px;\n  height: 30px;\n  background-color: green;\n  color: white;\n  border-radius: 10px;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}