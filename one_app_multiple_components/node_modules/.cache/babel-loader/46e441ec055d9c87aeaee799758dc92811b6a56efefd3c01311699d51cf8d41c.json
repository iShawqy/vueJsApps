{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-61b0bdae\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"mainContainer\",\n  id: \"chatAreaElement\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_message_container = _resolveComponent(\"message-container\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.messages, message => {\n    return _openBlock(), _createBlock(_component_message_container, {\n      message: message,\n      key: message.id,\n      id: message.id.toString(),\n      \"is-chatter\": $options.checkIsChatter(message)\n    }, null, 8 /* PROPS */, [\"message\", \"id\", \"is-chatter\"]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"mappings":";;;EACKA,KAAK,EAAC,eAAe;EAACC,EAAE,EAAC;;;;uBAA9BC,oBAQM,OARNC,UAQM,sBAPJD,oBAKoBE,6BALiBC,eAAQ,EAAnBC,OAAO;yBAAjCC,aAKoBC;MAJAF,OAAO,EAAEA,OAAO;MAChBG,GAAG,EAAEH,OAAO,CAACL,EAAE;MACdA,EAAE,EAAEK,OAAO,CAACL,EAAE,CAACS,QAAQ;MACxB,YAAU,EAAEC,uBAAc,CAACL,OAAO","names":["class","id","_createElementBlock","_hoisted_1","_Fragment","$props","message","_createBlock","_component_message_container","key","toString","$options"],"sourceRoot":"","sources":["/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/components/chattingApp/chatArea.vue"],"sourcesContent":["<template>\n<div class=\"mainContainer\" id=\"chatAreaElement\">\n  <message-container v-for=\"message in messages\"\n                     :message=\"message\"\n                     :key=\"message.id\"\n                      :id=\"message.id.toString()\"\n                     :is-chatter=\"checkIsChatter(message)\">\n  </message-container>\n\n</div>\n</template>\n\n<script>\nimport messageContainer from \"@/components/chattingApp/messageContainer\";\nimport MessageContainer from \"@/components/chattingApp/messageContainer\";\nexport default {\nname: \"chatArea\",\n  components: {MessageContainer},\n\n\n  props: [\"messages\", \"chatterName\", \"chatteeName\"],\n  mounted() {\n  var intervalId = setInterval(this.scrollToLastMessage(), 500);\n  },\n  // data(){\n  // // return {\n  // //   isChatter: false,\n  // // }\n  // // },\n  methods:{\n  checkIsChatter(message){\n\n    console.log(message)\n    if (message.creator == this.chatterName){\n     return true\n    } else {\n      return false\n    }\n\n  },\n  scrollToLastMessage(){\n    // var container = this.$el.querySelector(\"#chatAreaElement\");\n    // container.scroll = container.scrollHeight;\n    // var myElement = document.getElementById('element_within_div');\n    // var topPos = myElement.offsetTop;\n    for (let i=0; i<this.messages.length; i++) {\n      // var myElement = document.getElementById(this.messages[i].id.toString());\n      // var topPos = myElement.offsetTop;\n      // document.getElementById('chatAreaElement').scrollTop = topPos;\n      var element = document.getElementById(this.messages[i].id.toString());\n      element.scrollIntoView();\n    }\n\n  }\n\n  }\n}\n</script>\n\n<style scoped>\n.mainContainer{\n  display: flex;\n  width: 100%;\n  height: 90%;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  background-color: #ffffff;\n  /*border-radius: 10px;*/\n  color: #000000;\n  overflow-y: scroll;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}