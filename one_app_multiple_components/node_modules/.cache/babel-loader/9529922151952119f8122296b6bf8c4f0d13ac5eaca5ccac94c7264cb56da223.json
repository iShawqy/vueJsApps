{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-40ea068e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"mainContainer\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  class: \"buttonsContainer\"\n};\nconst _hoisted_4 = [\"disabled\"];\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"actionBtns btnRed\"\n}, \" Remove \", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.questionaires.length == 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \" There is no available questionairs to edit. Refresh this page to create a questionaire. \")) : _createCommentVNode(\"v-if\", true), $data.questionaires.length > 0 ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 1\n  }, _renderList($data.questionaires, questionaire => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: questionaire.id,\n      onClick: _cache[0] || (_cache[0] = $event => $data.edititing = true)\n    }, _toDisplayString(questionaire.title), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    class: \"actionBtns btnBlue\",\n    disabled: !$data.edititing,\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.edit && $options.edit(...args))\n  }, \" Edit \", 8 /* PROPS */, _hoisted_4), _hoisted_5])]);\n}","map":{"version":3,"mappings":";;;EACKA,KAAK,EAAC;AAAe;;;;;EASnBA,KAAK,EAAC;AAAkB;;gEAI7BC,oBAES;EAFDD,KAAK,EAAC;AAAmB,GAAC,UAElC;;;uBAfFE,oBAiBM,OAjBNC,UAiBM,GAhBOC,mBAAa,CAACC,MAAM,uBAA/BH,oBAEM,mBAF8B,2FAEpC,wCACWE,mBAAa,CAACC,MAAM,0BAA/BH,oBAIMI;IAAAC;EAAA,eAJoDH,mBAAa,EAA7BI,YAAY;yBAAtDN,oBAIM;MAHLK,GAAG,EAAEC,YAAY,CAACC,EAAE;MAAGC,OAAK,sCAAEN,eAAS;wBAEpCI,YAAY,CAACG,KAAK;sEAEtBV,oBAOM,OAPNW,UAOM,GANJX,oBAEQ;IAFAD,KAAK,EAAC,oBAAoB;IAAEa,QAAQ,GAAGT,eAAS;IAAGM,OAAK,yCAAEI,uCAAI;KAAE,QAE1E,8BACAC,UAES","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","$data","length","_Fragment","key","questionaire","id","onClick","title","_hoisted_3","disabled","$options","_hoisted_5"],"sourceRoot":"","sources":["/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/components/editableQuestionaire/editRemoveQuestionaire.vue"],"sourcesContent":["<template>\n<div class=\"mainContainer\">\n  <div v-if=\"questionaires.length==0\">\n    There is no available questionairs to edit. Refresh this page to create a questionaire.\n  </div>\n  <div v-if=\"questionaires.length>0\" v-for=\"questionaire in questionaires\"\n  :key=\"questionaire.id\" @click=\"edititing=true\"\n  >\n    {{questionaire.title}}\n  </div>\n  <div class=\"buttonsContainer\">\n    <button class=\"actionBtns btnBlue\" :disabled='!edititing' @click=\"edit\">\n    Edit\n  </button >\n  <button class=\"actionBtns btnRed\">\n    Remove\n  </button>\n  </div>\n</div>\n\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Toaster from '@meforma/vue-toaster'\nexport default {\nname: \"editRemoveQuestionaire\",\n  data(){\n  return {\n    questionaires: [],\n    edititing: false,\n  }\n  },\n  methods:{\n  getAvailableQuestionaires(){\n    axios.get(\"http://localhost:3004/questionairs\")\n    .then(response => {\n      this.questionaires = response.data;\n    })\n    .catch( error => {\n      console.log(error)\n    })\n  },\n  edit(){\n    if (!this.edititing){\n      this.$toast.error(`Please select a questionaire to edit`);\n    }\n    // this.edititing = true;\n\n    },\n  },\n  mounted() {\n  this.getAvailableQuestionaires()\n  }\n}\n</script>\n\n<style scoped>\n\n.mainContainer{\n  display: flex;\n  width: fit-content;\n  height: fit-content;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n}\n\n\n.buttonsContainer{\n  display: flex;\n  width: fit-content;\n  height: fit-content;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n}\n.actionBtns{\n    height: 50px;\n  width: 80px;\n  border-radius: 10px;\n  color: white;\n  font-size: 16px;\n  font-family: Arial;\n  border: solid;\n  text-align: center;\n  text-decoration: none;\n  opacity: 0.6;\n  transition: 0.3s;\n  margin-top: 5px;\n  margin-bottom: 5px;\n}\n\n.btnRed{\n  background-color: #fd0000;\n}\n\n.btnBlue{\n  background-color: #3e30ff;\n}\n\n\n.actionBtns:hover{\n  opacity: 1;\n\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}