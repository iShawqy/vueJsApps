{"ast":null,"code":"export default {\n  name: \"squareElement\",\n  props: {\n    mousePosX: {\n      type: Number,\n      default: 0\n    },\n    mousePosY: {\n      type: Number,\n      default: 0\n    },\n    width: {\n      type: String,\n      default: '100px'\n    },\n    height: {\n      type: String,\n      default: '100px'\n    },\n    backgroundColor: {\n      type: String,\n      default: 'green'\n    },\n    canMove: {\n      type: Boolean,\n      default: true,\n      adjustable: {\n        type: Boolean,\n        default: true\n      }\n    }\n  },\n  data() {\n    return {\n      dragging: false,\n      draggingIntervalId: null,\n      elementPosX: 0,\n      elementPosY: 0,\n      offsetX: 0,\n      offsetY: 0,\n      baseStyle: {\n        position: 'absolute',\n        top: '0px',\n        left: '0px',\n        backgroundColor: this.backgroundColor,\n        width: this.width,\n        height: this.height,\n        fontSize: '30px',\n        fontFamily: 'Arial',\n        border: 'none',\n        // padding: '20px',\n        textAlign: 'center',\n        textDecoration: 'none',\n        display: 'inline-flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n        // margin: '4px 2px',\n        // borderRadius: '100%',\n      }\n    };\n  },\n\n  methods: {\n    startDragging(event) {\n      if (this.canMove) {\n        this.dragging = true;\n        this.offsetY = this.mousePosY - this.elementPosY;\n        this.offsetX = this.mousePosX - this.elementPosX;\n        this.draggingIntervalId = setInterval(() => {\n          this.drag();\n        }, 25);\n      }\n    },\n    stopDragging(event) {\n      this.dragging = false;\n      clearInterval(this.draggingIntervalId);\n    },\n    drag() {\n      if (this.dragging) {\n        this.elementPosX = this.mousePosX - this.offsetX;\n        this.elementPosY = this.mousePosY - this.offsetY;\n        this.baseStyle.top = this.elementPosY.toString() + 'px';\n        this.baseStyle.left = this.elementPosX.toString() + 'px';\n      }\n    }\n  },\n  computed: {\n    editElementProps() {\n      if (this.adjustable) {\n        this.width = '50px';\n        this.baseStyle.width = this.width;\n        console.log('adjusting the elment');\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["name","props","mousePosX","type","Number","default","mousePosY","width","String","height","backgroundColor","canMove","Boolean","adjustable","data","dragging","draggingIntervalId","elementPosX","elementPosY","offsetX","offsetY","baseStyle","position","top","left","fontSize","fontFamily","border","textAlign","textDecoration","display","flexDirection","justifyContent","alignItems","methods","startDragging","event","setInterval","drag","stopDragging","clearInterval","toString","computed","editElementProps","console","log"],"sourceRoot":"","sources":["/Users/ihm/myDrive/private/learning_vue/one_app_multiple_components/src/components/movableElements/squareElement.vue"],"sourcesContent":["<template>\n<div :style=\"[baseStyle]\" @mousedown=\"startDragging($event)\"\n     @mouseup=\"stopDragging($event)\"\n     @click=\"editElementProps\"\n>\n\n  </div>\n</template>\n\n<script>\nexport default {\nname: \"squareElement\",\n  props: {\n          mousePosX: {\n            type: Number,\n            default: 0\n          },\n          mousePosY: {\n            type: Number,\n            default: 0\n          },\n          width: {\n                  type: String,\n                  default: '100px'\n                },\n         height: {\n                  type: String,\n                  default: '100px'\n                },\n         backgroundColor: {\n                   type: String,\n                   default: 'green'\n                  },\n         canMove: {\n                   type: Boolean,\n                   default: true,\n         adjustable: {\n                    type: Boolean,\n                    default: true,\n         }\n         }\n\n  },\n  data(){\n  return {\n    dragging: false,\n    draggingIntervalId: null,\n    elementPosX: 0,\n    elementPosY:0,\n    offsetX:0,\n    offsetY:0,\n    baseStyle: {\n      position: 'absolute',\n      top: '0px',\n      left: '0px',\n      backgroundColor: this.backgroundColor,\n      width: this.width,\n      height: this.height,\n      fontSize: '30px',\n      fontFamily: 'Arial',\n      border: 'none',\n      // padding: '20px',\n      textAlign: 'center',\n      textDecoration: 'none',\n      display: 'inline-flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      // margin: '4px 2px',\n      // borderRadius: '100%',\n\n    },\n\n  }\n  },\n  methods: {\n  startDragging(event){\n    if (this.canMove){\n      this.dragging = true;\n    this.offsetY = this.mousePosY - this.elementPosY;\n    this.offsetX = this.mousePosX - this.elementPosX;\n    this.draggingIntervalId = setInterval(() => {\n              this.drag();\n            }, 25);\n    }\n\n\n  },\n    stopDragging(event){\n    this.dragging = false\n      clearInterval(this.draggingIntervalId)\n    },\n\n    drag(){\n    if (this.dragging){\n      this.elementPosX = this.mousePosX - this.offsetX;\n      this.elementPosY = this.mousePosY - this.offsetY;\n      this.baseStyle.top = this.elementPosY.toString() +'px';\n      this.baseStyle.left = this.elementPosX.toString() +'px';\n\n    }\n    },\n\n  },\n  computed: {\n    editElementProps(){\n      if (this.adjustable) {\n        this.width = '50px';\n        this.baseStyle.width = this.width;\n        console.log('adjusting the elment')\n      }\n    },\n  },\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}