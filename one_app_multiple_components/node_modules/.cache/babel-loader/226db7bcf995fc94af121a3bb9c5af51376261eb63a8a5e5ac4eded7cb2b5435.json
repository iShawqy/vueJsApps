{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-be8c10f2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"mainContainer\"\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_questionaire_head = _resolveComponent(\"questionaire-head\");\n  const _component_add_question_form = _resolveComponent(\"add-question-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_questionaire_head, {\n    onFilled: $options.executeHeadFilled,\n    ref: \"refQestionaireHead\",\n    onQuestionaireHeadData: $options.updateQuestionaireHeadData\n  }, null, 8 /* PROPS */, [\"onFilled\", \"onQuestionaireHeadData\"]), _createVNode(_component_add_question_form, {\n    onFilled: $options.executeQuestionFormFilled,\n    ref: \"refAddQuestionForm\",\n    onFormData: $options.updateFormData\n  }, null, 8 /* PROPS */, [\"onFilled\", \"onFormData\"]), $data.headFilled && $data.questionFormFilled ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.reset && $options.reset(...args))\n  }, \" next question \")) : _createCommentVNode(\"v-if\", true), $data.headFilled && $data.questionFormFilled ? (_openBlock(), _createElementBlock(\"button\", _hoisted_2, \" save questionaire \")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;;EACKA,KAAK,EAAC;AAAe;;;;;;;uBAA1BC,oBAoBM,OApBNC,UAoBM,GAnBJC,aAIoBC;IAJAC,QAAM,EAAEC,0BAAiB;IAC1BC,GAAG,EAAC,oBAAoB;IACvBC,sBAAoB,EAAEF;mEAG1CH,aAGqBM;IAHDJ,QAAM,EAAEC,kCAAyB;IAClCC,GAAG,EAAC,oBAAoB;IACvBG,UAAQ,EAAEJ;uDAGhBK,gBAAU,IAAIA,wBAAkB,kBAA9CV,oBAES;;IAFwCW,OAAK,yCAAEN,yCAAK;KAAE,iBAE/D,wCAEcK,gBAAU,IAAIA,wBAAkB,kBAA9CV,oBAES,sBAFuC,qBAEhD","names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_questionaire_head","onFilled","$options","ref","onQuestionaireHeadData","_component_add_question_form","onFormData","$data","onClick"],"sourceRoot":"","sources":["/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/components/editableQuestionaire/createQuestionaire.vue"],"sourcesContent":["<template>\n<div class=\"mainContainer\">\n  <questionaire-head @filled=\"executeHeadFilled\"\n                     ref=\"refQestionaireHead\"\n                     @questionaireHeadData=\"updateQuestionaireHeadData\"\n  >\n  </questionaire-head>\n  <add-question-form @filled=\"executeQuestionFormFilled\"\n                     ref=\"refAddQuestionForm\"\n                     @formData=\"updateFormData\"\n  ></add-question-form>\n\n  <button v-if=\"headFilled && questionFormFilled\" @click=\"reset\">\n    next question\n  </button>\n\n  <button v-if=\"headFilled && questionFormFilled\">\n    save questionaire\n  </button>\n\n\n</div>\n</template>\n\n<script>\nimport questionaireHead from \"@/components/editableQuestionaire/questionaireHead\";\nimport addQuestionForm from \"@/components/editableQuestionaire/addQuestionForm\";\n\nexport default {\nname: \"createQuestionaire\",\ncomponents:{questionaireHead, addQuestionForm},\ndata(){\n  return {\n    headFilled: false,\n    questionFormFilled: false,\n    currentQuestionIndex: 0,\n    questionaire: {\n      \"title\": \"\",\n      \"length\": 0,\n      \"creator\": \"\",\n      \"createdOn\": \"\",\n      \"creatorMessage\": \"\",\n      \"questions\" : [\n        {\n          \"id\": 1,\n          \"question\": \"\",\n          \"choices\" : [],\n          \"correctAnswer\": \"\"\n        }\n      ]\n    },\n    questionaireHeadDefault: {\n      creator: '',\n      title: '',\n      description: '',\n    },\n    questionDefault: {\n      inputValue: '',\n        label: 'Question',\n        defaultValueToShow: 'ask a question',\n        width: '400px',\n    },\n    choicesDefault: [\n        {\n          type: 'choice',\n        inputValue: '',\n        label: 'Choice 1',\n        defaultValueToShow: 'Write choice 1',\n        width: '400px',\n          correctAnswer: false,\n      },\n        {\n          type: 'choice',\n        inputValue: '',\n        label: 'Choice 2',\n        defaultValueToShow: 'Write choice 2',\n        width: '400px',\n          correctAnswer: false,\n      },\n        {\n          type: 'choice',\n        inputValue: '',\n        label: 'Choice 3',\n        defaultValueToShow: 'Write choice 3',\n        width: '400px',\n          correctAnswer: false,\n      },\n        {\n          type: 'choice',\n        inputValue: '',\n        label: 'Choice 4',\n        defaultValueToShow: 'Write choice 4',\n        width: '400px',\n          correctAnswer: false,\n      }\n    ],\n  }\n},\nmethods:{\n  executeHeadFilled(filled){\n    this.headFilled = filled;\n  },\n  executeQuestionFormFilled(filled){\n    this.questionFormFilled = filled;\n  },\n\n  get(){\n    this.$refs.refQestionaireHead.emitData();\n    this.$refs.refAddQuestionForm.emitData();\n  },\n  updateQuestionaireHeadData(data){\n\n    console.log(data);\n  },\n\n  updateFormData(data){\n    console.log(data);\n  },\n\n  reset() {\n    this.get();\n    // this.$refs.refQestionaireHead.reset(this.questionaireHeadDefault);\n    this.$refs.refAddQuestionForm.reset([this.questionDefault, this.choicesDefault]);\n    },\n\n\n\n}\n}\n</script>\n\n<style scoped>\n.mainContainer{\n  display: flex;\n  width: fit-content;\n  height: fit-content;\n  /*flex-direction: column;*/\n  /*justify-content: center;*/\n  /*align-items: center;*/\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}