{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-8853775e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"mainContainer\"\n};\nconst _hoisted_2 = {\n  class: \"choiceContainer\"\n};\nconst _hoisted_3 = {\n  class: \"labelSelectContainer\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"label\",\n  for: \"comboBox\"\n}, \"Correct answer\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  disabled: \"\",\n  value: \"\"\n}, \"Please select the correct answer\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_editable_input_with_label = _resolveComponent(\"editable-input-with-label\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_editable_input_with_label, {\n    modelValue: $data.question.inputValue,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.question.inputValue = $event),\n    modelModifiers: {\n      trim: true\n    },\n    label: $data.question.label,\n    \"default-value-to-show\": $data.question.defaultValueToShow,\n    width: $data.question.width\n  }, null, 8 /* PROPS */, [\"modelValue\", \"label\", \"default-value-to-show\", \"width\"]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.choices, item => {\n    return _openBlock(), _createBlock(_component_editable_input_with_label, {\n      modelValue: item.inputValue,\n      \"onUpdate:modelValue\": $event => item.inputValue = $event,\n      modelModifiers: {\n        trim: true\n      },\n      label: item.label,\n      \"default-value-to-show\": item.defaultValueToShow,\n      width: item.width\n    }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"label\", \"default-value-to-show\", \"width\"]);\n  }), 256 /* UNKEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"select\", {\n    class: \"selectStyle\",\n    id: \"comboBox\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selected = $event)\n  }, [_hoisted_5, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.choices, item => {\n    return _openBlock(), _createElementBlock(\"option\", null, _toDisplayString(item.inputValue), 1 /* TEXT */);\n  }), 256 /* UNKEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selected]]), _createElementVNode(\"div\", null, _toDisplayString($data.selected), 1 /* TEXT */)])]);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAAiB;;EAWvBA,KAAK,EAAC;AAAsB;gEAC/BC,oBAA0D;EAAnDD,KAAK,EAAC,OAAO;EAACE,GAAG,EAAC;GAAW,gBAAc;gEAEtDD,oBAAmE;EAA3DE,QAAQ,EAAR,EAAQ;EAACC,KAAK,EAAC;GAAG,kCAAgC;;;;uBAf1DC,oBAsBM,OAtBNC,UAsBM,GArBJL,oBASM,OATNM,UASM,GARJC,aAG0BC;gBAFaC,cAAQ,CAACC,UAAU;+DAAnBD,cAAQ,CAACC,UAAU;oBAAjC;MAAAC;IAAA,CAAkC;IAAEC,KAAK,EAAEH,cAAQ,CAACG,KAAK;IACxD,uBAAqB,EAAEH,cAAQ,CAACI,kBAAkB;IAAGC,KAAK,EAAEL,cAAQ,CAACK;yGAEjGV,oBAG4BW,6BAHcN,aAAO,EAAfO,IAAI;yBAAtCC,aAG4BT;kBAFaQ,IAAI,CAACN,UAAU;uCAAfM,IAAI,CAACN,UAAU;sBAA7B;QAAAC;MAAA,CAA8B;MAAEC,KAAK,EAAEI,IAAI,CAACJ,KAAK;MAChD,uBAAqB,EAAEI,IAAI,CAACH,kBAAkB;MAAGC,KAAK,EAAEE,IAAI,CAACF;;sCAIzFd,oBAOM,OAPNkB,UAOM,GANJC,UAA0D,kBAC9DnB,oBAGO;IAHED,KAAK,EAAC,aAAa;IAACqB,EAAE,EAAC,UAAU;+DAAUX,cAAQ;MAC5DY,UAAmE,qBACnEjB,oBAA6DW,6BAArCN,aAAO,EAAfO,IAAI;yBAApBZ,oBAA6D,iCAA1BY,IAAI,CAACN,UAAU;6EAFED,cAAQ,KAIxDT,oBAAuB,8BAAhBS,cAAQ","names":["class","_createElementVNode","for","disabled","value","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_editable_input_with_label","$data","inputValue","trim","label","defaultValueToShow","width","_Fragment","item","_createBlock","_hoisted_3","_hoisted_4","id","_hoisted_5"],"sourceRoot":"","sources":["/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/components/editableQuestionaire/addQuestionForm.vue"],"sourcesContent":["<template>\n  <div class=\"mainContainer\">\n    <div class=\"choiceContainer\">\n      <editable-input-with-label\n                               v-model.trim=\"question.inputValue\" :label=\"question.label\"\n                               :default-value-to-show=\"question.defaultValueToShow\" :width=\"question.width\">\n    </editable-input-with-label>\n    <editable-input-with-label v-for=\"item in choices\"\n                               v-model.trim=\"item.inputValue\" :label=\"item.label\"\n                               :default-value-to-show=\"item.defaultValueToShow\" :width=\"item.width\">\n    </editable-input-with-label>\n    </div>\n\n    <div class=\"labelSelectContainer\">\n      <label class=\"label\" for=\"comboBox\">Correct answer</label>\n  <select  class=\"selectStyle\" id=\"comboBox\" v-model=\"selected\">\n  <option disabled value=\"\">Please select the correct answer</option>\n  <option  v-for=\"item in choices\">{{item.inputValue}}</option>\n</select>\n      <div>{{selected}}</div>\n    </div>\n\n\n  </div>\n\n</template>\n\n<script>\nimport editableInputWithLabel from \"@/components/editableQuestionaire/editableInputWithLabel\";\nexport default {\nname: \"addQuestionForm\",\n  components: {editableInputWithLabel},\n  mounted() {\n  const checkFormFilled = setInterval(() => {\n              this.checkQuestionFormFilled();\n            }, 50);\n},\n  data (){\n  return {\n    question: {\n      inputValue: '',\n        label: 'Question',\n        defaultValueToShow: 'ask a question',\n        width: '400px',\n    },\n    choices: [\n        {\n          type: 'choice',\n        inputValue: '',\n        label: 'Choice 1',\n        defaultValueToShow: 'Write choice 1',\n        width: '400px',\n          correctAnswer: false,\n      },\n        {\n          type: 'choice',\n        inputValue: '',\n        label: 'Choice 2',\n        defaultValueToShow: 'Write choice 2',\n        width: '400px',\n          correctAnswer: false,\n      },\n        {\n          type: 'choice',\n        inputValue: '',\n        label: 'Choice 3',\n        defaultValueToShow: 'Write choice 3',\n        width: '400px',\n          correctAnswer: false,\n      },\n        {\n          type: 'choice',\n        inputValue: '',\n        label: 'Choice 4',\n        defaultValueToShow: 'Write choice 4',\n        width: '400px',\n          correctAnswer: false,\n      }\n    ],\n    selected: '',\n    questionFormFilled: false,\n  }\n  },\n  methods:{\n  checkQuestionFormFilled(){\n    var oldValue = this.questionFormFilled;\n\n    if (this.question.inputValue.length==0){\n      this.questionFormFilled = false;\n    } else {\n      this.questionFormFilled = true;\n    }\n\n    if (this.questionFormFilled) {\n      for (const [prop, value] of Object.entries(this.choices)) {\n      if (value.inputValue.length == 0){\n        this.questionFormFilled = false;\n        break\n      } else {\n        this.questionFormFilled = true;\n      }\n    }\n    }\n\n\n    if (this.questionFormFilled) {\n        if (oldValue != this.questionFormFilled) {\n          this.$emit('filled', true)\n        }\n      } else {\n      if (oldValue != this.questionFormFilled) {\n          this.$emit('filled', false)\n        }\n    }\n  },\n  reset(data){\n\n    this.question.inputValue = data[0].inputValue;\n    this.question.label = data[0].label;\n    this.question.defaultValueToShow = data[0].defaultValueToShow;\n    for (let i=0; i<this.choices.length; i++){\n      this.choices[i].inputValue = data[1][i].inputValue;\n      this.choices[i].label = data[1][i].label;\n      this.choices[i].defaultValueToShow = data[1][i].defaultValueToShow;\n    }\n  },\n  emitData(){\n    console.log([this.question, this.choices, this.selected])\n    this.$emit('formData', [this.question, this.choices, this.selected])\n  }\n  }\n}\n</script>\n\n<style scoped>\n.mainContainer{\n  display: flex;\n  width: 800px;\n  height: fit-content;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.choiceContainer{\n  display: flex;\n  width: 800px;\n  height: fit-content;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n}\n.answerSelectorBtn {\n  width: 60px;\n  height: 25px;\n  background-color: #008000;\n  color: white;\n  border-radius: 10px;\n  /*margin-top: 5px;*/\n  /*margin-bottom: 5px;*/\n  /*margin-left: 5px;*/\n  /*margin-right: 5px;*/\n  font-size:10px;\n  font-family:\"Arial\";\n  align-content: center;\n  text-align: center;\n}\n\n.selectStyle{\n  width: 350px;\n  height: 30px;\n  border-radius: 10px;\n  margin: 5px;\n  color: black;\n  border-color: green;\n   font-size: 16px;\n  font-family: Arial;\n}\n\n.label{\n  font-size: 20px;\n  font-family: Arial;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  margin-left: 5px;\n  margin-right: 5px;\n}\n.labelSelectContainer{\n  display: flex;\n  width: 800px;\n  height: fit-content;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}