{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport chatHead from \"@/components/chattingApp/chatHead\";\nexport default {\n  name: \"mainChattingApp\",\n  components: {\n    chatHead\n  },\n  mounted() {\n    this.fetchUsers();\n  },\n  data() {\n    return {\n      users: null,\n      chatterName: '',\n      chatter: null,\n      chatteeName: '',\n      chattee: null,\n      chatters: [],\n      chattees: [],\n      ready: false,\n      usersUrl: \"http://localhost:3004/users\",\n      messagesUrl: \"http://localhost:3004/messages\"\n    };\n  },\n  methods: {\n    fetchUsers() {\n      console.log(this.users);\n      axios.get(this.usersUrl).then(response => {\n        this.users = response.data;\n        this.createChatters();\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    createChatters() {\n      console.log(this.users);\n      this.chatters = [];\n      for (let i = 0; i < this.users.length; i++) {\n        this.chatters.push(this.users[i]);\n      }\n    },\n    selectChattee(event) {\n      for (let i = 0; i < this.users.length; i++) {\n        if (this.users[i].name == this.chatteeName) {\n          this.chattee = this.users[i];\n        }\n      }\n    },\n    selectChatter(event) {\n      for (let i = 0; i < this.users.length; i++) {\n        if (this.users[i].name == this.chatterName) {\n          this.chatter = this.users[i];\n        }\n      }\n      this.updateChattersChatteesLists();\n    },\n    updateChattersChatteesLists() {\n      this.chattees = [];\n      for (let i = 0; i < this.users.length; i++) {\n        if (this.users[i].name != this.chatterName) {\n          this.chattees.push(this.users[i]);\n        }\n      }\n    },\n    startChat() {\n      this.chatter.status = 'Online';\n      axios({\n        method: 'put',\n        url: this.usersUrl + '/' + this.chatter.id,\n        data: this.questionaire\n      }).then(response => {\n        this.questionaire.id = response.data.id;\n        this.$toast.success('Questionaire was updated successfully', {\n          position: \"bottom\"\n        });\n      }).catch(error => {\n        this.$toast.error('Error while updating the questionaire', {\n          position: \"bottom\"\n        });\n      });\n      this.ready = true;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","chatHead","name","components","mounted","fetchUsers","data","users","chatterName","chatter","chatteeName","chattee","chatters","chattees","ready","usersUrl","messagesUrl","methods","console","log","get","then","response","createChatters","catch","error","i","length","push","selectChattee","event","selectChatter","updateChattersChatteesLists","startChat","status","method","url","id","questionaire","$toast","success","position"],"sourceRoot":"","sources":["/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/components/chattingApp/mainChattingApp.vue"],"sourcesContent":["<template>\n<div class=\"mainContainer\">\n  <div class=\"homeView\" v-if=\"!ready\">\n  <div class=\"labelSelectContainer\">\n      <label class=\"label\" for=\"comboBox\">Who are you?</label>\n  <select  class=\"selectStyle\" id=\"comboBox\" v-model=\"chatterName\"\n           @change=\"selectChatter($event)\">\n  <option disabled value=\"\">Please select who you are</option>\n  <option  v-for=\"user in users\">{{user.name}}</option>\n</select>\n\n    </div>\n\n  <div class=\"labelSelectContainer\">\n      <label class=\"label\" for=\"comboBox1\">Chat with:</label>\n  <select  class=\"selectStyle\" id=\"comboBox1\" v-model=\"chatteeName\"\n  @change=\"selectChattee($event)\">\n  <option disabled value=\"\">Please select who you want to chat with</option>\n  <option  v-for=\"chatteeUser in chattees\">{{chatteeUser.name}}</option>\n</select>\n\n    </div>\n</div>\n\n  <chat-head :chattee=\"chatteeName\" :status=\"chattee.status\" v-if=\"ready\">\n\n  </chat-head>\n</div>\n\n</template>\n\n<script>\nimport axios from \"axios\";\nimport chatHead from \"@/components/chattingApp/chatHead\";\n\nexport default {\nname: \"mainChattingApp\",\ncomponents: {chatHead},\nmounted () {\n  this.fetchUsers();\n\n},\ndata(){\n  return {\n    users: null,\n    chatterName: '',\n    chatter: null,\n    chatteeName: '',\n    chattee: null,\n    chatters: [],\n    chattees: [],\n    ready: false,\n    usersUrl: \"http://localhost:3004/users\",\n    messagesUrl: \"http://localhost:3004/messages\"\n  }\n},\nmethods: {\n  fetchUsers(){\n    console.log(this.users)\n    axios.get(this.usersUrl)\n    .then(response => {\n      this.users = response.data;\n      this.createChatters();\n    })\n    .catch( error => {\n      console.log(error)\n    })\n  },\n  createChatters(){\n    console.log(this.users)\n    this.chatters = [];\n    for (let i=0; i<this.users.length; i++) {\n      this.chatters.push(this.users[i]);\n    }\n  },\n  selectChattee(event){\n    for (let i=0; i<this.users.length; i++) {\n      if (this.users[i].name == this.chatteeName) {\n        this.chattee = this.users[i];\n      }\n    }\n\n  },\n\n  selectChatter(event){\n    for (let i=0; i<this.users.length; i++) {\n      if (this.users[i].name == this.chatterName) {\n        this.chatter = this.users[i];\n      }\n    }\n    this.updateChattersChatteesLists();\n  },\n\n  updateChattersChatteesLists(){\n    this.chattees = [];\n    for (let i=0; i<this.users.length; i++) {\n      if (this.users[i].name != this.chatterName) {\n        this.chattees.push(this.users[i]);\n      }\n\n    }\n  },\n\n  startChat(){\n    this.chatter.status = 'Online'\n    axios({\n        method: 'put',\n        url:this.usersUrl + '/' + this.chatter.id,\n        data: this.questionaire\n      })\n      .then(response => {\n        this.questionaire.id = response.data.id;\n        this.$toast.success('Questionaire was updated successfully',  {\n        position: \"bottom\"})\n      })\n\n      .catch(error => {\n\n        this.$toast.error('Error while updating the questionaire', {\n        position: \"bottom\"});\n      })\n    this.ready=true;\n  }\n}\n}\n</script>\n\n<style scoped>\n\n.mainContainer{\n  display: flex;\n  width: 800px;\n  height: 800px;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  position: absolute;\n  /*background-color: black;*/\n  left: 50%;\n  top: 50%;\n  -webkit-transform: translate(-50%, -50%);\n  transform: translate(-50%, -50%);\n\n}\n.homeView{\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n}\n\n.labelSelectContainer{\n  display: flex;\n  width: 800px;\n  height: fit-content;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n}\n\n.label{\n  font-size: 20px;\n  font-family: Arial;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  margin-left: 5px;\n  margin-right: 5px;\n}\n.selectStyle{\n  width: 350px;\n  height: 30px;\n  border-radius: 10px;\n  margin: 5px;\n  color: black;\n  border-color: green;\n   font-size: 16px;\n  font-family: Arial;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}