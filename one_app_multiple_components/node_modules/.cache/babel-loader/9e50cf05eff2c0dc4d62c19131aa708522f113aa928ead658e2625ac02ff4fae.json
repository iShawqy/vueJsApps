{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createBlock as _createBlock, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-49862d8e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"mainAppContainer\"\n};\nconst _hoisted_2 = {\n  class: \"homeViewContainer\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"homeView\"\n};\nconst _hoisted_4 = {\n  class: \"labelSelectContainer\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"label\",\n  for: \"comboBox\"\n}, \"Who are you?\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  disabled: \"\",\n  value: \"\"\n}, \"Please select who you are\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"labelSelectContainer\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"label\",\n  for: \"comboBox1\"\n}, \"Chat with:\", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  disabled: \"\",\n  value: \"\"\n}, \"Please select who you want to chat with\", -1 /* HOISTED */));\nconst _hoisted_10 = {\n  key: 0,\n  class: \"chatViewContainer\"\n};\nexport function render(_ctx, _cache) {\n  const _component_chat_head = _resolveComponent(\"chat-head\");\n  const _component_chat_area = _resolveComponent(\"chat-area\");\n  const _component_message_input_area = _resolveComponent(\"message-input-area\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [!_ctx.ready ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"select\", {\n    class: \"selectStyle\",\n    id: \"comboBox\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.chatterName = $event),\n    onChange: _cache[1] || (_cache[1] = $event => _ctx.selectChatter($event))\n  }, [_hoisted_6, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.users, user => {\n    return _openBlock(), _createElementBlock(\"option\", null, _toDisplayString(user.name), 1 /* TEXT */);\n  }), 256 /* UNKEYED_FRAGMENT */))], 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelSelect, _ctx.chatterName]])]), _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _withDirectives(_createElementVNode(\"select\", {\n    class: \"selectStyle\",\n    id: \"comboBox1\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.chatteeName = $event),\n    onChange: _cache[3] || (_cache[3] = $event => _ctx.selectChattee($event))\n  }, [_hoisted_9, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.chattees, chatteeUser => {\n    return _openBlock(), _createElementBlock(\"option\", null, _toDisplayString(chatteeUser.name), 1 /* TEXT */);\n  }), 256 /* UNKEYED_FRAGMENT */))], 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelSelect, _ctx.chatteeName]])])])) : _createCommentVNode(\"v-if\", true)]), _ctx.ready ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_ctx.ready ? (_openBlock(), _createBlock(_component_chat_head, {\n    key: 0,\n    chattee: _ctx.chatteeName,\n    status: _ctx.chattee.status\n  }, null, 8 /* PROPS */, [\"chattee\", \"status\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_chat_area, {\n    messages: _ctx.messages,\n    chatterName: _ctx.chatterName,\n    chatteeName: _ctx.chatteeName,\n    ref: \"refChatArea\"\n  }, null, 8 /* PROPS */, [\"messages\", \"chatterName\", \"chatteeName\"]), _createVNode(_component_message_input_area, {\n    chatter: _ctx.chatter\n  }, null, 8 /* PROPS */, [\"chatter\"]), _ctx.ready ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    class: \"BtnStyle btnRed\",\n    onClick: _cache[4] || (_cache[4] = (...args) => _ctx.logOut && _ctx.logOut(...args))\n  }, \" Log-out \")) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;;EACKA,KAAK,EAAC;AAAkB;;EACtBA,KAAK,EAAC;AAAmB;;;EACvBA,KAAK,EAAC;;;EACRA,KAAK,EAAC;AAAsB;gEAC7BC,oBAAwD;EAAjDD,KAAK,EAAC,OAAO;EAACE,GAAG,EAAC;GAAW,cAAY;gEAGpDD,oBAA4D;EAApDE,QAAQ,EAAR,EAAQ;EAACC,KAAK,EAAC;GAAG,2BAAyB;;EAM9CJ,KAAK,EAAC;AAAsB;gEAC7BC,oBAAuD;EAAhDD,KAAK,EAAC,OAAO;EAACE,GAAG,EAAC;GAAY,YAAU;gEAGnDD,oBAA0E;EAAlEE,QAAQ,EAAR,EAAQ;EAACC,KAAK,EAAC;GAAG,yCAAuC;;;EAQ5DJ,KAAK,EAAC;;;;;;uBAzBbK,oBAyCM,OAzCNC,UAyCM,GAxCJL,oBAsBM,OAtBNM,UAsBM,IArByBC,UAAK,kBAAlCH,oBAoBE,OApBFI,UAoBE,GAnBJR,oBAQQ,OARRS,UAQQ,GAPJC,UAAwD,kBAC5DV,oBAIO;IAJED,KAAK,EAAC,aAAa;IAACY,EAAE,EAAC,UAAU;+DAAUJ,gBAAW;IACrDK,QAAM,sCAAEL,kBAAa,CAACM,MAAM;MACtCC,UAA4D,qBAC5DV,oBAAqDW,6BAA7BR,UAAK,EAAbS,IAAI;yBAApBZ,oBAAqD,iCAApBY,IAAI,CAACC,IAAI;6FAHUV,gBAAW,OAQ/DP,oBAQQ,OARRkB,UAQQ,GAPJC,UAAuD,kBAC3DnB,oBAIO;IAJED,KAAK,EAAC,aAAa;IAACY,EAAE,EAAC,WAAW;+DAAUJ,gBAAW;IAC/DK,QAAM,sCAAEL,kBAAa,CAACM,MAAM;MAC7BO,UAA0E,qBAC1EhB,oBAAsEW,6BAAvCR,aAAQ,EAAvBc,WAAW;yBAA3BjB,oBAAsE,iCAA3BiB,WAAW,CAACJ,IAAI;6FAHNV,gBAAW,gDAU3BA,UAAK,kBAA1CH,oBAcM,OAdNkB,WAcM,GAb6Df,UAAK,kBAAtEgB,aACYC;;IADAC,OAAO,EAAElB,gBAAW;IAAGmB,MAAM,EAAEnB,YAAO,CAACmB;uFAEnDC,aAKaC;IALDC,QAAQ,EAAEtB,aAAQ;IAClBuB,WAAW,EAAEvB,gBAAW;IACxBwB,WAAW,EAAExB,gBAAW;IACzByB,GAAG,EAAC;uEAGfL,aAA4DM;IAAvCC,OAAO,EAAE3B;EAAO,sCACCA,UAAK,kBAA3CH,oBAES;;IAFDL,KAAK,EAAC,iBAAiB;IAAeoC,OAAK,yCAAE5B,mCAAM;KAAE,WAE7D","names":["class","_createElementVNode","for","disabled","value","_createElementBlock","_hoisted_1","_hoisted_2","_ctx","_hoisted_3","_hoisted_4","_hoisted_5","id","onChange","$event","_hoisted_6","_Fragment","user","name","_hoisted_7","_hoisted_8","_hoisted_9","chatteeUser","_hoisted_10","_createBlock","_component_chat_head","chattee","status","_createVNode","_component_chat_area","messages","chatterName","chatteeName","ref","_component_message_input_area","chatter","onClick"],"sourceRoot":"","sources":["/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/components/chattingApp/mainChattingApp.vue"],"sourcesContent":["<template>\n<div class=\"mainAppContainer\">\n  <div class=\"homeViewContainer\">\n    <div class=\"homeView\" v-if=\"!ready\">\n  <div class=\"labelSelectContainer\">\n      <label class=\"label\" for=\"comboBox\">Who are you?</label>\n  <select  class=\"selectStyle\" id=\"comboBox\" v-model=\"chatterName\"\n           @change=\"selectChatter($event)\">\n  <option disabled value=\"\">Please select who you are</option>\n  <option  v-for=\"user in users\">{{user.name}}</option>\n</select>\n\n    </div>\n\n  <div class=\"labelSelectContainer\">\n      <label class=\"label\" for=\"comboBox1\">Chat with:</label>\n  <select  class=\"selectStyle\" id=\"comboBox1\" v-model=\"chatteeName\"\n  @change=\"selectChattee($event)\">\n  <option disabled value=\"\">Please select who you want to chat with</option>\n  <option  v-for=\"chatteeUser in chattees\">{{chatteeUser.name}}</option>\n</select>\n\n    </div>\n</div>\n  </div>\n\n  <div class=\"chatViewContainer\" v-if=\"ready\">\n    <chat-head :chattee=\"chatteeName\" :status=\"chattee.status\" v-if=\"ready\">\n    </chat-head>\n    <chat-area :messages=\"messages\"\n               :chatterName=\"chatterName\"\n               :chatteeName=\"chatteeName\"\n               ref=\"refChatArea\"\n\n    ></chat-area>\n    <message-input-area :chatter=\"chatter\"></message-input-area>\n    <button class=\"BtnStyle btnRed\" v-if=\"ready\" @click=\"logOut\">\n      Log-out\n    </button>\n\n  </div>\n\n</div>\n\n</template>\n\n<script>\nimport axios from \"axios\";\nimport chatHead from \"@/components/chattingApp/chatHead\";\nimport chatArea from \"@/components/chattingApp/chatArea\";\nimport messageInputArea from \"@/components/chattingApp/messageInputArea\";\n\nexport default {\nname: \"mainChattingApp\",\ncomponents: {chatHead, chatArea, messageInputArea},\nmounted () {\n  this.fetchUsers();\n  this.fetchMessages()\n  setInterval(this.fetchLatestMessages, 100);\n\n\n},\ndata(){\n  return {\n    users: [],\n    chatterName: '',\n    chatter: {},\n    chatteeName: '',\n    chattee: {},\n    chatters: [],\n    chattees: [],\n    ready: false,\n    usersUrl: \"http://localhost:3004/users\",\n    messagesUrl: \"http://localhost:3004/messages\",\n    messages: [],\n    lastMessageId: 0,\n    newMessages: false;\n  }\n},\nmethods: {\n  fetchUsers(){\n    axios.get(this.usersUrl)\n    .then(response => {\n      this.users = response.data;\n      this.createChatters();\n    })\n    .catch( error => {\n      console.log(error)\n    })\n  },\n  fetchMessages(){\n    axios.get(this.messagesUrl)\n    .then(response => {\n      this.messages = response.data;\n      this.createChatters();\n\n    })\n    .catch( error => {\n      console.log(error)\n    })\n  },\n  fetchLatestMessages(){\n    axios.get(this.messagesUrl)\n    .then(response => {\n      this.messages = response.data;\n      for (let i=0; i<this.messages.length; i++) {\n        if (this.messages[i].id > this.lastMessageId) {\n          this.newMessages = true;\n          this.lastMessageId = this.messages[i].id\n        }\n      }\n\n      if (this.newMessages){\n         this.$refs.refChatArea.scrollToLastMessage();\n         this.newMessages = false;\n      }\n\n\n\n\n    })\n    .catch( error => {\n      console.log(error)\n    })\n  },\n  createChatters(){\n    console.log(this.users)\n    this.chatters = [];\n    for (let i=0; i<this.users.length; i++) {\n      this.chatters.push(this.users[i]);\n    }\n  },\n  selectChattee(event){\n    for (let i=0; i<this.users.length; i++) {\n      if (this.users[i].name == this.chatteeName) {\n        this.chattee = this.users[i];\n      }\n    }\n\n    this.startChat();\n\n  },\n  selectChatter(event){\n    for (let i=0; i<this.users.length; i++) {\n      if (this.users[i].name == this.chatterName) {\n        this.chatter = this.users[i];\n      }\n    }\n    this.updateChattersChatteesLists();\n  },\n  updateChattersChatteesLists(){\n    this.chattees = [];\n    for (let i=0; i<this.users.length; i++) {\n      if (this.users[i].name != this.chatterName) {\n        this.chattees.push(this.users[i]);\n      }\n\n    }\n  },\n  startChat(){\n    this.chatter.status = 'Online'\n    axios({\n        method: 'put',\n        url:this.usersUrl + '/' + this.chatter.id,\n        data: this.chatter\n      })\n      .then(response => {\n\n        this.$toast.success('You are online',  {\n        position: \"bottom\"})\n      })\n\n      .catch(error => {\n\n        this.$toast.error('Error while logging you in', {\n        position: \"bottom\"});\n      })\n    this.ready=true;\n  },\n  logOut(){\n    this.chatter.status = 'Offline'\n    axios({\n        method: 'put',\n        url:this.usersUrl + '/' + this.chatter.id,\n        data: this.chatter\n      })\n      .then(response => {\n\n        this.$toast.success('You are Offline',  {\n        position: \"bottom\"})\n      })\n      .catch(error => {\n\n        this.$toast.error('Error while logging you in', {\n        position: \"bottom\"});\n      })\n    this.reset();\n  },\n  reset(){\n    this.users = [];\n    this.chatterName = '';\n    this.chatter = {};\n    this.chatteeName = '';\n    this.chattee = {};\n    this.chatters = [];\n    this.chattees = [];\n    this.ready =  false;\n    this.fetchUsers();\n    this.fetchMessages();\n    this.createChatters();\n  },\n}\n}\n</script>\n\n<style scoped>\n\n\n.mainAppContainer{\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-color: #ffffff;\n}\n.homeViewContainer{\n  display: flex;\n  width: fit-content;\n  height: fit-content;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  /*background-color: black;*/\n  left: 50%;\n  top: 50%;\n  -webkit-transform: translate(-50%, -50%);\n  transform: translate(-50%, -50%);\n\n}\n\n.chatViewContainer{\n  display: flex;\n  width: 600px;\n  height: 600px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  background-color: #83b8f8;\n  left: 50%;\n  top: 50%;\n  -webkit-transform: translate(-50%, -50%);\n  transform: translate(-50%, -50%);\n  border-radius: 10px;\n}\n\n\n\n.homeView{\n  display: flex;\n  width: fit-content;\n  height: fit-content;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: #83b8f8;\n  border-radius: 10px;\n\n}\n\n.labelSelectContainer{\n  display: flex;\n  width: 800px;\n  height: fit-content;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n}\n\n.label{\n  font-size: 20px;\n  font-family: Arial;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  margin-left: 5px;\n  margin-right: 5px;\n}\n.selectStyle{\n  width: 350px;\n  height: 30px;\n  border-radius: 10px;\n  margin: 5px;\n  color: black;\n  border-color: green;\n   font-size: 16px;\n  font-family: Arial;\n}\n\n.BtnStyle{\n  height: 30px;\n  width: fit-content;\n  border-radius: 10px;\n  font-size: 20px;\n  font-family: Arial;\n  border: none;\n  text-align: center;\n  text-decoration: none;\n  opacity: 0.6;\n  transition: 0.3s;\n  margin: 5px;\n  color: white;\n}\n.BtnStyle:hover{\n  opacity: 1;\n\n}\n.btnRed{\n  background-color: #ff0000;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}