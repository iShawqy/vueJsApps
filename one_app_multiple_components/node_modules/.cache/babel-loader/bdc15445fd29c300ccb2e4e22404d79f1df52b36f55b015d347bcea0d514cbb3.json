{"ast":null,"code":"export default {\n  name: \"circleElement\",\n  props: {\n    id: {\n      type: Number,\n      default: 0\n    },\n    mousePosX: {\n      type: Number,\n      default: 0\n    },\n    mousePosY: {\n      type: Number,\n      default: 0\n    },\n    width: {\n      type: String,\n      default: '100px'\n    },\n    height: {\n      type: String,\n      default: '100px'\n    },\n    backgroundColor: {\n      type: String,\n      default: 'green'\n    },\n    selected: {\n      type: Boolean,\n      default: false\n    },\n    moving: {\n      type: Boolean,\n      default: false\n    },\n    resizing: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      movingIntervalId: null,\n      resizingIntervalId: null,\n      elementPosX: 200,\n      elementPosY: 200,\n      offsetX: 0,\n      offsetY: 0,\n      startPosX: 0,\n      startPosY: 0,\n      originalWidth: 0,\n      baseStyle: {\n        position: 'absolute',\n        top: '0px',\n        left: '0px',\n        backgroundColor: this.backgroundColor,\n        width: this.width,\n        height: this.width,\n        fontSize: '30px',\n        fontFamily: 'Arial',\n        border: 'none',\n        borderRadius: '100%',\n        // padding: '20px',\n        textAlign: 'center',\n        textDecoration: 'none',\n        display: 'inline-flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n\n        // margin: '4px 2px',\n        // borderRadius: '100%',\n      },\n\n      selectedStyle: {\n        border: 'none'\n      }\n    };\n  },\n  mounted() {\n    this.setElementPos();\n  },\n  methods: {\n    setElementPos() {\n      this.baseStyle.left = this.elementPosX.toString() + 'px';\n      this.baseStyle.top = this.elementPosY.toString() + 'px';\n    },\n    executeMouseDown(event) {\n      if (event.button == 0 && !this.multipleSelected) {\n        this.startDragging();\n      }\n    },\n    executeMouseUp(event) {\n      if (event.button == 0) {\n        this.stopDragging();\n      }\n    },\n    startMoving() {\n      this.offsetY = this.mousePosY - this.elementPosY;\n      this.offsetX = this.mousePosX - this.elementPosX;\n      this.movingIntervalId = setInterval(() => {\n        this.move();\n      }, 25);\n    },\n    stopMoving() {\n      clearInterval(this.movingIntervalId);\n    },\n    move() {\n      if (this.moving) {\n        this.elementPosX = this.mousePosX - this.offsetX;\n        this.elementPosY = this.mousePosY - this.offsetY;\n        this.baseStyle.top = this.elementPosY.toString() + 'px';\n        this.baseStyle.left = this.elementPosX.toString() + 'px';\n      }\n    },\n    editElementProps() {\n      this.selectElement(false);\n      if (this.adjustable) {\n        this.editingFlag = true;\n        this.originalWidth = this.baseStyle.width;\n        // this.baseStyle.width = '50px';\n        this.baseStyle.border = '5px dashed black';\n        this.startPosX = this.mousePosX;\n        this.startPosY = this.mousePosY;\n        this.editingIntervalId = setInterval(() => {\n          this.resize();\n        }, 25);\n      }\n    },\n    setElementProps(event) {\n      if (event.key == \"Enter\") {\n        this.baseStyle.border = 'none';\n        this.editingFlag = false;\n        clearInterval(this.editingIntervalId);\n      } else if (event.key == \"Escape\") {\n        if (this.dragging) {\n          this.stopDragging();\n        } else if (this.editingFlag) {\n          this.baseStyle.border = 'none';\n          clearInterval(this.editingIntervalId);\n          this.baseStyle.width = this.originalWidth;\n          this.baseStyle.height = this.originalWidth;\n          this.editingFlag = false;\n        }\n      }\n      this.selectElement(true);\n    },\n    resize(flag) {\n      this.selectElement(false);\n      if (flag) {\n        this.baseStyle.border = '5px dashed black';\n      } else {\n        this.baseStyle.border = 'none';\n      }\n\n      // if (this.editingFlag){\n      //   var width = parseInt(this.baseStyle.width.split(\"px\")[0]) +(this.mousePosX - this.startPosX);\n      //   // var height = parseInt(this.baseStyle.width.split(\"px\")[0])+ (this.mousePosX - this.startPosX);\n      //   if (width <0) {\n      //     width *= -1;\n      //   }\n      //     // var biggerDimension = 0;\n      //     // if (width >= height){\n      //     //   biggerDimension = width;\n      //     // } else {\n      //     //   biggerDimension = height;\n      //     // }\n      //\n      //     if (width < 5){\n      //       width = 5;\n      //     }\n      //     this.baseStyle.width = width.toString() + 'px';\n      //     this.baseStyle.height = width.toString() + 'px';\n      //     this.startPosX = this.mousePosX;\n      //\n      // }\n    },\n\n    selectElement(select) {\n      if (select) {\n        this.selectedStyle['border'] = '5px solid black';\n      } else {\n        this.selectedStyle = {};\n      }\n    },\n    handleKeyPress(event) {\n      if (event.key == \"Escape\") {}\n    }\n  },\n  watch: {\n    selected(newValue) {\n      this.selectElement(newValue);\n    },\n    resizing(newValue) {\n      this.resize(newValue);\n    },\n    moving(newValue) {\n      if (newValue) {\n        this.startMoving();\n      } else {\n        this.stopMoving();\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["name","props","id","type","Number","default","mousePosX","mousePosY","width","String","height","backgroundColor","selected","Boolean","moving","resizing","data","movingIntervalId","resizingIntervalId","elementPosX","elementPosY","offsetX","offsetY","startPosX","startPosY","originalWidth","baseStyle","position","top","left","fontSize","fontFamily","border","borderRadius","textAlign","textDecoration","display","flexDirection","justifyContent","alignItems","selectedStyle","mounted","setElementPos","methods","toString","executeMouseDown","event","button","multipleSelected","startDragging","executeMouseUp","stopDragging","startMoving","setInterval","move","stopMoving","clearInterval","editElementProps","selectElement","adjustable","editingFlag","editingIntervalId","resize","setElementProps","key","dragging","flag","select","handleKeyPress","watch","newValue"],"sourceRoot":"","sources":["/Users/ihm/myDrive/private/learning_vue/one_app_multiple_components/src/components/movableElements/circleElement.vue"],"sourcesContent":["<template>\n<div :style=\"[baseStyle, selectedStyle]\"\n>\n\n  </div>\n</template>\n\n<script>\nexport default {\nname: \"circleElement\",\n  props: {\n    id: {\n      type: Number,\n      default:0\n    },\n    mousePosX: {\n      type: Number,\n      default: 0\n    },\n    mousePosY: {\n      type: Number,\n      default: 0\n    },\n    width: {\n            type: String,\n            default: '100px'\n          },\n    height: {\n            type: String,\n            default: '100px'\n          },\n    backgroundColor: {\n             type: String,\n             default: 'green'\n            },\n    selected: {\n      type: Boolean,\n      default: false,\n    },\n    moving: {\n      type: Boolean,\n      default: false,\n    },\n    resizing: {\n      type: Boolean,\n      default: false,\n    }\n\n  },\n  data(){\n  return {\n    movingIntervalId: null,\n    resizingIntervalId: null,\n    elementPosX: 200,\n    elementPosY:200,\n    offsetX:0,\n    offsetY:0,\n    startPosX: 0,\n    startPosY: 0,\n    originalWidth:0,\n    baseStyle: {\n      position: 'absolute',\n      top: '0px',\n      left: '0px',\n      backgroundColor: this.backgroundColor,\n      width: this.width,\n      height: this.width,\n      fontSize: '30px',\n      fontFamily: 'Arial',\n      border: 'none',\n      borderRadius: '100%',\n      // padding: '20px',\n      textAlign: 'center',\n      textDecoration: 'none',\n      display: 'inline-flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n\n      // margin: '4px 2px',\n      // borderRadius: '100%',\n\n    },\n    selectedStyle: {\n      border: 'none'\n    },\n\n  }\n  },\n  mounted () {\n  this.setElementPos()\n  },\n  methods: {\n            setElementPos(){\n            this.baseStyle.left = this.elementPosX.toString() + 'px';\n            this.baseStyle.top = this.elementPosY.toString() + 'px';\n            },\n            executeMouseDown(event){\n              if (event.button == 0 && !this.multipleSelected) {\n                this.startDragging()\n              }\n            },\n            executeMouseUp(event){\n              if (event.button == 0) {\n                this.stopDragging()\n              }\n            },\n            startMoving(){\n                this.offsetY = this.mousePosY - this.elementPosY;\n                this.offsetX = this.mousePosX - this.elementPosX;\n                this.movingIntervalId = setInterval(() => {\n                  this.move();\n                }, 25);\n            },\n            stopMoving(){\n                clearInterval(this.movingIntervalId)\n              },\n            move(){\n              if (this.moving){\n                this.elementPosX = this.mousePosX - this.offsetX;\n                this.elementPosY = this.mousePosY - this.offsetY;\n                this.baseStyle.top = this.elementPosY.toString() +'px';\n                this.baseStyle.left = this.elementPosX.toString() +'px';\n              }\n              },\n            editElementProps(){\n              this.selectElement(false)\n              if (this.adjustable) {\n                this.editingFlag = true;\n                this.originalWidth = this.baseStyle.width;\n                // this.baseStyle.width = '50px';\n                this.baseStyle.border = '5px dashed black'\n                this.startPosX = this.mousePosX;\n                this.startPosY = this.mousePosY;\n                this.editingIntervalId = setInterval(() => {\n                        this.resize();\n                      }, 25);\n              }\n            },\n            setElementProps(event){\n              if (event.key == \"Enter\"){\n                this.baseStyle.border = 'none';\n                this.editingFlag = false;\n              clearInterval(this.editingIntervalId)\n              }\n              else if (event.key== \"Escape\") {\n                if (this.dragging) {\n                  this.stopDragging()\n                }\n                else if (this.editingFlag) {\n                  this.baseStyle.border = 'none';\n                  clearInterval(this.editingIntervalId)\n                this.baseStyle.width = this.originalWidth;\n                this.baseStyle.height = this.originalWidth;\n                this.editingFlag = false;\n                }\n              }\n              this.selectElement(true);\n\n            },\n            resize(flag){\n              this.selectElement(false)\n              if (flag) {\n                this.baseStyle.border = '5px dashed black'\n              } else {\n                this.baseStyle.border = 'none'\n              }\n\n              // if (this.editingFlag){\n              //   var width = parseInt(this.baseStyle.width.split(\"px\")[0]) +(this.mousePosX - this.startPosX);\n              //   // var height = parseInt(this.baseStyle.width.split(\"px\")[0])+ (this.mousePosX - this.startPosX);\n              //   if (width <0) {\n              //     width *= -1;\n              //   }\n              //     // var biggerDimension = 0;\n              //     // if (width >= height){\n              //     //   biggerDimension = width;\n              //     // } else {\n              //     //   biggerDimension = height;\n              //     // }\n              //\n              //     if (width < 5){\n              //       width = 5;\n              //     }\n              //     this.baseStyle.width = width.toString() + 'px';\n              //     this.baseStyle.height = width.toString() + 'px';\n              //     this.startPosX = this.mousePosX;\n              //\n              // }\n\n            },\n            selectElement(select){\n              if (select){\n                this.selectedStyle['border'] =  '5px solid black';\n              } else {\n                this.selectedStyle = {};\n              }\n            },\n            handleKeyPress(event) {\n            if (event.key == \"Escape\") {\n\n            }\n            }\n\n  },\n  watch:{\n    selected(newValue){\n    this.selectElement(newValue)\n  },\n    resizing(newValue){\n      this.resize(newValue)\n    },\n\n    moving(newValue){\n      if (newValue){\n        this.startMoving()\n      } else {\n        this.stopMoving()\n      }\n    },\n\n\n  }\n\n\n\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}