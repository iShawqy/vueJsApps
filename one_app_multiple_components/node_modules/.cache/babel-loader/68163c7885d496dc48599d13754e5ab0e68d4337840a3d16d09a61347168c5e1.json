{"ast":null,"code":"import questionaireHead from \"@/components/editableQuestionaire/questionaireHead\";\nimport addQuestionForm from \"@/components/editableQuestionaire/addQuestionForm\";\nexport default {\n  name: \"createQuestionaire\",\n  components: {\n    questionaireHead,\n    addQuestionForm\n  },\n  data() {\n    return {\n      headFilled: false,\n      questionFormFilled: false,\n      currentQuestionIndex: 0,\n      questionaire: {\n        \"title\": \"\",\n        \"length\": 0,\n        \"creator\": \"\",\n        \"createdOn\": \"\",\n        \"creatorMessage\": \"\",\n        \"questions\": [{\n          \"id\": 1,\n          \"question\": \"\",\n          \"choices\": [],\n          \"correctAnswer\": \"\"\n        }]\n      },\n      questionaireHeadDefault: {\n        creator: '',\n        title: '',\n        description: ''\n      },\n      questionDefault: {\n        inputValue: '',\n        label: 'Question',\n        defaultValueToShow: 'ask a question',\n        width: '400px'\n      },\n      choicesDefault: [{\n        type: 'choice',\n        inputValue: '',\n        label: 'Choice 1',\n        defaultValueToShow: 'Write choice 1',\n        width: '400px',\n        correctAnswer: false\n      }, {\n        type: 'choice',\n        inputValue: '',\n        label: 'Choice 2',\n        defaultValueToShow: 'Write choice 2',\n        width: '400px',\n        correctAnswer: false\n      }, {\n        type: 'choice',\n        inputValue: '',\n        label: 'Choice 3',\n        defaultValueToShow: 'Write choice 3',\n        width: '400px',\n        correctAnswer: false\n      }, {\n        type: 'choice',\n        inputValue: '',\n        label: 'Choice 4',\n        defaultValueToShow: 'Write choice 4',\n        width: '400px',\n        correctAnswer: false\n      }]\n    };\n  },\n  methods: {\n    executeHeadFilled(headData) {\n      this.headFilled = headData[0];\n    },\n    executeQuestionFormFilled(formData) {\n      this.questionFormFilled = formData[0];\n    },\n    reset() {\n      this.$refs.refQestionaireHead.reset(this.questionaireHeadDefault);\n      this.$refs.refAddQuestionForm.reset([this.questionDefault, this.choicesDefault]);\n    }\n  }\n};","map":{"version":3,"mappings":"AAuBA,OAAOA,gBAAe,MAAO,oDAAoD;AACjF,OAAOC,eAAc,MAAO,mDAAmD;AAE/E,eAAe;EACfC,IAAI,EAAE,oBAAoB;EAC1BC,UAAU,EAAC;IAACH,gBAAgB;IAAEC;EAAe,CAAC;EAC9CG,IAAI,GAAE;IACJ,OAAO;MACLC,UAAU,EAAE,KAAK;MACjBC,kBAAkB,EAAE,KAAK;MACzBC,oBAAoB,EAAE,CAAC;MACvBC,YAAY,EAAE;QACZ,OAAO,EAAE,EAAE;QACX,QAAQ,EAAE,CAAC;QACX,SAAS,EAAE,EAAE;QACb,WAAW,EAAE,EAAE;QACf,gBAAgB,EAAE,EAAE;QACpB,WAAU,EAAI,CACZ;UACE,IAAI,EAAE,CAAC;UACP,UAAU,EAAE,EAAE;UACd,SAAQ,EAAI,EAAE;UACd,eAAe,EAAE;QACnB;MAEJ,CAAC;MACDC,uBAAuB,EAAE;QACvBC,OAAO,EAAE,EAAE;QACXC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE;MACf,CAAC;MACDC,eAAe,EAAE;QACfC,UAAU,EAAE,EAAE;QACZC,KAAK,EAAE,UAAU;QACjBC,kBAAkB,EAAE,gBAAgB;QACpCC,KAAK,EAAE;MACX,CAAC;MACDC,cAAc,EAAE,CACZ;QACEC,IAAI,EAAE,QAAQ;QAChBL,UAAU,EAAE,EAAE;QACdC,KAAK,EAAE,UAAU;QACjBC,kBAAkB,EAAE,gBAAgB;QACpCC,KAAK,EAAE,OAAO;QACZG,aAAa,EAAE;MACnB,CAAC,EACC;QACED,IAAI,EAAE,QAAQ;QAChBL,UAAU,EAAE,EAAE;QACdC,KAAK,EAAE,UAAU;QACjBC,kBAAkB,EAAE,gBAAgB;QACpCC,KAAK,EAAE,OAAO;QACZG,aAAa,EAAE;MACnB,CAAC,EACC;QACED,IAAI,EAAE,QAAQ;QAChBL,UAAU,EAAE,EAAE;QACdC,KAAK,EAAE,UAAU;QACjBC,kBAAkB,EAAE,gBAAgB;QACpCC,KAAK,EAAE,OAAO;QACZG,aAAa,EAAE;MACnB,CAAC,EACC;QACED,IAAI,EAAE,QAAQ;QAChBL,UAAU,EAAE,EAAE;QACdC,KAAK,EAAE,UAAU;QACjBC,kBAAkB,EAAE,gBAAgB;QACpCC,KAAK,EAAE,OAAO;QACZG,aAAa,EAAE;MACnB;IAEJ;EACF,CAAC;EACDC,OAAO,EAAC;IACNC,iBAAiB,CAACC,QAAQ,EAAC;MACzB,IAAI,CAAClB,UAAS,GAAIkB,QAAQ,CAAC,CAAC,CAAC;IAC/B,CAAC;IACDC,yBAAyB,CAACC,QAAQ,EAAC;MACjC,IAAI,CAACnB,kBAAiB,GAAImB,QAAQ,CAAC,CAAC,CAAC;IACvC,CAAC;IACDC,KAAK,GAAG;MACN,IAAI,CAACC,KAAK,CAACC,kBAAkB,CAACF,KAAK,CAAC,IAAI,CAACjB,uBAAuB,CAAC;MACjE,IAAI,CAACkB,KAAK,CAACE,kBAAkB,CAACH,KAAK,CAAC,CAAC,IAAI,CAACb,eAAe,EAAE,IAAI,CAACK,cAAc,CAAC,CAAC;IAChF;EAIJ;AACA","names":["questionaireHead","addQuestionForm","name","components","data","headFilled","questionFormFilled","currentQuestionIndex","questionaire","questionaireHeadDefault","creator","title","description","questionDefault","inputValue","label","defaultValueToShow","width","choicesDefault","type","correctAnswer","methods","executeHeadFilled","headData","executeQuestionFormFilled","formData","reset","$refs","refQestionaireHead","refAddQuestionForm"],"sourceRoot":"","sources":["/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/components/editableQuestionaire/createQuestionaire.vue"],"sourcesContent":["<template>\n<div class=\"mainContainer\">\n  <questionaire-head @filled=\"executeHeadFilled\"\n                     ref=\"refQestionaireHead\"\n  >\n  </questionaire-head>\n  <add-question-form @filled=\"executeQuestionFormFilled\"\n                     ref=\"refAddQuestionForm\"\n  ></add-question-form>\n\n  <button v-if=\"headFilled && questionFormFilled\" @click=\"reset\">\n    next question\n  </button>\n\n  <button v-if=\"headFilled && questionFormFilled\">\n    save questionaire\n  </button>\n\n\n</div>\n</template>\n\n<script>\nimport questionaireHead from \"@/components/editableQuestionaire/questionaireHead\";\nimport addQuestionForm from \"@/components/editableQuestionaire/addQuestionForm\";\n\nexport default {\nname: \"createQuestionaire\",\ncomponents:{questionaireHead, addQuestionForm},\ndata(){\n  return {\n    headFilled: false,\n    questionFormFilled: false,\n    currentQuestionIndex: 0,\n    questionaire: {\n      \"title\": \"\",\n      \"length\": 0,\n      \"creator\": \"\",\n      \"createdOn\": \"\",\n      \"creatorMessage\": \"\",\n      \"questions\" : [\n        {\n          \"id\": 1,\n          \"question\": \"\",\n          \"choices\" : [],\n          \"correctAnswer\": \"\"\n        }\n      ]\n    },\n    questionaireHeadDefault: {\n      creator: '',\n      title: '',\n      description: '',\n    },\n    questionDefault: {\n      inputValue: '',\n        label: 'Question',\n        defaultValueToShow: 'ask a question',\n        width: '400px',\n    },\n    choicesDefault: [\n        {\n          type: 'choice',\n        inputValue: '',\n        label: 'Choice 1',\n        defaultValueToShow: 'Write choice 1',\n        width: '400px',\n          correctAnswer: false,\n      },\n        {\n          type: 'choice',\n        inputValue: '',\n        label: 'Choice 2',\n        defaultValueToShow: 'Write choice 2',\n        width: '400px',\n          correctAnswer: false,\n      },\n        {\n          type: 'choice',\n        inputValue: '',\n        label: 'Choice 3',\n        defaultValueToShow: 'Write choice 3',\n        width: '400px',\n          correctAnswer: false,\n      },\n        {\n          type: 'choice',\n        inputValue: '',\n        label: 'Choice 4',\n        defaultValueToShow: 'Write choice 4',\n        width: '400px',\n          correctAnswer: false,\n      }\n    ],\n  }\n},\nmethods:{\n  executeHeadFilled(headData){\n    this.headFilled = headData[0];\n  },\n  executeQuestionFormFilled(formData){\n    this.questionFormFilled = formData[0];\n  },\n  reset() {\n    this.$refs.refQestionaireHead.reset(this.questionaireHeadDefault);\n    this.$refs.refAddQuestionForm.reset([this.questionDefault, this.choicesDefault]);\n    },\n\n\n\n}\n}\n</script>\n\n<style scoped>\n.mainContainer{\n  display: flex;\n  width: fit-content;\n  height: fit-content;\n  /*flex-direction: column;*/\n  /*justify-content: center;*/\n  /*align-items: center;*/\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}