{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [$data.questionaires.length == 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \" There is no available questionairs to edit. Refresh this page to create a questionaire. \")) : _createCommentVNode(\"v-if\", true), $data.questionaires.length > 0 ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 1\n  }, _renderList($data.questionaires, questionaire => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: questionaire.id\n    }, _toDisplayString(questionaire.title), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;;;;uBACAA,oBASM,cAROC,mBAAa,CAACC,MAAM,uBAA/BF,oBAEM,mBAF8B,2FAEpC,wCACWC,mBAAa,CAACC,MAAM,0BAA/BF,oBAIMG;IAAAC;EAAA,eAJoDH,mBAAa,EAA7BI,YAAY;yBAAtDL,oBAIM;MAHLI,GAAG,EAAEC,YAAY,CAACC;wBAEfD,YAAY,CAACE,KAAK","names":["_createElementBlock","$data","length","_Fragment","key","questionaire","id","title"],"sourceRoot":"","sources":["/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/components/editableQuestionaire/editRemoveQuestionaire.vue"],"sourcesContent":["<template>\n<div>\n  <div v-if=\"questionaires.length==0\">\n    There is no available questionairs to edit. Refresh this page to create a questionaire.\n  </div>\n  <div v-if=\"questionaires.length>0\" v-for=\"questionaire in questionaires\"\n  :key=\"questionaire.id\"\n  >\n    {{questionaire.title}}\n  </div>\n</div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\nname: \"editRemoveQuestionaire\",\n  data(){\n  return {\n    questionaires: []\n  }\n  },\n  methods:{\n  getAvailableQuestionaires(){\n    axios.get(\"http://localhost:3004/questionairs\")\n    .then(response => {\n      this.questionaires = response.data;\n    })\n    .catch( error => {\n      console.log(error)\n    })\n  }\n  },\n  mounted() {\n  this.getAvailableQuestionaires()\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}