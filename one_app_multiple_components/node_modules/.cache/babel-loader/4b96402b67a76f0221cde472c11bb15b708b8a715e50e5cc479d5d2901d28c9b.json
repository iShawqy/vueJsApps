{"ast":null,"code":"export default {\n  name: \"squareElement\",\n  props: {\n    mousePosX: {\n      type: Number,\n      default: 0\n    },\n    mousePosY: {\n      type: Number,\n      default: 0\n    },\n    width: {\n      type: String,\n      default: '100px'\n    },\n    height: {\n      type: String,\n      default: '100px'\n    },\n    backgroundColor: {\n      type: String,\n      default: 'green'\n    },\n    canMove: {\n      type: Boolean,\n      default: true\n    },\n    adjustable: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      dragging: false,\n      draggingIntervalId: null,\n      editingIntervalId: null,\n      elementPosX: 0,\n      elementPosY: 0,\n      offsetX: 0,\n      offsetY: 0,\n      editingFlag: false,\n      startPosX: 0,\n      startPosY: 0,\n      originalWidth: 0,\n      baseStyle: {\n        position: 'absolute',\n        top: '0px',\n        left: '0px',\n        backgroundColor: this.backgroundColor,\n        width: this.width,\n        height: this.height,\n        fontSize: '30px',\n        fontFamily: 'Arial',\n        border: 'none',\n        // padding: '20px',\n        textAlign: 'center',\n        textDecoration: 'none',\n        display: 'inline-flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n\n        // margin: '4px 2px',\n        // borderRadius: '100%',\n      }\n    };\n  },\n\n  methods: {\n    startDragging(event) {\n      if (event.button == 0) {\n        if (this.canMove && !this.editingFlag) {\n          this.dragging = true;\n          this.offsetY = this.mousePosY - this.elementPosY;\n          this.offsetX = this.mousePosX - this.elementPosX;\n          this.draggingIntervalId = setInterval(() => {\n            this.drag();\n          }, 25);\n        }\n      }\n    },\n    stopDragging(event) {\n      if (event.button == 0) {\n        this.dragging = false;\n        clearInterval(this.draggingIntervalId);\n      }\n    },\n    drag() {\n      if (this.dragging) {\n        this.elementPosX = this.mousePosX - this.offsetX;\n        this.elementPosY = this.mousePosY - this.offsetY;\n        this.baseStyle.top = this.elementPosY.toString() + 'px';\n        this.baseStyle.left = this.elementPosX.toString() + 'px';\n      }\n    },\n    editElementProps() {\n      if (this.adjustable) {\n        this.editingFlag = true;\n        this.originalWidth = this.baseStyle.width;\n        // this.baseStyle.width = '50px';\n        this.baseStyle.border = '3px dashed white ';\n        this.startPosX = this.mousePosX;\n        this.startPosY = this.mousePosY;\n        this.editingIntervalId = setInterval(() => {\n          this.resize();\n        }, 25);\n      }\n    },\n    setElementProps(event) {\n      if (event.key == \"Enter\") {\n        this.baseStyle.border = '0px';\n        this.editingFlag = false;\n        clearInterval(this.editingIntervalId);\n      } else if (event.key == \"Escape\") {\n        this.baseStyle.border = '0px';\n        this.editingFlag = false;\n        clearInterval(this.editingIntervalId);\n        this.baseStyle.width = this.originalWidth;\n        this.baseStyle.height = this.originalWidth;\n      }\n    },\n    resize() {\n      if (this.editingFlag) {\n        var width = parseInt(this.baseStyle.width.split(\"px\")[0]) + (this.mousePosX - this.startPosX);\n        // var height = parseInt(this.baseStyle.width.split(\"px\")[0])+ (this.mousePosX - this.startPosX);\n        if (width < 0) {\n          width *= -1;\n        }\n        // var biggerDimension = 0;\n        // if (width >= height){\n        //   biggerDimension = width;\n        // } else {\n        //   biggerDimension = height;\n        // }\n\n        if (width < 5) {\n          width = 5;\n        }\n        this.baseStyle.width = width.toString() + 'px';\n        this.baseStyle.height = width.toString() + 'px';\n        this.startPosX = this.mousePosX;\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["name","props","mousePosX","type","Number","default","mousePosY","width","String","height","backgroundColor","canMove","Boolean","adjustable","data","dragging","draggingIntervalId","editingIntervalId","elementPosX","elementPosY","offsetX","offsetY","editingFlag","startPosX","startPosY","originalWidth","baseStyle","position","top","left","fontSize","fontFamily","border","textAlign","textDecoration","display","flexDirection","justifyContent","alignItems","methods","startDragging","event","button","setInterval","drag","stopDragging","clearInterval","toString","editElementProps","resize","setElementProps","key","parseInt","split"],"sourceRoot":"","sources":["/Users/ihm/myDrive/private/learning_vue/one_app_multiple_components/src/components/movableElements/squareElement.vue"],"sourcesContent":["<template>\n<div :style=\"[baseStyle]\" @mousedown=\"startDragging($event)\"\n     @mouseup=\"stopDragging($event)\" @dblclick=\"editElementProps\"\n     v-on:keyup=\"setElementProps($event)\" tabindex=\"0\"\n>\n\n  </div>\n</template>\n\n<script>\nexport default {\nname: \"squareElement\",\n  props: {\n          mousePosX: {\n            type: Number,\n            default: 0\n          },\n          mousePosY: {\n            type: Number,\n            default: 0\n          },\n          width: {\n                  type: String,\n                  default: '100px'\n                },\n         height: {\n                  type: String,\n                  default: '100px'\n                },\n         backgroundColor: {\n                   type: String,\n                   default: 'green'\n                  },\n         canMove: {\n           type: Boolean,\n           default: true,\n         },\n         adjustable: {\n                    type: Boolean,\n                    default: true,\n         },\n\n         },\n  data(){\n  return {\n    dragging: false,\n    draggingIntervalId: null,\n    editingIntervalId: null,\n    elementPosX: 0,\n    elementPosY:0,\n    offsetX:0,\n    offsetY:0,\n    editingFlag: false,\n    startPosX: 0,\n    startPosY: 0,\n    originalWidth: 0,\n\n\n\n    baseStyle: {\n      position: 'absolute',\n      top: '0px',\n      left: '0px',\n      backgroundColor: this.backgroundColor,\n      width: this.width,\n      height: this.height,\n      fontSize: '30px',\n      fontFamily: 'Arial',\n      border: 'none',\n\n      // padding: '20px',\n      textAlign: 'center',\n      textDecoration: 'none',\n      display: 'inline-flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n\n      // margin: '4px 2px',\n      // borderRadius: '100%',\n\n    },\n\n  }\n  },\n  methods: {\n            startDragging(event){\n              if (event.button == 0) {\n                if (this.canMove && !this.editingFlag){\n                this.dragging = true;\n              this.offsetY = this.mousePosY - this.elementPosY;\n              this.offsetX = this.mousePosX - this.elementPosX;\n              this.draggingIntervalId = setInterval(() => {\n                        this.drag();\n                      }, 25);\n              }\n              }\n\n\n\n            },\n            stopDragging(event){\n              if (event.button == 0) {\n                this.dragging = false\n                clearInterval(this.draggingIntervalId)\n              }\n              },\n            drag(){\n              if (this.dragging){\n                this.elementPosX = this.mousePosX - this.offsetX;\n                this.elementPosY = this.mousePosY - this.offsetY;\n                this.baseStyle.top = this.elementPosY.toString() +'px';\n                this.baseStyle.left = this.elementPosX.toString() +'px';\n\n              }\n              },\n            editElementProps(){\n\n              if (this.adjustable) {\n                this.editingFlag = true;\n                this.originalWidth = this.baseStyle.width;\n                // this.baseStyle.width = '50px';\n                this.baseStyle.border = '3px dashed white '\n                this.startPosX = this.mousePosX;\n                this.startPosY = this.mousePosY;\n                this.editingIntervalId = setInterval(() => {\n                        this.resize();\n                      }, 25);\n              }\n            },\n            setElementProps(event){\n              if (event.key == \"Enter\"){\n                this.baseStyle.border = '0px';\n              this.editingFlag = false;\n              clearInterval(this.editingIntervalId)\n              }\n              else if (event.key== \"Escape\") {\n                this.baseStyle.border = '0px';\n              this.editingFlag = false;\n              clearInterval(this.editingIntervalId)\n                this.baseStyle.width = this.originalWidth;\n                  this.baseStyle.height = this.originalWidth;\n              }\n\n            },\n            resize(){\n              if (this.editingFlag){\n                var width = parseInt(this.baseStyle.width.split(\"px\")[0]) +(this.mousePosX - this.startPosX);\n                // var height = parseInt(this.baseStyle.width.split(\"px\")[0])+ (this.mousePosX - this.startPosX);\n                if (width <0) {\n                  width *= -1;\n                }\n                  // var biggerDimension = 0;\n                  // if (width >= height){\n                  //   biggerDimension = width;\n                  // } else {\n                  //   biggerDimension = height;\n                  // }\n\n                  if (width < 5){\n                    width = 5;\n                  }\n                  this.baseStyle.width = width.toString() + 'px';\n                  this.baseStyle.height = width.toString() + 'px';\n                  this.startPosX = this.mousePosX;\n\n              }\n\n            },\n\n  },\n\n\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}