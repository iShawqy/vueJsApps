{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1fdf32e8\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"progress\", {\n    class: \"progress\",\n    value: $data.progress,\n    max: \"100\"\n  }, null, 8 /* PROPS */, _hoisted_1);\n}","map":{"version":3,"mappings":";;;;uBACAA,oBAEW;IAFDC,KAAK,EAAC,UAAU;IAAEC,KAAK,EAAEC,cAAQ;IAAEC,GAAG,EAAC","names":["_createElementBlock","class","value","$data","max"],"sourceRoot":"","sources":["/Users/ihm/myDrive/private/learning_vue/one_app_multiple_components/src/components/questionaire/progressBar.vue"],"sourcesContent":["<template>\n<progress class=\"progress\" :value=\"progress\" max=\"100\">\n\n</progress>\n</template>\n\n<script>\nexport default {\nname: \"progressBar\",\n  props:[\"targetProgress\"],\n  data(){\n    return {\n      progress:0,\n      intervalId: null,\n      progressStep: 5,\n    }\n  },\n\n  methods: {\n  updateProgressBarSmooth(){\n\n    if (this.progress < this.targetProgress) {\n      this.progress += this.progressStep;\n    } else {\n      clearInterval(this.intervalId)\n    }\n\n  },\n\n  },\n\n  watch:{\n  targetProgress(newValue, oldValue){\n    if (newValue == 0){\n      this.progress = 0;\n    } else {\n      this.intervalId = setInterval(() => {\n              this.updateProgressBarSmooth();\n            }, 50);\n    }\n\n  }\n  }\n}\n</script>\n\n<style scoped>\n.progress{\n  width: 100%;\n  margin-top: 10px;\n  height: 30px;\n}\n.progress::-webkit-progress-value { background: #f6068a; }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}