{"ast":null,"code":"import { toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"cssStyle\",\n    style: _normalizeStyle([$data.baseStyle, $data.optionalStyle]),\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.changeColor && $options.changeColor(...args))\n  }, _toDisplayString($props.value), 5 /* TEXT, STYLE */);\n}","map":{"version":3,"mappings":";;uBACEA,oBAKM;IALDC,KAAK,EAAC,UAAU;IAAEC,KAAK,mBAAGC,eAAS,EAAEA,mBAAa;IAEjDC,OAAK,yCAAEC,qDAAW;sBAEtBC,YAAK","names":["_createElementBlock","class","style","$data","onClick","$options","$props"],"sourceRoot":"","sources":["/Users/ihm/myDrive/private/learning_vue/one_app_multiple_components/src/components/customButtons/appleCalculaterButton.vue"],"sourcesContent":["<template>\n  <div class=\"cssStyle\" :style=\"[baseStyle, optionalStyle]\"\n\n       @click=\"changeColor\"\n  >\n  {{value}}\n  </div>\n</template>\n\n<script>\nexport default {\nname: \"appleCalculaterButton\",\n  props: [\"value\", \"color\", \"backgroundColor\"],\n  data () {\n  return {\n    baseStyle: {\n      width: '35px',\n      height: '35px',\n      fontSize: '30px',\n      fontFamily: 'Arial',\n      border: 'none',\n      padding: '20px',\n      textAlign: 'center',\n      textDecoration: 'none',\n      display: 'inline-flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      // margin: '4px 2px',\n      borderRadius: '100%',\n    },\n\n    optionalStyle: {\n      color: this.color,\n      backgroundColor: this.backgroundColor,\n    },\n\n    hoverStyle: {\n      color: 'red',\n      backgroundColor: 'filter: brightness(0.85)',\n    },\n\n\n\n\n  }\n  },\n\n  methods: {\n  applyHoverStyle(){\n    this.optionalStyle.backgroundColor = this.hoverStyle.backgroundColor;\n    this.optionalStyle.color = this.hoverStyle.color;\n  },\n\n  applyOriginalStyle(){\n    this.optionalStyle.backgroundColor = this.backgroundColor;\n    this.optionalStyle.color = this.color;\n  },\n  changeColor(){\n\n    console.log('clicked')\n\n  },\n  },\n\n\n}\n</script>\n\n<style scoped>\n.cssStyle{\n  display: flex;\n}\n\n.cssStyle:hover{\n  background-color: yellow;\n}\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}