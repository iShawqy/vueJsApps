{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-be8c10f2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"mainContainer\"\n};\nconst _hoisted_2 = {\n  class: \"actionButtonsContainer\"\n};\nconst _hoisted_3 = {\n  class: \"actionButtonsContainer\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"BtnStyle btnBlack\"\n}, \" < \", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"BtnStyle btnBlack\"\n}, \" > \", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_questionaire_head = _resolveComponent(\"questionaire-head\");\n  const _component_add_question_form = _resolveComponent(\"add-question-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_questionaire_head, {\n    onFilled: $options.executeHeadFilled,\n    ref: \"refQestionaireHead\",\n    onQuestionaireHeadData: $options.updateQuestionaireHeadData\n  }, null, 8 /* PROPS */, [\"onFilled\", \"onQuestionaireHeadData\"]), _createVNode(_component_add_question_form, {\n    onFilled: $options.executeQuestionFormFilled,\n    ref: \"refAddQuestionForm\",\n    onFormData: $options.updateFormData\n  }, null, 8 /* PROPS */, [\"onFilled\", \"onFormData\"]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    class: \"BtnStyle btnBlue\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.addQuestion && $options.addQuestion(...args))\n  }, \" Submit \")]), _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"button\", {\n    class: \"BtnStyle btnRed\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.deleteQuestion && $options.deleteQuestion(...args))\n  }, \" delete question \"), _createElementVNode(\"button\", {\n    class: \"BtnStyle btnGreen\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.saveQuestionaire && $options.saveQuestionaire(...args))\n  }, \" save questionaire \"), _hoisted_5])]);\n}","map":{"version":3,"mappings":";;;EACKA,KAAK,EAAC;AAAe;;EAUnBA,KAAK,EAAC;AAAwB;;EAS9BA,KAAK,EAAC;AAAwB;gEACjCC,oBAES;EAFDD,KAAK,EAAC;AAAmB,GAAC,KAElC;gEAQAC,oBAES;EAFDD,KAAK,EAAC;AAAmB,GAAC,KAElC;;;;;uBAhCJE,oBAsCM,OAtCNC,UAsCM,GArCJC,aAIoBC;IAJAC,QAAM,EAAEC,0BAAiB;IAC1BC,GAAG,EAAC,oBAAoB;IACvBC,sBAAoB,EAAEF;mEAG1CH,aAGqBM;IAHDJ,QAAM,EAAEC,kCAAyB;IAClCC,GAAG,EAAC,oBAAoB;IACvBG,UAAQ,EAAEJ;uDAE9BN,oBAOM,OAPNW,UAOM,GALJX,oBAEO;IAFCD,KAAK,EAAC,kBAAkB;IAAGa,OAAK,yCAAEN,qDAAW;KAAE,UAEzD,KAKAN,oBAcM,OAdNa,UAcM,GAbJC,UAES,EACTd,oBAEO;IAFCD,KAAK,EAAC,iBAAiB;IAAGa,OAAK,yCAAEN,2DAAc;KAAE,mBAE3D,GACEN,oBAEO;IAFCD,KAAK,EAAC,mBAAmB;IAAEa,OAAK,yCAAEN,+DAAgB;KAAE,qBAE9D,GAEES,UAES","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_questionaire_head","onFilled","$options","ref","onQuestionaireHeadData","_component_add_question_form","onFormData","_hoisted_2","onClick","_hoisted_3","_hoisted_4","_hoisted_5"],"sourceRoot":"","sources":["/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/components/editableQuestionaire/createQuestionaire.vue"],"sourcesContent":["<template>\n<div class=\"mainContainer\">\n  <questionaire-head @filled=\"executeHeadFilled\"\n                     ref=\"refQestionaireHead\"\n                     @questionaireHeadData=\"updateQuestionaireHeadData\"\n  >\n  </questionaire-head>\n  <add-question-form @filled=\"executeQuestionFormFilled\"\n                     ref=\"refAddQuestionForm\"\n                     @formData=\"updateFormData\"\n  ></add-question-form>\n  <div class=\"actionButtonsContainer\">\n\n    <button class=\"BtnStyle btnBlue\"  @click=\"addQuestion\">\n    Submit\n  </button>\n\n\n  </div>\n\n  <div class=\"actionButtonsContainer\">\n    <button class=\"BtnStyle btnBlack\">\n      &lt;\n    </button>\n    <button class=\"BtnStyle btnRed\"  @click=\"deleteQuestion\">\n    delete question\n  </button>\n    <button class=\"BtnStyle btnGreen\" @click=\"saveQuestionaire\">\n    save questionaire\n  </button>\n\n    <button class=\"BtnStyle btnBlack\">\n      &gt;\n    </button>\n  </div>\n\n\n\n\n</div>\n</template>\n\n<script>\nimport questionaireHead from \"@/components/editableQuestionaire/questionaireHead\";\nimport addQuestionForm from \"@/components/editableQuestionaire/addQuestionForm\";\n\nexport default {\nname: \"createQuestionaire\",\ncomponents:{questionaireHead, addQuestionForm},\ndata(){\n  return {\n    headFilled: false,\n    questionFormFilled: false,\n    currentQuestionIndex: 0,\n    questionaire: {\n      title: \"\",\n      length: 0,\n      creator: \"\",\n      createdOn: \"\",\n      description: \"\",\n      questions : [\n        {\n          \"id\": 1,\n          \"question\": \"\",\n          \"choices\" : [],\n          \"correctAnswer\": \"\"\n        }\n      ]\n    },\n    questionaireHeadDefault: {\n      creator: '',\n      title: '',\n      description: '',\n    },\n    questionDefault: {\n      inputValue: '',\n        label: 'Question',\n        defaultValueToShow: 'ask a question',\n        width: '400px',\n    },\n    choicesDefault: [\n        {\n          type: 'choice',\n        inputValue: '',\n        label: 'Choice 1',\n        defaultValueToShow: 'Write choice 1',\n        width: '400px',\n          correctAnswer: false,\n      },\n        {\n          type: 'choice',\n        inputValue: '',\n        label: 'Choice 2',\n        defaultValueToShow: 'Write choice 2',\n        width: '400px',\n          correctAnswer: false,\n      },\n        {\n          type: 'choice',\n        inputValue: '',\n        label: 'Choice 3',\n        defaultValueToShow: 'Write choice 3',\n        width: '400px',\n          correctAnswer: false,\n      },\n        {\n          type: 'choice',\n        inputValue: '',\n        label: 'Choice 4',\n        defaultValueToShow: 'Write choice 4',\n        width: '400px',\n          correctAnswer: false,\n      }\n    ],\n  }\n},\nmethods:{\n  executeHeadFilled(filled){\n    this.headFilled = filled;\n  },\n  executeQuestionFormFilled(filled){\n    this.questionFormFilled = filled;\n  },\n\n  get(){\n    this.$refs.refQestionaireHead.emitData();\n    this.$refs.refAddQuestionForm.emitData();\n  },\n  updateQuestionaireHeadData(data){\n    this.questionaire.title = data.title;\n    this.questionaire.creator = data.creator;\n    this.questionaire.description = data.description;\n    console.log(data);\n  },\n\n  updateFormData(data){\n    console.log(data);\n  },\n\n  deleteQuestion(){\n    this.reset();\n  },\n\n\n\n  addQuestion(){\n    if (this.headFilled && this.questionFormFilled) {\n      this.get();\n      this.$toast.success('Question was added successfully', {\n        position: \"bottom\"\n      });\n    } else {\n      this.$toast.error('Please fill-in all data before you can move to the next question', {\n        position: \"bottom\"\n      });\n    }\n\n  },\n\n  reset() {\n\n    // this.$refs.refQestionaireHead.reset(this.questionaireHeadDefault);\n    this.$refs.refAddQuestionForm.reset([this.questionDefault, this.choicesDefault]);\n    },\n\n  saveQuestionaire(){\n    if (this.headFilled && this.questionFormFilled) {\n      console.log('saving questionaire!')\n    } else {\n      this.$toast.error('Please fill-in all data before you can save the questionaire', {\n        position: \"bottom\"\n      });\n    }\n  }\n\n\n\n}\n}\n</script>\n\n<style scoped>\n.mainContainer{\n  display: flex;\n  width: fit-content;\n  height: fit-content;\n  /*flex-direction: column;*/\n  /*justify-content: center;*/\n  /*align-items: center;*/\n}\n\n.actionButtonsContainer{\n  display: flex;\n  width: 400px;\n  height: 30px;\n  flex-direction: row;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  margin: 5px;\n}\n\n.BtnStyle{\n  height: 30px;\n  width: fit-content;\n  border-radius: 10px;\n  font-size: 20px;\n  font-family: Arial;\n  border: none;\n  text-align: center;\n  text-decoration: none;\n  opacity: 0.6;\n  transition: 0.3s;\n  margin: 5px;\n  color: white;\n}\n\n.BtnStyle:hover{\n  opacity: 1;\n\n}\n\n.btnGreen{\n  background-color: #00c631;\n}\n\n.btnBlue{\n  background-color: #0022ff;\n}\n.btnRed{\n  background-color: #ff0000;\n}\n\n.btnBlack{\n  width: 30px;\n  background-color: #000000;\n  color: white;\n}\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}