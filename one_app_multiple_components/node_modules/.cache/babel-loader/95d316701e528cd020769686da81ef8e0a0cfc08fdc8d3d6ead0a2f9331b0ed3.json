{"ast":null,"code":"import ResultContainer from \"@/components/calculatorContainers/resultContainer\";\nimport ButtonsContainer from \"@/components/calculatorContainers/ButtonsContainer\";\nexport default {\n  name: \"calculatorMain\",\n  components: {\n    ResultContainer,\n    ButtonsContainer\n  },\n  mounted() {\n    setInterval(() => {\n      this.checkResultLength();\n    }, 50);\n  },\n  data() {\n    return {\n      result: '0',\n      actionBtns: ['C', '+/-', '%', '÷', 'X', '-', '+', '='],\n      currentOperation: null,\n      resultInMemory: null\n    };\n  },\n  methods: {\n    checkResultLength() {\n      if (this.result.length > 11) {\n        this.result = this.result.slice(0, 11);\n      }\n    },\n    executeClick(value) {\n      if (this.actionBtns.includes(value)) {\n        console.log(value);\n        if (value == 'C') {\n          this.result = '0';\n          this.resultInMemory = null;\n          this.currentOperation = null;\n        } else if (value == '+/-') {\n          let oldResult = this.result;\n          if (!oldResult.includes('-')) {\n            if (oldResult != '0') {\n              this.result = '-';\n              this.result += oldResult;\n            }\n          }\n        } else if (value == '%') {\n          let tempResult = parseFloat(this.result);\n          tempResult = tempResult / 100;\n          this.result = tempResult.toString();\n        } else if (value == '÷' || value == 'X' || value == '-' || value == '+') {\n          if (this.currentOperation != null) {\n            this.flushResult();\n          }\n          this.resultInMemory = parseFloat(this.result);\n          this.currentOperation = value;\n        }\n      } else {\n        if (this.result == '0') {\n          this.result = value;\n        } else if (this.currentOperation == null) {\n          this.result += value;\n        } else {\n          this.result = value;\n        }\n      }\n    },\n    flushResult() {\n      if (this.currentOperation == '÷') {\n        this.result = (this.resultInMemory / parseFloat(this.result)).toString();\n      } else if (this.currentOperation == 'X') {\n        this.result = (this.resultInMemory * parseFloat(this.result)).toString();\n      } else if (this.currentOperation == '-') {\n        this.result = (this.resultInMemory - parseFloat(this.result)).toString();\n      } else if (this.currentOperation == '+') {\n        this.result = (this.resultInMemory + parseFloat(this.result)).toString();\n      }\n      this.resultInMemory = null;\n      this.currentOperation = null;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["ResultContainer","ButtonsContainer","name","components","mounted","setInterval","checkResultLength","data","result","actionBtns","currentOperation","resultInMemory","methods","length","slice","executeClick","value","includes","console","log","oldResult","tempResult","parseFloat","toString","flushResult"],"sourceRoot":"","sources":["/Users/ihm/myDrive/private/learning_vue/one_app_multiple_components/src/components/calculatorContainers/calculatorMain.vue"],"sourcesContent":["<template>\n\n  <div class=\"calculatorContainer\">\n    <resultContainer v-model:result=\"result\">\n\n    </resultContainer>\n    <buttons-container @btnClicked=\"executeClick\">\n\n    </buttons-container>\n  </div>\n\n</template>\n\n<script>\nimport ResultContainer from \"@/components/calculatorContainers/resultContainer\";\nimport ButtonsContainer from \"@/components/calculatorContainers/ButtonsContainer\";\n\n\nexport default {\n  name: \"calculatorMain\",\n  components: {ResultContainer, ButtonsContainer},\n  mounted() {\n    setInterval(() => {\n              this.checkResultLength();\n            }, 50);\n  },\n  data (){\n    return {\n      result: '0',\n      actionBtns: ['C', '+/-', '%', '÷',\n                    'X', '-', '+', '='],\n      currentOperation: null,\n      resultInMemory: null,\n    }\n  },\n  methods: {\n    checkResultLength(){\n      if (this.result.length >11){\n        this.result = this.result.slice(0, 11);\n      }\n    },\n    executeClick(value){\n      if (this.actionBtns.includes(value)){\n        console.log(value);\n        if (value == 'C') {\n          this.result = '0';\n          this.resultInMemory = null;\n          this.currentOperation = null;\n        }\n        else if (value == '+/-') {\n          let oldResult = this.result;\n          if (!oldResult.includes('-')){\n\n            if (oldResult != '0') {\n              this.result = '-';\n            this.result += oldResult;\n            }\n\n          }\n\n        }\n        else if (value == '%') {\n          let tempResult = parseFloat(this.result);\n          tempResult = tempResult/100;\n          this.result = tempResult.toString();\n        }\n        else if (value == '÷' || value=='X' || value=='-' || value == '+')  {\n          if (this.currentOperation != null) {\n            this.flushResult()\n          }\n            this.resultInMemory = parseFloat(this.result);\n            this.currentOperation = value\n\n\n        }\n      }\n      else {\n\n        if (this.result == '0'){\n          this.result = value;\n        } else if (this.currentOperation == null) {\n          this.result += value;\n        } else {\n          this.result = value;\n        }\n\n      }\n\n    },\n\n    flushResult(){\n      if (this.currentOperation == '÷') {\n        this.result = (this.resultInMemory/parseFloat(this.result)).toString()\n      } else if (this.currentOperation == 'X') {\n        this.result = (this.resultInMemory*parseFloat(this.result)).toString()\n      } else if (this.currentOperation == '-') {\n        this.result = (this.resultInMemory-parseFloat(this.result)).toString()\n      } else if (this.currentOperation == '+') {\n        this.result = (this.resultInMemory+parseFloat(this.result)).toString()\n      }\n\n\n      this.resultInMemory = null;\n        this.currentOperation = null;\n    },\n\n  },\n}\n</script>\n\n<style scoped>\n.calculatorContainer {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: flex-start;\n\n\n      /*border-radius: 20px;*/\n\n  }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}