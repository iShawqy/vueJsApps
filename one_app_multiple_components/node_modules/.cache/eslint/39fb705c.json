[{"/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/main.js":"1","/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/App.vue":"2","/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/components/chattingApp/mainChattingApp.vue":"3","/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/components/chattingApp/chatHead.vue":"4","/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/components/chattingApp/chatArea.vue":"5","/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/components/chattingApp/messageContainer.vue":"6","/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/components/chattingApp/messageInputArea.vue":"7"},{"size":166,"mtime":1672423379745,"results":"8","hashOfConfig":"9"},{"size":2055,"mtime":1672830486588,"results":"10","hashOfConfig":"9"},{"size":8344,"mtime":1672834246738,"results":"11","hashOfConfig":"9"},{"size":568,"mtime":1672835094527,"results":"12","hashOfConfig":"9"},{"size":1303,"mtime":1672831614125,"results":"13","hashOfConfig":"9"},{"size":1003,"mtime":1672830310288,"results":"14","hashOfConfig":"9"},{"size":2521,"mtime":1672836161591,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1i1t0tv",{"filePath":"19","messages":"20","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":8,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/main.js",[],[],"/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/App.vue",["35"],"<template>\n\n  <div class=\"mainContainer\" >\n<!--    <main-editable-questionaire>-->\n\n<!--    </main-editable-questionaire>-->\n    <main-chatting-app>\n\n    </main-chatting-app>\n\n<!--  <main-movable-elements>-->\n\n<!--  </main-movable-elements>-->\n<!--    <questions-answers-contianer>-->\n<!--    </questions-answers-contianer>-->\n<!--    <calculatorMain>-->\n<!--    </calculatorMain>-->\n<!--    <SignupForm form-title=\"1st form\" >-->\n<!--    </SignupForm>-->\n  </div>\n\n\n</template>\n\n<script>\n// import SignupForm from \"@/components/forms/SignupForm\";\n// import calculatorMain from \"@/components/calculatorContainers/calculatorMain\";\n// import questionsAnswersContianer from \"@/components/questionaire/questionsAnswersContianer\";\n// import mainMovableElements from \"@/components/movableElements/mainMovableElements\";\nimport axios from 'axios';\n// import mainEditableQuestionaire from \"@/components/editableQuestionaire/mainEditableQuestionaire\";\n\nimport mainChattingApp from \"@/components/chattingApp/mainChattingApp\";\n\n\n\n\nexport default {\n\n  name: 'App',\n  components: {mainChattingApp},\n\n\n\n\n  }\n\n\n</script>\n\n<style scoped>\n  body {\n    width: 100%;\n    height: 100%;\n  font-family: \"Lucinda Grande\";\n  padding: 0;\n  margin: 0;\n    background-color: #000000;\n    overflow: scroll;\n\n\n}\n\n\n  /*Uncomment this for centering your app in the middle of the screen*/\n  /*.mainContainer{*/\n  /*  position: absolute;*/\n  /*  display: flex;*/\n  /*  flex-direction: column;*/\n  /*  width: fit-content;*/\n  /*  height: fit-content;*/\n  /*  left: 50%;*/\n  /*    top: 50%;*/\n  /*    -webkit-transform: translate(-50%, -50%);*/\n  /*    transform: translate(-50%, -50%);*/\n  /*}*/\n\n  /*Uncomment this for allowing your app to use the full screen*/\n    .mainContainer{\n    position: absolute;\n    /*display: flex;*/\n    /*flex-direction: column;*/\n    width: 100%;\n    height: 100%;\n      /*background-color: black;*/\n    /*left: 50%;*/\n    /*  top: 50%;*/\n    /*  -webkit-transform: translate(-50%, -50%);*/\n    /*  transform: translate(-50%, -50%);*/\n  }\n\n\n\n\n\n\n\n\n\n</style>\n\n",[],"/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/components/chattingApp/mainChattingApp.vue",["36","37","38","39","40","41","42","43"],"<template>\n<div class=\"mainAppContainer\">\n  <div class=\"homeViewContainer\">\n    <div class=\"homeView\" v-if=\"!ready\">\n  <div class=\"labelSelectContainer\">\n      <label class=\"label\" for=\"comboBox\">Who are you?</label>\n  <select  class=\"selectStyle\" id=\"comboBox\" v-model=\"chatterName\"\n           @change=\"selectChatter($event)\">\n  <option disabled value=\"\">Please select who you are</option>\n  <option  v-for=\"user in users\">{{user.name}}</option>\n</select>\n\n    </div>\n\n  <div class=\"labelSelectContainer\">\n      <label class=\"label\" for=\"comboBox1\">Chat with:</label>\n  <select  class=\"selectStyle\" id=\"comboBox1\" v-model=\"chatteeName\"\n  @change=\"selectChattee($event)\">\n  <option disabled value=\"\">Please select who you want to chat with</option>\n  <option  v-for=\"chatteeUser in chattees\">{{chatteeUser.name}}</option>\n</select>\n\n    </div>\n</div>\n  </div>\n\n  <div class=\"chatViewContainer\" v-if=\"ready\">\n    <chat-head :chattee=\"chatteeName\" :status=\"chattee.status\" v-if=\"ready\">\n    </chat-head>\n    <chat-area :messages=\"messages\"\n               :chatterName=\"chatterName\"\n               :chatteeName=\"chatteeName\"\n               ref=\"refChatArea\"\n\n    ></chat-area>\n    <div class=\"inputArea\">\n      <message-input-area :chatter=\"chatter\" :chattee=\"chattee\" ref=\"msgInputArea\"></message-input-area>\n      <button class=\"BtnStyle btnGreen\" v-if=\"ready\" @click=\"sendMessage\">\n      Send\n    </button>\n\n    </div>\n\n\n\n\n  </div>\n  <button class=\"BtnStyle btnRed\" v-if=\"ready\" @click=\"logOut\">\n      Log-out\n    </button>\n\n</div>\n\n\n</template>\n\n<script>\nimport axios from \"axios\";\nimport chatHead from \"@/components/chattingApp/chatHead\";\nimport chatArea from \"@/components/chattingApp/chatArea\";\nimport messageInputArea from \"@/components/chattingApp/messageInputArea\";\n\nexport default {\nname: \"mainChattingApp\",\ncomponents: {chatHead, chatArea, messageInputArea},\nmounted () {\n  this.fetchUsers();\n  this.createChatters();\n  // this.fetchMessages();\n  setInterval(this.fetchLatestMessages, 100);\n  setInterval(this.updateChatteeStatus, 500);\n\n\n},\ndata(){\n  return {\n    users: [],\n    chatterName: '',\n    chatter: {},\n    chatteeName: '',\n    chattee: {},\n    chatters: [],\n    chattees: [],\n    ready: false,\n    usersUrl: \"http://localhost:3004/users\",\n    messagesUrl: \"http://localhost:3004/messages\",\n    messages: [],\n    lastMessageId: 0,\n    newMessages: false,\n    chatStarted: false,\n  }\n},\nmethods: {\n  fetchUsers(){\n    axios.get(this.usersUrl)\n    .then(response => {\n      this.users = response.data;\n      this.createChatters();\n    })\n    .catch( error => {\n      console.log(error)\n    })\n  },\n  // fetchMessages(){\n  //   axios.get(this.messagesUrl)\n  //   .then(response => {\n  //     this.messages = response.data;\n  //     this.createChatters();\n  //\n  //   })\n  //   .catch( error => {\n  //     console.log(error)\n  //   })\n  // },\n  fetchLatestMessages(){\n    if (this.chatStarted) {\n      axios.get(this.messagesUrl)\n    .then(response => {\n      var recievedMsgs = response.data;\n      var filteredMsgs = [];\n      for (let i=0; i<recievedMsgs.length; i++){\n        if (recievedMsgs[i].creator == this.chatterName && recievedMsgs[i].destination == this.chatteeName){\n          filteredMsgs.push(recievedMsgs[i])\n        } else if (recievedMsgs[i].creator == this.chatteeName && recievedMsgs[i].destination == this.chatterName){\n          filteredMsgs.push(recievedMsgs[i])\n        }\n      }\n      this.messages = filteredMsgs;\n      for (let i=0; i<this.messages.length; i++) {\n        if (this.messages[i].id > this.lastMessageId) {\n          this.newMessages = true;\n          this.lastMessageId = this.messages[i].id\n\n        }\n      }\n      if (this.newMessages){\n         this.$refs.refChatArea.scrollToLastMessage(this.lastMessageId);\n         this.newMessages = false;\n      }\n\n\n\n\n    })\n    .catch( error => {\n      console.log(error)\n    })\n    }\n\n  },\n  createChatters(){\n\n    this.chatters = [];\n    for (let i=0; i<this.users.length; i++) {\n      this.chatters.push(this.users[i]);\n    }\n  },\n  selectChattee(event){\n    for (let i=0; i<this.users.length; i++) {\n      if (this.users[i].name == this.chatteeName) {\n        this.chattee = this.users[i];\n      }\n    }\n\n    this.startChat();\n\n  },\n  selectChatter(event){\n    for (let i=0; i<this.users.length; i++) {\n      if (this.users[i].name == this.chatterName) {\n        this.chatter = this.users[i];\n      }\n    }\n    this.updateChattersChatteesLists();\n  },\n  updateChattersChatteesLists(){\n    this.chattees = [];\n    for (let i=0; i<this.users.length; i++) {\n      if (this.users[i].name != this.chatterName) {\n        this.chattees.push(this.users[i]);\n      }\n\n    }\n  },\n  startChat(){\n    this.chatter.status = 'Online'\n    axios({\n        method: 'put',\n        url:this.usersUrl + '/' + this.chatter.id,\n        data: this.chatter\n      })\n      .then(response => {\n\n        this.$toast.success('You are online',  {\n        position: \"bottom\"})\n      })\n\n      .catch(error => {\n\n        this.$toast.error('Error while logging you in', {\n        position: \"bottom\"});\n      })\n    this.ready=true;\n    this.chatStarted = true;\n  },\n  logOut(){\n    this.chatter.status = 'Offline'\n    axios({\n        method: 'put',\n        url:this.usersUrl + '/' + this.chatter.id,\n        data: this.chatter\n      })\n      .then(response => {\n\n        this.$toast.success('You are Offline',  {\n        position: \"bottom\"})\n      })\n      .catch(error => {\n\n        this.$toast.error('Error while logging you in', {\n        position: \"bottom\"});\n      })\n    this.reset();\n\n  },\n  reset(){\n    this.users = [];\n    this.chatterName = '';\n    this.chatter = {};\n    this.chatteeName = '';\n    this.chattee = {};\n    this.chatters = [];\n    this.chattees = [];\n    this.ready =  false;\n    this.chatStarted = false;\n    this.lastMessageId = 0;\n    this.newMessages = false;\n    this.fetchUsers();\n    // this.fetchMessages();\n    this.createChatters();\n  },\n  sendMessage(){\n    this.$refs.msgInputArea.sendMessage();\n  },\n  updateChatteeStatus(){\n    if (this.chatStarted){\n      axios.get(this.usersUrl+'/'+this.chattee.id)\n    .then(response => {\n      console.log(response.data.status)\n      this.chattee.status = response.data.status;\n    })\n    .catch( error => {\n      console.log(error)\n    })\n    }\n\n  }\n}\n}\n</script>\n\n<style scoped>\n\n\n.mainAppContainer{\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-color: #243847;\n}\n.homeViewContainer{\n  display: flex;\n  width: fit-content;\n  height: fit-content;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  /*background-color: black;*/\n  left: 50%;\n  top: 50%;\n  -webkit-transform: translate(-50%, -50%);\n  transform: translate(-50%, -50%);\n\n}\n\n.chatViewContainer{\n  display: flex;\n  width: 80vw;\n  height: 80vh;\n  min-width: 600px;\n  min-height: 600px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  background-color: rgb(32,44,51);\n  left: 50%;\n  top: 50%;\n  -webkit-transform: translate(-50%, -50%);\n  transform: translate(-50%, -50%);\n  border-radius: 10px;\n}\n\n\n\n.homeView{\n  display: flex;\n  width: fit-content;\n  height: fit-content;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: #176b5b;\n  border-radius: 10px;\n  color: white;\n\n}\n\n.labelSelectContainer{\n  display: flex;\n  width: 800px;\n  height: fit-content;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n}\n\n.label{\n  font-size: 20px;\n  font-family: Arial;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  margin-left: 5px;\n  margin-right: 5px;\n}\n.selectStyle{\n  width: 350px;\n  height: 30px;\n  border-radius: 10px;\n  margin: 5px;\n  color: black;\n  border-color: green;\n   font-size: 16px;\n  font-family: Arial;\n}\n\n.BtnStyle{\n  height: 30px;\n  width: fit-content;\n  border-radius: 10px;\n  font-size: 20px;\n  font-family: Arial;\n  border: none;\n  text-align: center;\n  text-decoration: none;\n  opacity: 0.6;\n  transition: 0.3s;\n  margin: 5px;\n  color: white;\n}\n.BtnStyle:hover{\n  opacity: 1;\n\n}\n.btnRed{\n  background-color: #ff0000;\n}\n\n.btnGreen{\n  height: 90%;\n  background-color: #26c800;\n}\n\n.inputArea{\n  display: flex;\n  width: 100%;\n  height: fit-content;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n}\n</style>","/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/components/chattingApp/chatHead.vue",[],"/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/components/chattingApp/chatArea.vue",["44"],"<template>\n<div class=\"chatAreaMainContainer\" id=\"chatAreaElement\">\n  <message-container v-for=\"message in messages\"\n                     :message=\"message\"\n                     :key=\"message.id\"\n                      :id=\"message.id.toString()\"\n                     :is-chatter=\"checkIsChatter(message)\">\n  </message-container>\n\n</div>\n</template>\n\n<script>\nimport messageContainer from \"@/components/chattingApp/messageContainer\";\nimport MessageContainer from \"@/components/chattingApp/messageContainer\";\nexport default {\nname: \"chatArea\",\n  components: {MessageContainer},\n  props: [\"messages\", \"chatterName\", \"chatteeName\"],\n\n  // data(){\n  // // return {\n  // //   isChatter: false,\n  // // }\n  // // },\n  methods:{\n  checkIsChatter(message){\n\n    if (message.creator == this.chatterName){\n     return true\n    } else {\n      return false\n    }\n\n  },\n  scrollToLastMessage(lastMsgId){\n    var element = document.getElementById(lastMsgId.toString());\n    element.scrollIntoView({behavior: \"smooth\"});\n  }\n\n  }\n}\n</script>\n\n<style scoped>\n.chatAreaMainContainer{\n  display: flex;\n  width: 100%;\n  height: 90%;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  background-color: #102520;\n  /*border-radius: 10px;*/\n  color: #000000;\n  overflow-y: scroll;\n}\n</style>","/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/components/chattingApp/messageContainer.vue",[],"/Users/ihm/myDrive/private/git_vuejs_apps/one_app_multiple_components/src/components/chattingApp/messageInputArea.vue",["45","46","47","48","49","50"],{"ruleId":"51","severity":2,"message":"52","line":30,"column":8,"nodeType":"53","messageId":"54","endLine":30,"endColumn":13},{"ruleId":"55","severity":2,"message":"56","line":10,"column":3,"nodeType":"57","endLine":10,"endColumn":34},{"ruleId":"55","severity":2,"message":"56","line":20,"column":3,"nodeType":"57","endLine":20,"endColumn":44},{"ruleId":"51","severity":2,"message":"58","line":158,"column":17,"nodeType":"53","messageId":"54","endLine":158,"endColumn":22},{"ruleId":"51","severity":2,"message":"58","line":168,"column":17,"nodeType":"53","messageId":"54","endLine":168,"endColumn":22},{"ruleId":"51","severity":2,"message":"59","line":192,"column":13,"nodeType":"53","messageId":"54","endLine":192,"endColumn":21},{"ruleId":"51","severity":2,"message":"60","line":198,"column":14,"nodeType":"53","messageId":"54","endLine":198,"endColumn":19},{"ruleId":"51","severity":2,"message":"59","line":213,"column":13,"nodeType":"53","messageId":"54","endLine":213,"endColumn":21},{"ruleId":"51","severity":2,"message":"60","line":218,"column":14,"nodeType":"53","messageId":"54","endLine":218,"endColumn":19},{"ruleId":"51","severity":2,"message":"61","line":14,"column":8,"nodeType":"53","messageId":"54","endLine":14,"endColumn":24},{"ruleId":"51","severity":2,"message":"59","line":54,"column":15,"nodeType":"53","messageId":"54","endLine":54,"endColumn":23},{"ruleId":"51","severity":2,"message":"60","line":60,"column":16,"nodeType":"53","messageId":"54","endLine":60,"endColumn":21},{"ruleId":"62","severity":2,"message":"63","line":80,"column":9,"nodeType":"64","endLine":80,"endColumn":42},{"ruleId":"62","severity":2,"message":"63","line":82,"column":9,"nodeType":"64","endLine":82,"endColumn":39},{"ruleId":"51","severity":2,"message":"59","line":89,"column":13,"nodeType":"53","messageId":"54","endLine":89,"endColumn":21},{"ruleId":"51","severity":2,"message":"60","line":90,"column":14,"nodeType":"53","messageId":"54","endLine":90,"endColumn":19},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","vue/require-v-for-key","Elements in iteration expect to have 'v-bind:key' directives.","VStartTag","'event' is defined but never used.","'response' is defined but never used.","'error' is defined but never used.","'messageContainer' is defined but never used.","vue/no-mutating-props","Unexpected mutation of \"chatter\" prop.","AssignmentExpression"]